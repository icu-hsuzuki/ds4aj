[{"path":"index.html","id":"この文書について","chapter":"この文書について","heading":"この文書について","text":"データサイエンスを始めてみませんか。データサイエンスは、広い意味をもったことばで、一口に、学び始めると言っても、さまざまな始め方があると思います。本書では、そのひとつを提案するとともに、共に学んでいきたいと願って、書き始めました。みなさんも一緒にデータサイエンスを学んでみませんか。","code":""},{"path":"index.html","id":"著者について","chapter":"この文書について","heading":"著者について","text":"著者は、大学の学生の時以来、数学を学び、大学で教え、2019年春に退職。それ以来、少しずつ、データサイエンスを学んでいます。幸運にも、2019年9月の日本数学会教育委員会主催教育シンポジウムで、「文理共通して行う数理・データサイエンス教育」という題で、話す機会が与えられ、その後、あることが契機となり、2020年度から、毎年、冬学期（12月から2月）に、大学院一般向け（分野の指定なし）の授業、「研究者のためのデータ分析（Data Analysis Researchers）」を担当しています。複数の教員で担当しますが、基本的な部分は、わたしが教えています。受講生は20人程度で、殆どが、外国人。それも、多国籍で、多くても一国から三人程度。英語で教えています。","code":""},{"path":"index.html","id":"コンピュータ言語について","chapter":"この文書について","heading":"コンピュータ言語について","text":"統計解析のために開発された R を使います。いずれは、python についても触れたいと思いますが、プログラミングの経験がない方も含めて、最初にデータサイエンスを学ぶには、R は最適だと考えています。特に、R Studio IDE（integrated development environment, 統合開発環境） で、R を簡単に使うことができます。さらに、簡単なものであれば、Posit Cloud で試したり、共有することも可能です。また、再現性（Reproducibility）や、なにを実行しているのかの説明を同時に記述すること（Literate Programming）は、非常に重要ですが、その記述も、R Markdown によって、可能になっています。この文書も、R Markdown の一つの形式の、bookdown を利用しています。最後に、Bookdown に関連して、膨大な数の、参考書も、無償で提供されており、オンラインで読むことができることも、R をお薦めする理由です。ただし、日本語のものは、まだ十分とは言えない状況です。この文書を書き始めたのも、すこしでも、お役に立つことができればとの、気持ちが背景にあります。","code":""},{"path":"index.html","id":"言語について","chapter":"この文書について","heading":"言語について","text":"ご覧の通り、本書は、日本語で書かれています。用語は、英語、あるいは、英語を追記、または、英語をカタカナにしただけのものを使用する可能性が大きいですが、説明は、極力、日本語で書いていく予定です。しかし、基本的に、コード（プログラムの記述）には、日本語を使わないで書いていく予定です。とくに、初心者にとっては、日本語の扱いは、負担になることが多いからです。最近は、コードの中で日本語を使用しても、ほとんど、問題は起きないように思います。そうであっても、世界の人の共通言語として、プログラム言語を学んでいくときには、日本語を使わないことは意義があると思います。少し慣れてきて、日本語のデータなどを扱うときには、コードにも日本語を使う必要ができていますから、日本語の利用についても、追って説明していきます。APPENDIX を参照してください。最初は、みなさんも、変数（variable）や、オブジェクト（object）に名前をつけるときは、半角英数を使い、日本語は、使わないようにすることをお勧めします。","code":""},{"path":"index.html","id":"pdfepub-版について","chapter":"この文書について","heading":"PDF、ePub 版について","text":"実は、PDF 版と、ePub 版も作成しています。しかし、扱いが異なるので、ある程度完成するまでは、ほとんど更新しない予定です。いずれ、これらも、更新したものを公開できると良いのですが。試験公開版は、下のリンクにあります。PDF 版ePub 版","code":""},{"path":"index.html","id":"参考","chapter":"この文書について","heading":"参考","text":"この電子書籍以外にも、データ・サイエンスについて幾つかの文書をインターネット上に公開しています。わたしのホームページにリストしてありますので、ご興味のあるかたは、参考にしてください。データサイエンスを学びませんか・データサイエンス教育","code":""},{"path":"introduction.html","id":"introduction","chapter":"1 はじめに","heading":"1 はじめに","text":"","code":""},{"path":"introduction.html","id":"データサイエンスとは","chapter":"1 はじめに","heading":"1.1 データサイエンスとは","text":"Data Science: データ (Data) を活用して課題を発見・探求し、適切な解決策を探る意思決定のための科学（Decision Science）で、 エンピリカル（Empirical Study）すなわち、理論ではなく、実証性を特徴とする。 データから得られる特徴を表示するとともに、数理モデルを適用し・機械学習などで評価し・アルゴリズムを策定する数理的思考を通して得られた結果を、可視化などによってコミュニケーションをおこない、共有し、他者の意見を聞き理解する努力をしながら、さらに課題について、あらたにデータを活用して考え、検証し、適切な解決策がもたらす新たな課題も予測しながら、調整をはかる。上に書いたのは、ひとつの表現ですが、AI にも表題の「データサイエンスとは」と聞いてみると、次のような答えをしてくれました。ChatGPT (2023.6.3)データサイエンス（Data Science）は、データを解析し、洞察を得るための科学的な手法やツールの開発と応用を含む、多様なスキルセットを組み合わせた領域です。データサイエンスは、統計学、機械学習、データマイニング、データ可視化などの技術や手法を利用して、大量のデータからパターンやトレンドを抽出し、意思決定に役立つ洞察を導き出すことを目指します。データサイエンスのプロセスは、データの収集、前処理、分析、モデリング、評価、展開などのステップで構成されます。最初に、関連するデータを収集し、必要な形式に整理するために前処理を行います。次に、統計的な手法や機械学習アルゴリズムを使用してデータを分析し、予測モデルやパターンを発見します。モデルのパフォーマンスを評価し、必要に応じて改善を行い、最終的に洞察をビジネスや科学の現場に適用することが目標です。データサイエンスは、さまざまな分野で活用されています。例えば、ビジネス分野では、マーケティングキャンペーンの最適化、顧客セグメンテーション、需要予測などに利用されます。医療分野では、病気の診断や治療計画の最適化、新薬の開発などに応用されます。また、交通や都市計画、環境保護、金融など、さまざまな領域でデータサイエンスの手法が活用されています。データサイエンスには、数学や統計学、プログラミング、データベース管理、機械学習、ビジュアル化などの幅広いスキルが必要です。また、データの解釈やビジネス理解、コミュニケーション能力も重要な要素です。データサイエンティストやデータアナリストは、これらのスキルを駆使して、データを活用し、意思決定のサポートや新たな知見の発見に貢献します。ちょっと日本語がぎこちない感じもするので、英語での問いと答えも書いておきましょう。datascience?Data science multidisciplinary field involves using scientific methods tools analyze data extract insights. encompasses wide range skills, including statistics, machine learning, data mining, data visualization, explore understand complex data sets.core, data science involves collecting, organizing, cleaning, processing large volumes data uncover patterns, trends, correlations. applies various statistical techniques algorithms gain meaningful insights make informed decisions. Data scientists employ exploratory data analysis, hypothesis testing, predictive modeling extract valuable information data generate actionable recommendations.Data science finds applications numerous industries domains. widely used business market research, customer segmentation, demand forecasting, personalized recommendations. healthcare, data science aids disease diagnosis, treatment optimization, drug discovery. areas data science applied include transportation urban planning, environmental conservation, finance, social sciences.excel data science, one needs solid foundation mathematics, statistics, programming, data manipulation. Proficiency programming languages Python R crucial data manipulation building models. Strong analytical skills, critical thinking, ability communicate findings effectively also essential data scientists.Data science rapidly evolving field, driven advancements technology increasing availability data. plays crucial role leveraging data assets gain insights make data-driven decisions various industries.領域（multidisciplinary field）という言葉も使われていますから、かなりの広がりをもった分野です。","code":""},{"path":"introduction.html","id":"なぜデータサイエンスが最近注目されているのか","chapter":"1 はじめに","heading":"1.1.1 なぜ、データサイエンスが最近注目されているのか","text":"では、なぜ、最近、急に、データサイエンスが注目されるようになったのでしょうか。みなさんが、少しずつ学びながら、考えていただくのが一番よいと思いますが、いくつか理由があると思います。個人的には、インターネットの普及や、さまざまなセンサーの普及にも助けられて、膨大なデータが得られるようになり、さらに、コンピュータの進化により、大きなデータであっても、それらを、扱うことができるようになったこと。それによって、複雑な問題であっても、その解決と意思決定に関して、データを使って根拠を明確にした（evidence based）議論を支援することが可能になったことだと考えています。付け加えておかないといけないと考えていることがもう一つあります。それは、問題解決と書きましたが、課題と向き合うという表現でもよいと思います。これまでは、因果関係が単純な課題については、根拠をしめして、ある程度議論できましたが、実際の世の中の問題は、非常に多くの要素が相互に絡み合っており、それらを、調整すると、結果にも、さまざまな変化が生じるため、調整も非常に困難だと言うことも挙げられると思います。それだけ複雑な課題と向き合うには、データを丁寧にみることがが必要で、その中で、さまざまな指標に関して評価値が高いものを選択することが可能になって来たと言うことです。そのことが、もう一歩進んで、AI（Artificial Intelligence 人工知能）を支える技術に使われています。ここで使った、ChatGPT の GPT は、Generative Pre-trained Transformer の略ですが、LLM（Large Language Model）によって、自然なことばを生成できるような技術が実用段階に入っています。たとえば、「データサイエンスが最近注目されているのは…」とすると、この後に続く言葉として、評価値が高いものを、選択してれる。それを、さらに、調整して、応答とすることが可能になっているのです。少し長いですが、もう少し、踏み込んで説明していますので、ChatGPT の応答を下に挙げておきましょう。ChatGPT (2023.6.3)データサイエンスが最近注目されている理由は、以下の要素によるものです。ビッグデータの増加: 近年、デジタル技術の進歩により、膨大な量のデータが生成されるようになりました。ウェブサイトのアクセスログ、ソーシャルメディアの投稿、センサーデータ、トランザクションデータなど、多様なソースから大量のデータが利用可能です。データサイエンスは、これらのビッグデータを活用して洞察を得ることができるため、需要が高まっています。ビッグデータの増加: 近年、デジタル技術の進歩により、膨大な量のデータが生成されるようになりました。ウェブサイトのアクセスログ、ソーシャルメディアの投稿、センサーデータ、トランザクションデータなど、多様なソースから大量のデータが利用可能です。データサイエンスは、これらのビッグデータを活用して洞察を得ることができるため、需要が高まっています。技術の進歩: データサイエンスを支える技術の進歩も、その注目を高めています。クラウドコンピューティングの発展やオープンソースのツールとライブラリの普及により、データの収集、処理、分析が容易になりました。さらに、機械学習や深層学習のアルゴリズムの改善や高速化も進んでおり、より高度な予測モデルやパターンの抽出が可能になっています。技術の進歩: データサイエンスを支える技術の進歩も、その注目を高めています。クラウドコンピューティングの発展やオープンソースのツールとライブラリの普及により、データの収集、処理、分析が容易になりました。さらに、機械学習や深層学習のアルゴリズムの改善や高速化も進んでおり、より高度な予測モデルやパターンの抽出が可能になっています。ビジネス価値の認識: データは企業にとって貴重な資産であり、データを活用することで競争優位を得ることができます。データサイエンスを活用することで、マーケットのニーズやトレンドを理解し、効果的なマーケティング戦略を立てることができます。顧客行動の予測やセグメンテーションを行い、顧客満足度や収益性を向上させることも可能です。ビジネス価値の認識: データは企業にとって貴重な資産であり、データを活用することで競争優位を得ることができます。データサイエンスを活用することで、マーケットのニーズやトレンドを理解し、効果的なマーケティング戦略を立てることができます。顧客行動の予測やセグメンテーションを行い、顧客満足度や収益性を向上させることも可能です。知識と人材の需要: データサイエンスの分野での知識とスキルを持つ人材への需要が高まっています。企業や組織は、データサイエンスの専門家を雇用して、データの分析と活用を行いたいと考えています。また、データサイエンスは学問としても注目を浴びており、大学や研究機関ではデータサイエンスに関連するプログラムや研究が増えています。知識と人材の需要: データサイエンスの分野での知識とスキルを持つ人材への需要が高まっています。企業や組織は、データサイエンスの専門家を雇用して、データの分析と活用を行いたいと考えています。また、データサイエンスは学問としても注目を浴びており、大学や研究機関ではデータサイエンスに関連するプログラムや研究が増えています。これらの要素により、データサイエンスはビジネスや科学の分野で重要な役割を果たしており、その注目度が高まっています。以下に、その具体的な理由をいくつか挙げます。創新と競争力の追求: データサイエンスは新たなビジネスモデルや製品の開発に貢献します。データを活用して市場のトレンドや消費者のニーズを洞察し、それに基づいて新しいサービスや製品を開発することが可能です。企業はデータを駆使して競争力を高め、革新的なソリューションを提供することを求めています。創新と競争力の追求: データサイエンスは新たなビジネスモデルや製品の開発に貢献します。データを活用して市場のトレンドや消費者のニーズを洞察し、それに基づいて新しいサービスや製品を開発することが可能です。企業はデータを駆使して競争力を高め、革新的なソリューションを提供することを求めています。問題解決と意思決定の支援: データサイエンスは複雑な問題を解決し、意思決定をサポートする上で重要なツールとなっています。データの分析により、事実に基づいた洞察が得られ、ビジネス上の課題や機会を特定することができます。データサイエンスの手法はリスク評価や予測、最適化などにも応用され、効果的な戦略立案や意思決定を支援します。問題解決と意思決定の支援: データサイエンスは複雑な問題を解決し、意思決定をサポートする上で重要なツールとなっています。データの分析により、事実に基づいた洞察が得られ、ビジネス上の課題や機会を特定することができます。データサイエンスの手法はリスク評価や予測、最適化などにも応用され、効果的な戦略立案や意思決定を支援します。パーソナライズされた体験の提供: データサイエンスは顧客の行動や好みを理解し、パーソナライズされた体験を提供するための手段としても利用されます。顧客データや行動履歴を分析し、個別のニーズや関心に基づいたオファーや推奨を行うことで、顧客満足度や忠誠度を向上させることができます。パーソナライズされた体験の提供: データサイエンスは顧客の行動や好みを理解し、パーソナライズされた体験を提供するための手段としても利用されます。顧客データや行動履歴を分析し、個別のニーズや関心に基づいたオファーや推奨を行うことで、顧客満足度や忠誠度を向上させることができます。社会的なインパクトと公共政策への応用: データサイエンスは社会的な課題や公共政策の分析にも役立ちます。例えば、交通渋滞の予測や都市計画の最適化、犯罪予測や防犯対策の強化などにデータサイエンスが活用されています。データ駆動のアプローチは社会のさまざまな側面において効果的な解決策を提供する可能性があります。社会的なインパクトと公共政策への応用: データサイエンスは社会的な課題や公共政策の分析にも役立ちます。例えば、交通渋滞の予測や都市計画の最適化、犯罪予測や防犯対策の強化などにデータサイエンスが活用されています。データ駆動のアプローチは社会のさまざまな側面において効果的な解決策を提供する可能性があります。これらの要素により、データサイエンスはビジネスや科学の分野で重要な役割を果たしており、その注目度が高まっています。以下に、その具体的な理由をいくつか挙げます。自動化と効率化の追求: データサイエンスは、業務プロセスの自動化や効率化にも貢献します。データの分析と予測モデルの活用により、タスクの自動化や最適なリソースの割り当てが可能となります。これにより、人的な作業負荷を軽減し、生産性を向上させることができます。自動化と効率化の追求: データサイエンスは、業務プロセスの自動化や効率化にも貢献します。データの分析と予測モデルの活用により、タスクの自動化や最適なリソースの割り当てが可能となります。これにより、人的な作業負荷を軽減し、生産性を向上させることができます。組織内のデータ文化の普及: データサイエンスの注目度の高まりに伴い、企業や組織においてデータ文化の重要性が認識されています。データサイエンスの手法やアプローチを組織全体で活用し、データに基づいた意思決定や問題解決を行うことが求められています。組織内でのデータの収集、管理、分析の能力向上に取り組むことで、競争力を高めることができます。組織内のデータ文化の普及: データサイエンスの注目度の高まりに伴い、企業や組織においてデータ文化の重要性が認識されています。データサイエンスの手法やアプローチを組織全体で活用し、データに基づいた意思決定や問題解決を行うことが求められています。組織内でのデータの収集、管理、分析の能力向上に取り組むことで、競争力を高めることができます。専門化と職業の多様化: データサイエンスの注目度の高まりに伴い、関連する職業や専門化も増えています。データサイエンティスト、データアナリスト、機械学習エンジニアなどの役割が求められるようになりました。また、データサイエンスを支えるツールやプラットフォームの開発も進んでおり、それに関連する職業やスキルも増加しています。専門化と職業の多様化: データサイエンスの注目度の高まりに伴い、関連する職業や専門化も増えています。データサイエンティスト、データアナリスト、機械学習エンジニアなどの役割が求められるようになりました。また、データサイエンスを支えるツールやプラットフォームの開発も進んでおり、それに関連する職業やスキルも増加しています。総じて、データサイエンスの注目度が高まっている理由は、データの増加、技術の進歩、ビジネス価値の認識、創新と競争力の追求、問題解決と意思決定の支援、パーソナライズされた体験の提供、社会的なインパクトと公共政策への応用、自動化と効率化の追求、組織内のデータ文化の普及、専門化と職業の多様化など、さまざまな要素が重なっています。データサイエンスは、ビジネスや科学の領域でデータの価値を最大限に引き出すための力強いツールとなっており、今後もその重要性と注目度は高まっていくことが予想されます。","code":""},{"path":"introduction.html","id":"なぜ一人ひとりがデータサイエンスを学ぶ必要があるのでしょうか","chapter":"1 はじめに","heading":"1.1.2 なぜ、一人ひとりが、データサイエンスを、学ぶ必要があるのでしょうか","text":"専門家に任せてはいけないのでしょうか。個人的には、次のように考えています。非常に広い範囲の課題に関係している課題に、データサイエンスが使われるだけではなく、その背後にある、単純な、因果関係ではない、考え方を、理解する必要があることが挙げられると思います。さらに、わたしが特に大切だと考えているのは、個人のコンピュータでも、十分に利用可能であること、パブリックデータとか、オープンデータと言われる、誰でも利用できるデータが、使いやすい形で、提供されていると言うことです。ChatGPT (2023.6.3)一人ひとりがデータサイエンスを学ぶ必要がある理由は、以下のような点が挙げられます。データリテラシーの重要性: データは現代社会においてますます重要な役割を果たしています。データに基づく意思決定や問題解決は、個人の日常生活から組織や社会の活動まで広がっています。データサイエンスを学ぶことで、データを扱うスキルや知識を身につけることができます。データを理解し、適切に分析して活用する能力は、個人の能力向上や自己啓発にも繋がります。データリテラシーの重要性: データは現代社会においてますます重要な役割を果たしています。データに基づく意思決定や問題解決は、個人の日常生活から組織や社会の活動まで広がっています。データサイエンスを学ぶことで、データを扱うスキルや知識を身につけることができます。データを理解し、適切に分析して活用する能力は、個人の能力向上や自己啓発にも繋がります。個人の成長とキャリアの展望: データサイエンスは求人市場で高い需要があり、競争力のあるキャリアの一つとなっています。データサイエンスのスキルを持つことで、自身のキャリアの成長や就業機会の拡大が期待できます。データサイエンスの知識やスキルは、さまざまな職業や業界で役立つだけでなく、起業や独立の道も開ける可能性があります。個人の成長とキャリアの展望: データサイエンスは求人市場で高い需要があり、競争力のあるキャリアの一つとなっています。データサイエンスのスキルを持つことで、自身のキャリアの成長や就業機会の拡大が期待できます。データサイエンスの知識やスキルは、さまざまな職業や業界で役立つだけでなく、起業や独立の道も開ける可能性があります。自己啓発と問題解決能力の向上: データサイエンスは、問題解決や意思決定において非常に有用なツールです。データサイエンスを学ぶことで、情報を分析し洞察を得る力や、パターンを見つける力、予測や最適化の能力を養うことができます。これにより、個人の問題解決能力や意思決定力が向上し、より効果的な選択や行動ができるようになります。自己啓発と問題解決能力の向上: データサイエンスは、問題解決や意思決定において非常に有用なツールです。データサイエンスを学ぶことで、情報を分析し洞察を得る力や、パターンを見つける力、予測や最適化の能力を養うことができます。これにより、個人の問題解決能力や意思決定力が向上し、より効果的な選択や行動ができるようになります。専門家に任せることも重要ですが、一人ひとりがデータサイエンスの基本的な概念や手法を理解することは有益です。以下にその理由を説明します。データの信頼性と誤解の回避: データは私たちの日常生活やビジネスの意思決定に影響を与える重要な要素です。しかし、データの解釈や分析方法によっては誤解を招くこともあります。データサイエンスの知識を持つことで、データの信頼性を評価し、適切な解釈を行う能力が向上します。これにより、誤った結論や誤解に基づく意思決定を避けることができます。データの信頼性と誤解の回避: データは私たちの日常生活やビジネスの意思決定に影響を与える重要な要素です。しかし、データの解釈や分析方法によっては誤解を招くこともあります。データサイエンスの知識を持つことで、データの信頼性を評価し、適切な解釈を行う能力が向上します。これにより、誤った結論や誤解に基づく意思決定を避けることができます。自己管理とデータプライバシーの保護: 近年、個人のデータの重要性とプライバシーの問題が注目されています。データサイエンスを学ぶことで、自身のデータの管理方法やプライバシーの保護について理解し、適切な対策を取ることができます。データの収集や利用に対して主体的に関与し、自己管理の意識を持つことが重要です。自己管理とデータプライバシーの保護: 近年、個人のデータの重要性とプライバシーの問題が注目されています。データサイエンスを学ぶことで、自身のデータの管理方法やプライバシーの保護について理解し、適切な対策を取ることができます。データの収集や利用に対して主体的に関与し、自己管理の意識を持つことが重要です。クリティカルシンキングと問題解決能力の向上: データサイエンスの学習は、クリティカルシンキングや問題解決能力を向上させる助けとなります。データを扱い、分析するためには、情報を適切に評価し、論理的に考える必要があります。データサイエンスの学習は、証拠に基づく意思決定や論理的な議論のスキルを磨くのに役立ちます。クリティカルシンキングと問題解決能力の向上: データサイエンスの学習は、クリティカルシンキングや問題解決能力を向上させる助けとなります。データを扱い、分析するためには、情報を適切に評価し、論理的に考える必要があります。データサイエンスの学習は、証拠に基づく意思決定や論理的な議論のスキルを磨くのに役立ちます。データサイエンスの専門家に相談することは重要ですが、一人ひとりが基本的なデータサイエンスの知識やスキルを身につけることで、自己啓発や問題解決能力の向上、データの信頼性の評価、プライバシーの保護などが可能となります。データサイエンスの学習は、個人の成長やキャリアの展望にもプラスの影響を与えることが期待されます。","code":""},{"path":"introduction.html","id":"ai-の活用","chapter":"1 はじめに","heading":"1.1.3 AI の活用","text":"この電子ブックでは、AI も活用していきたいと思います。クリティカルシンキングのことも、書かれていますが、どうしても、人は、バイアスのかかった考えかたをしてしまいます。それは、経験も知識も限られていますし、単純な答えを受け入れたい傾向ということもあるかもしれません。そのために、まず、仲間に聞いてみる。そして、AI に聞いてみる。それらを踏まえて、さらに、課題や、問いを精緻なものにしていく。それが、まず、第一に大切だと考えるからです。さらに、最近のAI は、人間の普通の言葉を理解して、コード（コンピュータに伝える言葉）を書くこともできるようになっています。そのような支援を有効に使うことで、プログラミングの訓練を受けていない人でも、データサイエンスを学ぶことができるようになって来ています。翻訳にも活用することが可能です。","code":""},{"path":"introduction.html","id":"データサイエンスを始めましょうの特徴","chapter":"1 はじめに","heading":"1.2 「データサイエンスを始めましょう」の特徴","text":"","code":""},{"path":"introduction.html","id":"学習者として想定しているのは","chapter":"1 はじめに","heading":"1.2.1 学習者として想定しているのは","text":"高等学校を卒業したひとたちを対象と想定して、書いていこうと思います。","code":""},{"path":"introduction.html","id":"オープンパブリックデータの活用","chapter":"1 はじめに","heading":"1.2.2 オープン・パブリックデータの活用","text":"データサイエンスは、広い分野ですが、ここでは、オープンデータとか、パブリックデータと言われるものを主として活用していきます。すでに、書いたように、それが可能になって来たこと。特に、世界に目をむけると、すばらしいサイトがたくさんあり、国際機関などが、膨大なデータを提供しているので、まずは、それを活用したいと思います。","code":""},{"path":"introduction.html","id":"世界のデータをみること","chapter":"1 はじめに","heading":"1.2.3 世界のデータをみること","text":"日本のデータも、使っていこうと思いますが、まずは、世界の中の課題をみることが必要だと思っています。扱いやすい、世界のデータがたくさんあるからも理由の一つです。むろん、日本の課題から目を逸らすわけではありません。世界の中の日本を意識し、さらに、日本の課題にも目を向けていきたいと思います。","code":""},{"path":"introduction.html","id":"目標としていること","chapter":"1 はじめに","heading":"1.2.4 目標としていること","text":"ここで扱う内容は限られていますが、データサイエンスの基本を身につけることで、ここで、取り上げる、オープンデータ、パブリックデータだけでなく、さまざまな課題にデータを通して、向き合うことができると考えています。ここまで学べばというゴールはありません。日常的に、データを通して、課題に向き合う習慣が身についていければと願っています。","code":""},{"path":"introduction.html","id":"参考-1","chapter":"1 はじめに","heading":"1.3 参考","text":"対話型 AI - Chat Bot について\nAI の使い方や例について、書いてあります。参考にしてください。\nAI の使い方や例について、書いてあります。参考にしてください。Data Analysis Researchers 2022\nオープンデータを用いた、データ分析の授業のデジタルブック\nオープンデータを用いた、データ分析の授業のデジタルブック","code":""},{"path":"what2learn.html","id":"what2learn","chapter":"2 学ぶ内容　","heading":"2 学ぶ内容　","text":"","code":""},{"path":"what2learn.html","id":"データサイエンス入門","chapter":"2 学ぶ内容　","heading":"2.1 データサイエンス入門","text":"世界銀行のデータで、どのようなことができるか、外観してみます。","code":""},{"path":"what2learn.html","id":"第一部-パブリックデータ","chapter":"2 学ぶ内容　","heading":"2.2 第一部　パブリックデータ","text":"世界のさまざまな、パブリックデータの紹介をし、ダッシュボードと呼ばれる機能を活用して、データをみることをします。世界銀行の世界開発指標（WDI）、国際連合（UN Data）、OECD、日本のデータ（e-Stat）を外観します。","code":""},{"path":"what2learn.html","id":"第二部-基本","chapter":"2 学ぶ内容　","heading":"2.3 第二部　基本","text":"R の基本、および、tidyverse パッケージの基本を、いくつかの、基本的なパブリックデータを使いながら、学びます。","code":""},{"path":"what2learn.html","id":"第三部-国際機関のデータの活用","chapter":"2 学ぶ内容　","heading":"2.4 第三部　国際機関のデータの活用","text":"R を使って、第一部で概観した、データを実際に分析する手法を学びます。","code":""},{"path":"what2learn.html","id":"第四部-探索的データ分析-exploratory-data-analysis","chapter":"2 学ぶ内容　","heading":"2.5 第四部　探索的データ分析 Exploratory Data Analysis","text":"一つ一つのステップについて、より詳しく学びます。","code":""},{"path":"what2learn.html","id":"第五部-分析例","chapter":"2 学ぶ内容　","heading":"2.6 第五部　分析例","text":"実際の分析例を加えていきたいと思います。","code":""},{"path":"what2learn.html","id":"付録","chapter":"2 学ぶ内容　","heading":"2.7 付録","text":"技術的なコメントなど、幾つかのトピックについて書いていきます。","code":""},{"path":"first-example.html","id":"first-example","chapter":"3 はじめてのデータサイエンス","heading":"3 はじめてのデータサイエンス","text":"","code":""},{"path":"first-example.html","id":"データサイエンス","chapter":"3 はじめてのデータサイエンス","heading":"3.1 データサイエンス？","text":"データから情報を得るときには、大体次のような手順をとります。準備 Setupデータを取得 Import dataデータ構造の確認 View data必要に応じて整形 Transform data視覚化 Visualize dataデータを理解 Understand dataレポートなどにまとめる Communicate data問いをもちデータを取得し、視覚化などを通して、データを理解し、さらに問いを深めるサイクルが、データサイエンスの核だと思います。R を使った分析の一つの例を、見て行きます。一つ一つのコード（コンピュータ・プログラム）の簡単な説明は、加えますが、あまりそれに捉われず、データサイエンスとは何かを考えながら、雰囲気を味わってください。","code":""},{"path":"first-example.html","id":"r-のパッケージを活用","chapter":"3 はじめてのデータサイエンス","heading":"3.2 R のパッケージを活用","text":"","code":""},{"path":"first-example.html","id":"準備-setup","chapter":"3 はじめてのデータサイエンス","heading":"3.2.1 準備 Setup","text":"世界銀行（World Bank）の、世界開発指標（WDI: World Development Indicators）の一つの、GDP（Gross Domestic Product 国内総生産）のデータから始めます。GDP にも何種類かの尺度がありますが、次のものを見てみます。NY.GDP.MKTP.CD: GDP (current US$)NY.GDP.MKTP.CD は、データコードと言われるもので、世界開発指標（WDI）には、一つづつ決まっています。World Development Indicators のサイトの下にある、Data Themes（テーマ）からテーマを選択し、下にスクロールすると、Code をみることができます。ちなみに、ここで利用する NY.GDP.MKTP.CD: GDP (current US$) は、テーマの Economy（経済）の、一番上にあります。経済用語の英語はよく知らないという方は、ブラウザー（Edge, Google Chrome, Safari など）の翻訳機能を使うのも良いでしょう。ただ、そのページの対話型の機能（interactive function）を利用するときは、翻訳機能をOFF にする必要がある場合もありますので、注意してください。エラーメッセージを調べるときなどに、英語のほうが情報がたくさん得られますから、言語を、英語に変更しておきます。R には、WDI のデータを取得する R のツール（パッケージ）WDI がありますから、それを使います。また、データを取り扱うための基本的なツール（パッケージ）tidyverse を使いますので、次のコードで、これらを読み込みます。データを保存する場所を作成しておくことをお勧めします。保存しておくときは、このディレクトリを使います。","code":"\nSys.setenv(LANG = \"en\")\nlibrary(tidyverse)\n#> ── Attaching core tidyverse packages ──── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nlibrary(WDI)\ndir.create(\"./data\")"},{"path":"first-example.html","id":"データ取得-import-data","chapter":"3 はじめてのデータサイエンス","heading":"3.2.2 データ取得 Import data","text":"データを取得します。少し時間がかかります。取得したデータに、df_gdp などと、わかりやすい名前をつけます。df は data frame の略で、R で標準的なデータの形式です。このコードで、全ての国の GDP を取得できます。GDP の値は、NY.GDP.MKTP.CD という名前の列にありますが、覚えやすいように、gdp という名前に変更しておきます。extra = TRUE とすることによって、それぞれの国についての情報などが追加されます。","code":"\ndf_gdp <- WDI(country = \"all\", \n              indicator = c(gdp = \"NY.GDP.MKTP.CD\"), \n              extra = TRUE)"},{"path":"first-example.html","id":"データ構造の確認","chapter":"3 はじめてのデータサイエンス","heading":"3.2.3 データ構造の確認","text":"最初の数行だけを見るには、head(df_dgp) とします。データの構造を見るときには、str(df_gdp) もよく使われます。今度は、列が縦に並んで表示されます。概要 (summary(df_gdp)) からもある程度わかります。国のリストをみてみましょう。とても長いリストの中には、地域名も含まれています。今回は下のように、%>%（パイプと呼びます） で繋げてコードを書きました。最初は、データ、その中の、異なる国を選択して、書き出してくださいというものです。これは、と同じです。どんどん、かっこの中に入れ子になって複雑になるので、一つ一つのステップを、順に書いたものが、最初のものになります。なども可能です。かっこの中に最初に入るものが直前のもの、ここでは、データになっています。","code":"\nhead(df_gdp)\n#>       country iso2c iso3c year        gdp status\n#> 1 Afghanistan    AF   AFG 1963  751111191       \n#> 2 Afghanistan    AF   AFG 1962  546666678       \n#> 3 Afghanistan    AF   AFG 1961  548888896       \n#> 4 Afghanistan    AF   AFG 1960  537777811       \n#> 5 Afghanistan    AF   AFG 2003 4539500884       \n#> 6 Afghanistan    AF   AFG 2002 3854235264       \n#>   lastupdated     region capital longitude latitude\n#> 1  2023-05-10 South Asia   Kabul   69.1761  34.5228\n#> 2  2023-05-10 South Asia   Kabul   69.1761  34.5228\n#> 3  2023-05-10 South Asia   Kabul   69.1761  34.5228\n#> 4  2023-05-10 South Asia   Kabul   69.1761  34.5228\n#> 5  2023-05-10 South Asia   Kabul   69.1761  34.5228\n#> 6  2023-05-10 South Asia   Kabul   69.1761  34.5228\n#>       income lending\n#> 1 Low income     IDA\n#> 2 Low income     IDA\n#> 3 Low income     IDA\n#> 4 Low income     IDA\n#> 5 Low income     IDA\n#> 6 Low income     IDA\nstr(df_gdp)\n#> 'data.frame':    16758 obs. of  13 variables:\n#>  $ country    : chr  \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" ...\n#>  $ iso2c      : chr  \"AF\" \"AF\" \"AF\" \"AF\" ...\n#>  $ iso3c      : chr  \"AFG\" \"AFG\" \"AFG\" \"AFG\" ...\n#>  $ year       : int  1963 1962 1961 1960 2003 2002 2001 2000 1995 1994 ...\n#>  $ gdp        : num  7.51e+08 5.47e+08 5.49e+08 5.38e+08 4.54e+09 ...\n#>   ..- attr(*, \"label\")= chr \"GDP (current US$)\"\n#>  $ status     : chr  \"\" \"\" \"\" \"\" ...\n#>  $ lastupdated: chr  \"2023-05-10\" \"2023-05-10\" \"2023-05-10\" \"2023-05-10\" ...\n#>  $ region     : chr  \"South Asia\" \"South Asia\" \"South Asia\" \"South Asia\" ...\n#>  $ capital    : chr  \"Kabul\" \"Kabul\" \"Kabul\" \"Kabul\" ...\n#>  $ longitude  : chr  \"69.1761\" \"69.1761\" \"69.1761\" \"69.1761\" ...\n#>  $ latitude   : chr  \"34.5228\" \"34.5228\" \"34.5228\" \"34.5228\" ...\n#>  $ income     : chr  \"Low income\" \"Low income\" \"Low income\" \"Low income\" ...\n#>  $ lending    : chr  \"IDA\" \"IDA\" \"IDA\" \"IDA\" ...\nsummary(df_gdp) \n#>    country             iso2c              iso3c          \n#>  Length:16758       Length:16758       Length:16758      \n#>  Class :character   Class :character   Class :character  \n#>  Mode  :character   Mode  :character   Mode  :character  \n#>                                                          \n#>                                                          \n#>                                                          \n#>                                                          \n#>       year           gdp               status         \n#>  Min.   :1960   Min.   :8.824e+06   Length:16758      \n#>  1st Qu.:1975   1st Qu.:2.442e+09   Class :character  \n#>  Median :1991   Median :1.784e+10   Mode  :character  \n#>  Mean   :1991   Mean   :1.161e+12                     \n#>  3rd Qu.:2007   3rd Qu.:2.156e+11                     \n#>  Max.   :2022   Max.   :9.653e+13                     \n#>                 NA's   :3602                          \n#>  lastupdated           region            capital         \n#>  Length:16758       Length:16758       Length:16758      \n#>  Class :character   Class :character   Class :character  \n#>  Mode  :character   Mode  :character   Mode  :character  \n#>                                                          \n#>                                                          \n#>                                                          \n#>                                                          \n#>   longitude           latitude            income         \n#>  Length:16758       Length:16758       Length:16758      \n#>  Class :character   Class :character   Class :character  \n#>  Mode  :character   Mode  :character   Mode  :character  \n#>                                                          \n#>                                                          \n#>                                                          \n#>                                                          \n#>    lending         \n#>  Length:16758      \n#>  Class :character  \n#>  Mode  :character  \n#>                    \n#>                    \n#>                    \n#> \ndf_gdp %>% distinct(country) %>% pull()\n#>   [1] \"Afghanistan\"                                         \n#>   [2] \"Africa Eastern and Southern\"                         \n#>   [3] \"Africa Western and Central\"                          \n#>   [4] \"Albania\"                                             \n#>   [5] \"Algeria\"                                             \n#>   [6] \"American Samoa\"                                      \n#>   [7] \"Andorra\"                                             \n#>   [8] \"Angola\"                                              \n#>   [9] \"Antigua and Barbuda\"                                 \n#>  [10] \"Arab World\"                                          \n#>  [11] \"Argentina\"                                           \n#>  [12] \"Armenia\"                                             \n#>  [13] \"Aruba\"                                               \n#>  [14] \"Australia\"                                           \n#>  [15] \"Austria\"                                             \n#>  [16] \"Azerbaijan\"                                          \n#>  [17] \"Bahamas, The\"                                        \n#>  [18] \"Bahrain\"                                             \n#>  [19] \"Bangladesh\"                                          \n#>  [20] \"Barbados\"                                            \n#>  [21] \"Belarus\"                                             \n#>  [22] \"Belgium\"                                             \n#>  [23] \"Belize\"                                              \n#>  [24] \"Benin\"                                               \n#>  [25] \"Bermuda\"                                             \n#>  [26] \"Bhutan\"                                              \n#>  [27] \"Bolivia\"                                             \n#>  [28] \"Bosnia and Herzegovina\"                              \n#>  [29] \"Botswana\"                                            \n#>  [30] \"Brazil\"                                              \n#>  [31] \"British Virgin Islands\"                              \n#>  [32] \"Brunei Darussalam\"                                   \n#>  [33] \"Bulgaria\"                                            \n#>  [34] \"Burkina Faso\"                                        \n#>  [35] \"Burundi\"                                             \n#>  [36] \"Cabo Verde\"                                          \n#>  [37] \"Cambodia\"                                            \n#>  [38] \"Cameroon\"                                            \n#>  [39] \"Canada\"                                              \n#>  [40] \"Caribbean small states\"                              \n#>  [41] \"Cayman Islands\"                                      \n#>  [42] \"Central African Republic\"                            \n#>  [43] \"Central Europe and the Baltics\"                      \n#>  [44] \"Chad\"                                                \n#>  [45] \"Channel Islands\"                                     \n#>  [46] \"Chile\"                                               \n#>  [47] \"China\"                                               \n#>  [48] \"Colombia\"                                            \n#>  [49] \"Comoros\"                                             \n#>  [50] \"Congo, Dem. Rep.\"                                    \n#>  [51] \"Congo, Rep.\"                                         \n#>  [52] \"Costa Rica\"                                          \n#>  [53] \"Cote d'Ivoire\"                                       \n#>  [54] \"Croatia\"                                             \n#>  [55] \"Cuba\"                                                \n#>  [56] \"Curacao\"                                             \n#>  [57] \"Cyprus\"                                              \n#>  [58] \"Czechia\"                                             \n#>  [59] \"Denmark\"                                             \n#>  [60] \"Djibouti\"                                            \n#>  [61] \"Dominica\"                                            \n#>  [62] \"Dominican Republic\"                                  \n#>  [63] \"Early-demographic dividend\"                          \n#>  [64] \"East Asia & Pacific\"                                 \n#>  [65] \"East Asia & Pacific (excluding high income)\"         \n#>  [66] \"East Asia & Pacific (IDA & IBRD countries)\"          \n#>  [67] \"Ecuador\"                                             \n#>  [68] \"Egypt, Arab Rep.\"                                    \n#>  [69] \"El Salvador\"                                         \n#>  [70] \"Equatorial Guinea\"                                   \n#>  [71] \"Eritrea\"                                             \n#>  [72] \"Estonia\"                                             \n#>  [73] \"Eswatini\"                                            \n#>  [74] \"Ethiopia\"                                            \n#>  [75] \"Euro area\"                                           \n#>  [76] \"Europe & Central Asia\"                               \n#>  [77] \"Europe & Central Asia (excluding high income)\"       \n#>  [78] \"Europe & Central Asia (IDA & IBRD countries)\"        \n#>  [79] \"European Union\"                                      \n#>  [80] \"Faroe Islands\"                                       \n#>  [81] \"Fiji\"                                                \n#>  [82] \"Finland\"                                             \n#>  [83] \"Fragile and conflict affected situations\"            \n#>  [84] \"France\"                                              \n#>  [85] \"French Polynesia\"                                    \n#>  [86] \"Gabon\"                                               \n#>  [87] \"Gambia, The\"                                         \n#>  [88] \"Georgia\"                                             \n#>  [89] \"Germany\"                                             \n#>  [90] \"Ghana\"                                               \n#>  [91] \"Gibraltar\"                                           \n#>  [92] \"Greece\"                                              \n#>  [93] \"Greenland\"                                           \n#>  [94] \"Grenada\"                                             \n#>  [95] \"Guam\"                                                \n#>  [96] \"Guatemala\"                                           \n#>  [97] \"Guinea\"                                              \n#>  [98] \"Guinea-Bissau\"                                       \n#>  [99] \"Guyana\"                                              \n#> [100] \"Haiti\"                                               \n#> [101] \"Heavily indebted poor countries (HIPC)\"              \n#> [102] \"High income\"                                         \n#> [103] \"Honduras\"                                            \n#> [104] \"Hong Kong SAR, China\"                                \n#> [105] \"Hungary\"                                             \n#> [106] \"IBRD only\"                                           \n#> [107] \"Iceland\"                                             \n#> [108] \"IDA & IBRD total\"                                    \n#> [109] \"IDA blend\"                                           \n#> [110] \"IDA only\"                                            \n#> [111] \"IDA total\"                                           \n#> [112] \"India\"                                               \n#> [113] \"Indonesia\"                                           \n#> [114] \"Iran, Islamic Rep.\"                                  \n#> [115] \"Iraq\"                                                \n#> [116] \"Ireland\"                                             \n#> [117] \"Isle of Man\"                                         \n#> [118] \"Israel\"                                              \n#> [119] \"Italy\"                                               \n#> [120] \"Jamaica\"                                             \n#> [121] \"Japan\"                                               \n#> [122] \"Jordan\"                                              \n#> [123] \"Kazakhstan\"                                          \n#> [124] \"Kenya\"                                               \n#> [125] \"Kiribati\"                                            \n#> [126] \"Korea, Dem. People's Rep.\"                           \n#> [127] \"Korea, Rep.\"                                         \n#> [128] \"Kosovo\"                                              \n#> [129] \"Kuwait\"                                              \n#> [130] \"Kyrgyz Republic\"                                     \n#> [131] \"Lao PDR\"                                             \n#> [132] \"Late-demographic dividend\"                           \n#> [133] \"Latin America & Caribbean\"                           \n#> [134] \"Latin America & Caribbean (excluding high income)\"   \n#> [135] \"Latin America & the Caribbean (IDA & IBRD countries)\"\n#> [136] \"Latvia\"                                              \n#> [137] \"Least developed countries: UN classification\"        \n#> [138] \"Lebanon\"                                             \n#> [139] \"Lesotho\"                                             \n#> [140] \"Liberia\"                                             \n#> [141] \"Libya\"                                               \n#> [142] \"Liechtenstein\"                                       \n#> [143] \"Lithuania\"                                           \n#> [144] \"Low & middle income\"                                 \n#> [145] \"Low income\"                                          \n#> [146] \"Lower middle income\"                                 \n#> [147] \"Luxembourg\"                                          \n#> [148] \"Macao SAR, China\"                                    \n#> [149] \"Madagascar\"                                          \n#> [150] \"Malawi\"                                              \n#> [151] \"Malaysia\"                                            \n#> [152] \"Maldives\"                                            \n#> [153] \"Mali\"                                                \n#> [154] \"Malta\"                                               \n#> [155] \"Marshall Islands\"                                    \n#> [156] \"Mauritania\"                                          \n#> [157] \"Mauritius\"                                           \n#> [158] \"Mexico\"                                              \n#> [159] \"Micronesia, Fed. Sts.\"                               \n#> [160] \"Middle East & North Africa\"                          \n#> [161] \"Middle East & North Africa (excluding high income)\"  \n#> [162] \"Middle East & North Africa (IDA & IBRD countries)\"   \n#> [163] \"Middle income\"                                       \n#> [164] \"Moldova\"                                             \n#> [165] \"Monaco\"                                              \n#> [166] \"Mongolia\"                                            \n#> [167] \"Montenegro\"                                          \n#> [168] \"Morocco\"                                             \n#> [169] \"Mozambique\"                                          \n#> [170] \"Myanmar\"                                             \n#> [171] \"Namibia\"                                             \n#> [172] \"Nauru\"                                               \n#> [173] \"Nepal\"                                               \n#> [174] \"Netherlands\"                                         \n#> [175] \"New Caledonia\"                                       \n#> [176] \"New Zealand\"                                         \n#> [177] \"Nicaragua\"                                           \n#> [178] \"Niger\"                                               \n#> [179] \"Nigeria\"                                             \n#> [180] \"North America\"                                       \n#> [181] \"North Macedonia\"                                     \n#> [182] \"Northern Mariana Islands\"                            \n#> [183] \"Norway\"                                              \n#> [184] \"Not classified\"                                      \n#> [185] \"OECD members\"                                        \n#> [186] \"Oman\"                                                \n#> [187] \"Other small states\"                                  \n#> [188] \"Pacific island small states\"                         \n#> [189] \"Pakistan\"                                            \n#> [190] \"Palau\"                                               \n#> [191] \"Panama\"                                              \n#> [192] \"Papua New Guinea\"                                    \n#> [193] \"Paraguay\"                                            \n#> [194] \"Peru\"                                                \n#> [195] \"Philippines\"                                         \n#> [196] \"Poland\"                                              \n#> [197] \"Portugal\"                                            \n#> [198] \"Post-demographic dividend\"                           \n#> [199] \"Pre-demographic dividend\"                            \n#> [200] \"Puerto Rico\"                                         \n#> [201] \"Qatar\"                                               \n#> [202] \"Romania\"                                             \n#> [203] \"Russian Federation\"                                  \n#> [204] \"Rwanda\"                                              \n#> [205] \"Samoa\"                                               \n#> [206] \"San Marino\"                                          \n#> [207] \"Sao Tome and Principe\"                               \n#> [208] \"Saudi Arabia\"                                        \n#> [209] \"Senegal\"                                             \n#> [210] \"Serbia\"                                              \n#> [211] \"Seychelles\"                                          \n#> [212] \"Sierra Leone\"                                        \n#> [213] \"Singapore\"                                           \n#> [214] \"Sint Maarten (Dutch part)\"                           \n#> [215] \"Slovak Republic\"                                     \n#> [216] \"Slovenia\"                                            \n#> [217] \"Small states\"                                        \n#> [218] \"Solomon Islands\"                                     \n#> [219] \"Somalia\"                                             \n#> [220] \"South Africa\"                                        \n#> [221] \"South Asia\"                                          \n#> [222] \"South Asia (IDA & IBRD)\"                             \n#> [223] \"South Sudan\"                                         \n#> [224] \"Spain\"                                               \n#> [225] \"Sri Lanka\"                                           \n#> [226] \"St. Kitts and Nevis\"                                 \n#> [227] \"St. Lucia\"                                           \n#> [228] \"St. Martin (French part)\"                            \n#> [229] \"St. Vincent and the Grenadines\"                      \n#> [230] \"Sub-Saharan Africa\"                                  \n#> [231] \"Sub-Saharan Africa (excluding high income)\"          \n#> [232] \"Sub-Saharan Africa (IDA & IBRD countries)\"           \n#> [233] \"Sudan\"                                               \n#> [234] \"Suriname\"                                            \n#> [235] \"Sweden\"                                              \n#> [236] \"Switzerland\"                                         \n#> [237] \"Syrian Arab Republic\"                                \n#> [238] \"Tajikistan\"                                          \n#> [239] \"Tanzania\"                                            \n#> [240] \"Thailand\"                                            \n#> [241] \"Timor-Leste\"                                         \n#> [242] \"Togo\"                                                \n#> [243] \"Tonga\"                                               \n#> [244] \"Trinidad and Tobago\"                                 \n#> [245] \"Tunisia\"                                             \n#> [246] \"Turkiye\"                                             \n#> [247] \"Turkmenistan\"                                        \n#> [248] \"Turks and Caicos Islands\"                            \n#> [249] \"Tuvalu\"                                              \n#> [250] \"Uganda\"                                              \n#> [251] \"Ukraine\"                                             \n#> [252] \"United Arab Emirates\"                                \n#> [253] \"United Kingdom\"                                      \n#> [254] \"United States\"                                       \n#> [255] \"Upper middle income\"                                 \n#> [256] \"Uruguay\"                                             \n#> [257] \"Uzbekistan\"                                          \n#> [258] \"Vanuatu\"                                             \n#> [259] \"Venezuela, RB\"                                       \n#> [260] \"Vietnam\"                                             \n#> [261] \"Virgin Islands (U.S.)\"                               \n#> [262] \"West Bank and Gaza\"                                  \n#> [263] \"World\"                                               \n#> [264] \"Yemen, Rep.\"                                         \n#> [265] \"Zambia\"                                              \n#> [266] \"Zimbabwe\"df_gdp %>% distinct(country) %>% pull()pull(distinct(df_gdp, country))df_gdp %>% head()\ndf_gdp %>% str()"},{"path":"first-example.html","id":"必要に応じて整形-transform-data","chapter":"3 はじめてのデータサイエンス","heading":"3.2.4 必要に応じて整形 Transform data","text":"変数が多いので、日本の部分だけ filter を使って選択します。country が Japan と一致する場合のみを選択するときは、== を使います。数値ではないので、引用符をつけます。半角を使ってください。２行目の、gdp の、4.940878e+12 は、Scientific notation と言われるもので、\n\\[4.940878 \\times 10^{12} = 4,940,887,800,000\\]\nを意味します。e+3 は千（thousand）、e+6 は百万（million）、e+9 は、10億（billion）、e+12 は、兆（trillion）ですから、日本の、2021 年の GDP は、約5兆ドルとなります。","code":"\ndf_gdp %>% filter(country == \"Japan\")\n#>    country iso2c iso3c year          gdp status lastupdated\n#> 1    Japan    JP   JPN 2022           NA         2023-05-10\n#> 2    Japan    JP   JPN 2021 4.940878e+12         2023-05-10\n#> 3    Japan    JP   JPN 2020 5.040108e+12         2023-05-10\n#> 4    Japan    JP   JPN 2019 5.123318e+12         2023-05-10\n#> 5    Japan    JP   JPN 2018 5.037835e+12         2023-05-10\n#> 6    Japan    JP   JPN 2017 4.930837e+12         2023-05-10\n#> 7    Japan    JP   JPN 2016 5.003678e+12         2023-05-10\n#> 8    Japan    JP   JPN 2015 4.444931e+12         2023-05-10\n#> 9    Japan    JP   JPN 2014 4.896994e+12         2023-05-10\n#> 10   Japan    JP   JPN 2013 5.212328e+12         2023-05-10\n#> 11   Japan    JP   JPN 2012 6.272363e+12         2023-05-10\n#> 12   Japan    JP   JPN 2011 6.233147e+12         2023-05-10\n#> 13   Japan    JP   JPN 2010 5.759072e+12         2023-05-10\n#> 14   Japan    JP   JPN 2009 5.289493e+12         2023-05-10\n#> 15   Japan    JP   JPN 2008 5.106679e+12         2023-05-10\n#> 16   Japan    JP   JPN 2007 4.579751e+12         2023-05-10\n#> 17   Japan    JP   JPN 2006 4.601663e+12         2023-05-10\n#> 18   Japan    JP   JPN 2005 4.831467e+12         2023-05-10\n#> 19   Japan    JP   JPN 2004 4.893116e+12         2023-05-10\n#> 20   Japan    JP   JPN 2003 4.519562e+12         2023-05-10\n#> 21   Japan    JP   JPN 2002 4.182846e+12         2023-05-10\n#> 22   Japan    JP   JPN 2001 4.374712e+12         2023-05-10\n#> 23   Japan    JP   JPN 2000 4.968359e+12         2023-05-10\n#> 24   Japan    JP   JPN 1999 4.635982e+12         2023-05-10\n#> 25   Japan    JP   JPN 1998 4.098363e+12         2023-05-10\n#> 26   Japan    JP   JPN 1997 4.492449e+12         2023-05-10\n#> 27   Japan    JP   JPN 1996 4.923392e+12         2023-05-10\n#> 28   Japan    JP   JPN 1995 5.545564e+12         2023-05-10\n#> 29   Japan    JP   JPN 1994 4.998798e+12         2023-05-10\n#> 30   Japan    JP   JPN 1993 4.454144e+12         2023-05-10\n#> 31   Japan    JP   JPN 1992 3.908809e+12         2023-05-10\n#> 32   Japan    JP   JPN 1991 3.584420e+12         2023-05-10\n#> 33   Japan    JP   JPN 1990 3.132818e+12         2023-05-10\n#> 34   Japan    JP   JPN 1989 3.054914e+12         2023-05-10\n#> 35   Japan    JP   JPN 1988 3.071683e+12         2023-05-10\n#> 36   Japan    JP   JPN 1987 2.532809e+12         2023-05-10\n#> 37   Japan    JP   JPN 1986 2.078953e+12         2023-05-10\n#> 38   Japan    JP   JPN 1985 1.398893e+12         2023-05-10\n#> 39   Japan    JP   JPN 1984 1.318382e+12         2023-05-10\n#> 40   Japan    JP   JPN 1983 1.243324e+12         2023-05-10\n#> 41   Japan    JP   JPN 1982 1.134518e+12         2023-05-10\n#> 42   Japan    JP   JPN 1981 1.218989e+12         2023-05-10\n#> 43   Japan    JP   JPN 1980 1.105386e+12         2023-05-10\n#> 44   Japan    JP   JPN 1979 1.055012e+12         2023-05-10\n#> 45   Japan    JP   JPN 1978 1.013612e+12         2023-05-10\n#> 46   Japan    JP   JPN 1977 7.214118e+11         2023-05-10\n#> 47   Japan    JP   JPN 1976 5.861619e+11         2023-05-10\n#> 48   Japan    JP   JPN 1975 5.215419e+11         2023-05-10\n#> 49   Japan    JP   JPN 1974 4.796260e+11         2023-05-10\n#> 50   Japan    JP   JPN 1973 4.320827e+11         2023-05-10\n#> 51   Japan    JP   JPN 1972 3.180313e+11         2023-05-10\n#> 52   Japan    JP   JPN 1971 2.401518e+11         2023-05-10\n#> 53   Japan    JP   JPN 1970 2.126092e+11         2023-05-10\n#> 54   Japan    JP   JPN 1969 1.722042e+11         2023-05-10\n#> 55   Japan    JP   JPN 1968 1.466011e+11         2023-05-10\n#> 56   Japan    JP   JPN 1967 1.237819e+11         2023-05-10\n#> 57   Japan    JP   JPN 1966 1.056281e+11         2023-05-10\n#> 58   Japan    JP   JPN 1965 9.095028e+10         2023-05-10\n#> 59   Japan    JP   JPN 1964 8.174901e+10         2023-05-10\n#> 60   Japan    JP   JPN 1963 6.949813e+10         2023-05-10\n#> 61   Japan    JP   JPN 1962 6.072302e+10         2023-05-10\n#> 62   Japan    JP   JPN 1961 5.350862e+10         2023-05-10\n#> 63   Japan    JP   JPN 1960 4.430734e+10         2023-05-10\n#>                 region capital longitude latitude\n#> 1  East Asia & Pacific   Tokyo    139.77    35.67\n#> 2  East Asia & Pacific   Tokyo    139.77    35.67\n#> 3  East Asia & Pacific   Tokyo    139.77    35.67\n#> 4  East Asia & Pacific   Tokyo    139.77    35.67\n#> 5  East Asia & Pacific   Tokyo    139.77    35.67\n#> 6  East Asia & Pacific   Tokyo    139.77    35.67\n#> 7  East Asia & Pacific   Tokyo    139.77    35.67\n#> 8  East Asia & Pacific   Tokyo    139.77    35.67\n#> 9  East Asia & Pacific   Tokyo    139.77    35.67\n#> 10 East Asia & Pacific   Tokyo    139.77    35.67\n#> 11 East Asia & Pacific   Tokyo    139.77    35.67\n#> 12 East Asia & Pacific   Tokyo    139.77    35.67\n#> 13 East Asia & Pacific   Tokyo    139.77    35.67\n#> 14 East Asia & Pacific   Tokyo    139.77    35.67\n#> 15 East Asia & Pacific   Tokyo    139.77    35.67\n#> 16 East Asia & Pacific   Tokyo    139.77    35.67\n#> 17 East Asia & Pacific   Tokyo    139.77    35.67\n#> 18 East Asia & Pacific   Tokyo    139.77    35.67\n#> 19 East Asia & Pacific   Tokyo    139.77    35.67\n#> 20 East Asia & Pacific   Tokyo    139.77    35.67\n#> 21 East Asia & Pacific   Tokyo    139.77    35.67\n#> 22 East Asia & Pacific   Tokyo    139.77    35.67\n#> 23 East Asia & Pacific   Tokyo    139.77    35.67\n#> 24 East Asia & Pacific   Tokyo    139.77    35.67\n#> 25 East Asia & Pacific   Tokyo    139.77    35.67\n#> 26 East Asia & Pacific   Tokyo    139.77    35.67\n#> 27 East Asia & Pacific   Tokyo    139.77    35.67\n#> 28 East Asia & Pacific   Tokyo    139.77    35.67\n#> 29 East Asia & Pacific   Tokyo    139.77    35.67\n#> 30 East Asia & Pacific   Tokyo    139.77    35.67\n#> 31 East Asia & Pacific   Tokyo    139.77    35.67\n#> 32 East Asia & Pacific   Tokyo    139.77    35.67\n#> 33 East Asia & Pacific   Tokyo    139.77    35.67\n#> 34 East Asia & Pacific   Tokyo    139.77    35.67\n#> 35 East Asia & Pacific   Tokyo    139.77    35.67\n#> 36 East Asia & Pacific   Tokyo    139.77    35.67\n#> 37 East Asia & Pacific   Tokyo    139.77    35.67\n#> 38 East Asia & Pacific   Tokyo    139.77    35.67\n#> 39 East Asia & Pacific   Tokyo    139.77    35.67\n#> 40 East Asia & Pacific   Tokyo    139.77    35.67\n#> 41 East Asia & Pacific   Tokyo    139.77    35.67\n#> 42 East Asia & Pacific   Tokyo    139.77    35.67\n#> 43 East Asia & Pacific   Tokyo    139.77    35.67\n#> 44 East Asia & Pacific   Tokyo    139.77    35.67\n#> 45 East Asia & Pacific   Tokyo    139.77    35.67\n#> 46 East Asia & Pacific   Tokyo    139.77    35.67\n#> 47 East Asia & Pacific   Tokyo    139.77    35.67\n#> 48 East Asia & Pacific   Tokyo    139.77    35.67\n#> 49 East Asia & Pacific   Tokyo    139.77    35.67\n#> 50 East Asia & Pacific   Tokyo    139.77    35.67\n#> 51 East Asia & Pacific   Tokyo    139.77    35.67\n#> 52 East Asia & Pacific   Tokyo    139.77    35.67\n#> 53 East Asia & Pacific   Tokyo    139.77    35.67\n#> 54 East Asia & Pacific   Tokyo    139.77    35.67\n#> 55 East Asia & Pacific   Tokyo    139.77    35.67\n#> 56 East Asia & Pacific   Tokyo    139.77    35.67\n#> 57 East Asia & Pacific   Tokyo    139.77    35.67\n#> 58 East Asia & Pacific   Tokyo    139.77    35.67\n#> 59 East Asia & Pacific   Tokyo    139.77    35.67\n#> 60 East Asia & Pacific   Tokyo    139.77    35.67\n#> 61 East Asia & Pacific   Tokyo    139.77    35.67\n#> 62 East Asia & Pacific   Tokyo    139.77    35.67\n#> 63 East Asia & Pacific   Tokyo    139.77    35.67\n#>         income        lending\n#> 1  High income Not classified\n#> 2  High income Not classified\n#> 3  High income Not classified\n#> 4  High income Not classified\n#> 5  High income Not classified\n#> 6  High income Not classified\n#> 7  High income Not classified\n#> 8  High income Not classified\n#> 9  High income Not classified\n#> 10 High income Not classified\n#> 11 High income Not classified\n#> 12 High income Not classified\n#> 13 High income Not classified\n#> 14 High income Not classified\n#> 15 High income Not classified\n#> 16 High income Not classified\n#> 17 High income Not classified\n#> 18 High income Not classified\n#> 19 High income Not classified\n#> 20 High income Not classified\n#> 21 High income Not classified\n#> 22 High income Not classified\n#> 23 High income Not classified\n#> 24 High income Not classified\n#> 25 High income Not classified\n#> 26 High income Not classified\n#> 27 High income Not classified\n#> 28 High income Not classified\n#> 29 High income Not classified\n#> 30 High income Not classified\n#> 31 High income Not classified\n#> 32 High income Not classified\n#> 33 High income Not classified\n#> 34 High income Not classified\n#> 35 High income Not classified\n#> 36 High income Not classified\n#> 37 High income Not classified\n#> 38 High income Not classified\n#> 39 High income Not classified\n#> 40 High income Not classified\n#> 41 High income Not classified\n#> 42 High income Not classified\n#> 43 High income Not classified\n#> 44 High income Not classified\n#> 45 High income Not classified\n#> 46 High income Not classified\n#> 47 High income Not classified\n#> 48 High income Not classified\n#> 49 High income Not classified\n#> 50 High income Not classified\n#> 51 High income Not classified\n#> 52 High income Not classified\n#> 53 High income Not classified\n#> 54 High income Not classified\n#> 55 High income Not classified\n#> 56 High income Not classified\n#> 57 High income Not classified\n#> 58 High income Not classified\n#> 59 High income Not classified\n#> 60 High income Not classified\n#> 61 High income Not classified\n#> 62 High income Not classified\n#> 63 High income Not classified\ndf_gdp %>% filter(country == \"Japan\") %>% head(2)\n#>   country iso2c iso3c year          gdp status lastupdated\n#> 1   Japan    JP   JPN 2022           NA         2023-05-10\n#> 2   Japan    JP   JPN 2021 4.940878e+12         2023-05-10\n#>                region capital longitude latitude\n#> 1 East Asia & Pacific   Tokyo    139.77    35.67\n#> 2 East Asia & Pacific   Tokyo    139.77    35.67\n#>        income        lending\n#> 1 High income Not classified\n#> 2 High income Not classified"},{"path":"first-example.html","id":"視覚化-data-visualization","chapter":"3 はじめてのデータサイエンス","heading":"3.2.5 視覚化 data visualization","text":"","code":""},{"path":"first-example.html","id":"fig-1.-日本のgdp-の経年変化を折線グラフline-graph","chapter":"3 はじめてのデータサイエンス","heading":"3.2.5.1 Fig 1. 日本のGDP の経年変化を折線グラフ（line graph）","text":"日本を選択したときに、それに名前をつけておいて、それを使うこともできますが、名前がどんどん増えるので、それに続けて、コードを書いていく方法をとっています。ggplot(aes(x = year, y = gdp)) + geom_line()の部分が、グラフを描く部分で、「x 軸を、year、y 軸を、gdp として、それを、折線グラフで描いてください」というコードです。Warning: [38;5;238mRemoved 1 row containing missing valuesと表示されています。値がない年があることを言っています。2022年のデータがないことがわかっていますから、最初から削除してこくことも可能です。","code":"\ndf_gdp %>% filter(country == \"Japan\") %>%\n  ggplot(aes(x = year, y = gdp)) + geom_line()\n#> Warning: Removed 1 row containing missing values\n#> (`geom_line()`).df_gdp %>% filter(country == \"Japan\") %>%\n  ggplot(aes(x = year, y = gdp)) + geom_line()"},{"path":"first-example.html","id":"データの理解-understand-data","chapter":"3 はじめてのデータサイエンス","heading":"3.2.6 データの理解 Understand data","text":"視覚化によって見えてくることがいくつもありますね。どんなことがわかりますか。気づいたこと（observation）をあげてみましょう。コードを描くことではなく、この部分が、データサイエンスの核の部分です。気づいたことを列挙してみましょう。","code":""},{"path":"first-example.html","id":"さまざまな視覚化","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7 さまざまな視覚化","text":"","code":""},{"path":"first-example.html","id":"fig-2.-各年ごとのデータの数","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.1 Fig 2. 各年ごとのデータの数","text":"summary(df_gdp) で、データ自体は、1960年から2022年までのようですが、日本も、2022年のデータはありませんでしたから、年によって、どの程度データがあるか、調べてみます。バー・グラフを使いますが、gdp の値が、欠損値（NA: available）のデータを削除してから、グラフを描きます。","code":"\ndf_gdp %>% drop_na(gdp) %>% ggplot(aes(x = year)) + geom_bar()df_gdp %>% drop_na(gdp) %>% ggplot(aes(x = year)) + geom_bar()"},{"path":"first-example.html","id":"年のgdpの降順での表示１","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.2 2021年のGDPの降順での表示（１）","text":"最新の2021年のデータはすべてあるわけではなさそうですが、gdp の値が大きい順に並べてみましょう。","code":"\ndf_gdp %>% filter(year == 2021) %>% drop_na(gdp) %>% arrange(desc(gdp))\n#>                                                  country\n#> 1                                                  World\n#> 2                                            High income\n#> 3                                           OECD members\n#> 4                              Post-demographic dividend\n#> 5                                       IDA & IBRD total\n#> 6                                    Low & middle income\n#> 7                                          Middle income\n#> 8                                              IBRD only\n#> 9                                    East Asia & Pacific\n#> 10                                   Upper middle income\n#> 11                             Late-demographic dividend\n#> 12                                         North America\n#> 13                                 Europe & Central Asia\n#> 14                                         United States\n#> 15           East Asia & Pacific (excluding high income)\n#> 16            East Asia & Pacific (IDA & IBRD countries)\n#> 17                                                 China\n#> 18                                        European Union\n#> 19                                             Euro area\n#> 20                            Early-demographic dividend\n#> 21                                   Lower middle income\n#> 22                             Latin America & Caribbean\n#> 23  Latin America & the Caribbean (IDA & IBRD countries)\n#> 24                                                 Japan\n#> 25     Latin America & Caribbean (excluding high income)\n#> 26          Europe & Central Asia (IDA & IBRD countries)\n#> 27                                               Germany\n#> 28                                            South Asia\n#> 29                               South Asia (IDA & IBRD)\n#> 30                            Middle East & North Africa\n#> 31         Europe & Central Asia (excluding high income)\n#> 32                                                 India\n#> 33                                        United Kingdom\n#> 34                                                France\n#> 35                                            Arab World\n#> 36                                             IDA total\n#> 37                                                 Italy\n#> 38                                                Canada\n#> 39                                    Sub-Saharan Africa\n#> 40             Sub-Saharan Africa (IDA & IBRD countries)\n#> 41            Sub-Saharan Africa (excluding high income)\n#> 42                        Central Europe and the Baltics\n#> 43                                           Korea, Rep.\n#> 44              Fragile and conflict affected situations\n#> 45                                    Russian Federation\n#> 46                                                Brazil\n#> 47                                             Australia\n#> 48                                              IDA only\n#> 49    Middle East & North Africa (excluding high income)\n#> 50     Middle East & North Africa (IDA & IBRD countries)\n#> 51                              Pre-demographic dividend\n#> 52                                                 Spain\n#> 53          Least developed countries: UN classification\n#> 54                                                Mexico\n#> 55                                             Indonesia\n#> 56                                             IDA blend\n#> 57                           Africa Eastern and Southern\n#> 58                                           Netherlands\n#> 59                Heavily indebted poor countries (HIPC)\n#> 60                            Africa Western and Central\n#> 61                                          Saudi Arabia\n#> 62                                               Turkiye\n#> 63                                           Switzerland\n#> 64                                                Poland\n#> 65                                                Sweden\n#> 66                                               Belgium\n#> 67                                            Low income\n#> 68                                          Small states\n#> 69                                              Thailand\n#> 70                                               Ireland\n#> 71                                                Israel\n#> 72                                             Argentina\n#> 73                                                Norway\n#> 74                                               Austria\n#> 75                                    Other small states\n#> 76                                               Nigeria\n#> 77                                          South Africa\n#> 78                                            Bangladesh\n#> 79                                  United Arab Emirates\n#> 80                                      Egypt, Arab Rep.\n#> 81                                               Denmark\n#> 82                                             Singapore\n#> 83                                           Philippines\n#> 84                                              Malaysia\n#> 85                                  Hong Kong SAR, China\n#> 86                                               Vietnam\n#> 87                                    Iran, Islamic Rep.\n#> 88                                              Pakistan\n#> 89                                                 Chile\n#> 90                                              Colombia\n#> 91                                               Finland\n#> 92                                               Romania\n#> 93                                               Czechia\n#> 94                                              Portugal\n#> 95                                           New Zealand\n#> 96                                                  Peru\n#> 97                                                Greece\n#> 98                                                  Iraq\n#> 99                                               Ukraine\n#> 100                                           Kazakhstan\n#> 101                                              Hungary\n#> 102                                                Qatar\n#> 103                                              Algeria\n#> 104                                              Morocco\n#> 105                                      Slovak Republic\n#> 106                                             Ethiopia\n#> 107                                                Kenya\n#> 108                                          Puerto Rico\n#> 109                                              Ecuador\n#> 110                                   Dominican Republic\n#> 111                                            Sri Lanka\n#> 112                                                 Oman\n#> 113                                            Guatemala\n#> 114                                           Luxembourg\n#> 115                                             Bulgaria\n#> 116                                                Ghana\n#> 117                               Caribbean small states\n#> 118                                        Cote d'Ivoire\n#> 119                                           Uzbekistan\n#> 120                                              Croatia\n#> 121                                              Belarus\n#> 122                                             Tanzania\n#> 123                                               Angola\n#> 124                                            Lithuania\n#> 125                                              Myanmar\n#> 126                                           Costa Rica\n#> 127                                               Panama\n#> 128                                               Serbia\n#> 129                                             Slovenia\n#> 130                                              Uruguay\n#> 131                                     Congo, Dem. Rep.\n#> 132                                           Azerbaijan\n#> 133                                              Tunisia\n#> 134                                               Jordan\n#> 135                                             Cameroon\n#> 136                                                Libya\n#> 137                                               Uganda\n#> 138                                              Bolivia\n#> 139                                               Latvia\n#> 140                                             Paraguay\n#> 141                                              Bahrain\n#> 142                                              Estonia\n#> 143                                                Nepal\n#> 144                                                Sudan\n#> 145                                     Macao SAR, China\n#> 146                                          El Salvador\n#> 147                                             Honduras\n#> 148                                               Cyprus\n#> 149                                             Zimbabwe\n#> 150                                              Senegal\n#> 151                                             Cambodia\n#> 152                                     Papua New Guinea\n#> 153                                              Iceland\n#> 154                                  Trinidad and Tobago\n#> 155                               Bosnia and Herzegovina\n#> 156                                              Lebanon\n#> 157                                               Zambia\n#> 158                                                Haiti\n#> 159                                                Gabon\n#> 160                                         Burkina Faso\n#> 161                                                 Mali\n#> 162                                              Lao PDR\n#> 163                                              Georgia\n#> 164                                              Albania\n#> 165                                   West Bank and Gaza\n#> 166                                             Botswana\n#> 167                                                Malta\n#> 168                                                Benin\n#> 169                                               Guinea\n#> 170                                           Mozambique\n#> 171                                             Mongolia\n#> 172                                                Niger\n#> 173                                          Afghanistan\n#> 174                                              Jamaica\n#> 175                                           Madagascar\n#> 176                                            Nicaragua\n#> 177                                    Brunei Darussalam\n#> 178                                              Armenia\n#> 179                                      North Macedonia\n#> 180                                              Moldova\n#> 181                                          Congo, Rep.\n#> 182                                               Malawi\n#> 183                                              Namibia\n#> 184                                    Equatorial Guinea\n#> 185                                                 Chad\n#> 186                                            Mauritius\n#> 187                                         Bahamas, The\n#> 188                                               Rwanda\n#> 189                                        New Caledonia\n#> 190                                           Mauritania\n#> 191                          Pacific island small states\n#> 192                                               Kosovo\n#> 193                                           Tajikistan\n#> 194                                               Monaco\n#> 195                                      Kyrgyz Republic\n#> 196                                                 Togo\n#> 197                                               Guyana\n#> 198                                              Somalia\n#> 199                                              Bermuda\n#> 200                                                 Guam\n#> 201                                     French Polynesia\n#> 202                                       Cayman Islands\n#> 203                                           Montenegro\n#> 204                                             Maldives\n#> 205                                             Barbados\n#> 206                                             Eswatini\n#> 207                                                 Fiji\n#> 208                                         Sierra Leone\n#> 209                                        Faroe Islands\n#> 210                                          Timor-Leste\n#> 211                                              Liberia\n#> 212                                             Djibouti\n#> 213                                              Andorra\n#> 214                                                Aruba\n#> 215                                             Suriname\n#> 216                                              Burundi\n#> 217                                              Curacao\n#> 218                                               Bhutan\n#> 219                             Central African Republic\n#> 220                                              Lesotho\n#> 221                                               Belize\n#> 222                                          Gambia, The\n#> 223                                           Cabo Verde\n#> 224                                            St. Lucia\n#> 225                                        Guinea-Bissau\n#> 226                                      Solomon Islands\n#> 227                                  Antigua and Barbuda\n#> 228                                           Seychelles\n#> 229                                              Comoros\n#> 230                                              Grenada\n#> 231                                              Vanuatu\n#> 232                             Turks and Caicos Islands\n#> 233                       St. Vincent and the Grenadines\n#> 234                                  St. Kitts and Nevis\n#> 235                                                Samoa\n#> 236                                       American Samoa\n#> 237                                             Dominica\n#> 238                                Sao Tome and Principe\n#> 239                                                Tonga\n#> 240                                Micronesia, Fed. Sts.\n#> 241                                     Marshall Islands\n#> 242                                                Palau\n#> 243                                             Kiribati\n#> 244                                                Nauru\n#> 245                                               Tuvalu\n#>     iso2c iso3c year          gdp status lastupdated\n#> 1      1W   WLD 2021 9.652743e+13         2023-05-10\n#> 2      XD       2021 5.982967e+13         2023-05-10\n#> 3      OE   OED 2021 5.826835e+13         2023-05-10\n#> 4      V4   PST 2021 5.497273e+13         2023-05-10\n#> 5      ZT   IBT 2021 3.806285e+13         2023-05-10\n#> 6      XO   LMY 2021 3.637059e+13         2023-05-10\n#> 7      XP   MIC 2021 3.584514e+13         2023-05-10\n#> 8      XF   IBD 2021 3.542267e+13         2023-05-10\n#> 9      Z4   EAS 2021 3.091169e+13         2023-05-10\n#> 10     XT       2021 2.710409e+13         2023-05-10\n#> 11     V3   LTE 2021 2.662214e+13         2023-05-10\n#> 12     XU   NAC 2021 2.531070e+13         2023-05-10\n#> 13     Z7   ECS 2021 2.508283e+13         2023-05-10\n#> 14     US   USA 2021 2.331508e+13         2023-05-10\n#> 15     4E   EAP 2021 2.075179e+13         2023-05-10\n#> 16     T4   TEA 2021 2.072517e+13         2023-05-10\n#> 17     CN   CHN 2021 1.773406e+13         2023-05-10\n#> 18     EU   EUU 2021 1.717742e+13         2023-05-10\n#> 19     XC   EMU 2021 1.456328e+13         2023-05-10\n#> 20     V2   EAR 2021 1.263730e+13         2023-05-10\n#> 21     XN       2021 8.742535e+12         2023-05-10\n#> 22     ZJ   LCN 2021 5.454429e+12         2023-05-10\n#> 23     T2   TLA 2021 5.183127e+12         2023-05-10\n#> 24     JP   JPN 2021 4.940878e+12         2023-05-10\n#> 25     XJ   LAC 2021 4.585104e+12         2023-05-10\n#> 26     T7   TEC 2021 4.550386e+12         2023-05-10\n#> 27     DE   DEU 2021 4.259935e+12         2023-05-10\n#> 28     8S   SAS 2021 4.088771e+12         2023-05-10\n#> 29     T5   TSA 2021 4.088771e+12         2023-05-10\n#> 30     ZQ   MEA 2021 3.679844e+12         2023-05-10\n#> 31     7E   ECA 2021 3.517373e+12         2023-05-10\n#> 32     IN   IND 2021 3.176295e+12         2023-05-10\n#> 33     GB   GBR 2021 3.131378e+12         2023-05-10\n#> 34     FR   FRA 2021 2.957880e+12         2023-05-10\n#> 35     1A   ARB 2021 2.862987e+12         2023-05-10\n#> 36     XG   IDA 2021 2.637762e+12         2023-05-10\n#> 37     IT   ITA 2021 2.107703e+12         2023-05-10\n#> 38     CA   CAN 2021 1.988336e+12         2023-05-10\n#> 39     ZG   SSF 2021 1.929052e+12         2023-05-10\n#> 40     T6   TSS 2021 1.929052e+12         2023-05-10\n#> 41     ZF   SSA 2021 1.927599e+12         2023-05-10\n#> 42     B8   CEB 2021 1.901935e+12         2023-05-10\n#> 43     KR   KOR 2021 1.810956e+12         2023-05-10\n#> 44     F1   FCS 2021 1.799023e+12         2023-05-10\n#> 45     RU   RUS 2021 1.778783e+12         2023-05-10\n#> 46     BR   BRA 2021 1.608981e+12         2023-05-10\n#> 47     AU   AUS 2021 1.552667e+12         2023-05-10\n#> 48     XI   IDX 2021 1.544392e+12         2023-05-10\n#> 49     XQ   MNA 2021 1.493752e+12         2023-05-10\n#> 50     T3   TMN 2021 1.475708e+12         2023-05-10\n#> 51     V1   PRE 2021 1.434259e+12         2023-05-10\n#> 52     ES   ESP 2021 1.427381e+12         2023-05-10\n#> 53     XL   LDC 2021 1.280908e+12         2023-05-10\n#> 54     MX   MEX 2021 1.272839e+12         2023-05-10\n#> 55     ID   IDN 2021 1.186093e+12         2023-05-10\n#> 56     XH   IDB 2021 1.096478e+12         2023-05-10\n#> 57     ZH   AFE 2021 1.089454e+12         2023-05-10\n#> 58     NL   NLD 2021 1.012847e+12         2023-05-10\n#> 59     XE   HPC 2021 8.919015e+11         2023-05-10\n#> 60     ZI   AFW 2021 8.401873e+11         2023-05-10\n#> 61     SA   SAU 2021 8.335412e+11         2023-05-10\n#> 62     TR   TUR 2021 8.190352e+11         2023-05-10\n#> 63     CH   CHE 2021 8.006402e+11         2023-05-10\n#> 64     PL   POL 2021 6.794448e+11         2023-05-10\n#> 65     SE   SWE 2021 6.356638e+11         2023-05-10\n#> 66     BE   BEL 2021 5.941042e+11         2023-05-10\n#> 67     XM       2021 5.629778e+11         2023-05-10\n#> 68     S1   SST 2021 5.387061e+11         2023-05-10\n#> 69     TH   THA 2021 5.059470e+11         2023-05-10\n#> 70     IE   IRL 2021 5.041826e+11         2023-05-10\n#> 71     IL   ISR 2021 4.885265e+11         2023-05-10\n#> 72     AR   ARG 2021 4.872273e+11         2023-05-10\n#> 73     NO   NOR 2021 4.821749e+11         2023-05-10\n#> 74     AT   AUT 2021 4.803684e+11         2023-05-10\n#> 75     S4   OSS 2021 4.539483e+11         2023-05-10\n#> 76     NG   NGA 2021 4.408336e+11         2023-05-10\n#> 77     ZA   ZAF 2021 4.190150e+11         2023-05-10\n#> 78     BD   BGD 2021 4.162649e+11         2023-05-10\n#> 79     AE   ARE 2021 4.150216e+11         2023-05-10\n#> 80     EG   EGY 2021 4.041428e+11         2023-05-10\n#> 81     DK   DNK 2021 3.983033e+11         2023-05-10\n#> 82     SG   SGP 2021 3.969869e+11         2023-05-10\n#> 83     PH   PHL 2021 3.940864e+11         2023-05-10\n#> 84     MY   MYS 2021 3.729810e+11         2023-05-10\n#> 85     HK   HKG 2021 3.691764e+11         2023-05-10\n#> 86     VN   VNM 2021 3.661376e+11         2023-05-10\n#> 87     IR   IRN 2021 3.597132e+11         2023-05-10\n#> 88     PK   PAK 2021 3.482625e+11         2023-05-10\n#> 89     CL   CHL 2021 3.170585e+11         2023-05-10\n#> 90     CO   COL 2021 3.144641e+11         2023-05-10\n#> 91     FI   FIN 2021 2.973019e+11         2023-05-10\n#> 92     RO   ROU 2021 2.840876e+11         2023-05-10\n#> 93     CZ   CZE 2021 2.817779e+11         2023-05-10\n#> 94     PT   PRT 2021 2.536631e+11         2023-05-10\n#> 95     NZ   NZL 2021 2.498857e+11         2023-05-10\n#> 96     PE   PER 2021 2.232495e+11         2023-05-10\n#> 97     GR   GRC 2021 2.148739e+11         2023-05-10\n#> 98     IQ   IRQ 2021 2.078893e+11         2023-05-10\n#> 99     UA   UKR 2021 2.000855e+11         2023-05-10\n#> 100    KZ   KAZ 2021 1.971123e+11         2023-05-10\n#> 101    HU   HUN 2021 1.818480e+11         2023-05-10\n#> 102    QA   QAT 2021 1.796772e+11         2023-05-10\n#> 103    DZ   DZA 2021 1.630444e+11         2023-05-10\n#> 104    MA   MAR 2021 1.428663e+11         2023-05-10\n#> 105    SK   SVK 2021 1.165271e+11         2023-05-10\n#> 106    ET   ETH 2021 1.112711e+11         2023-05-10\n#> 107    KE   KEN 2021 1.103471e+11         2023-05-10\n#> 108    PR   PRI 2021 1.065257e+11         2023-05-10\n#> 109    EC   ECU 2021 1.061659e+11         2023-05-10\n#> 110    DO   DOM 2021 9.424345e+10         2023-05-10\n#> 111    LK   LKA 2021 8.892726e+10         2023-05-10\n#> 112    OM   OMN 2021 8.819198e+10         2023-05-10\n#> 113    GT   GTM 2021 8.598575e+10         2023-05-10\n#> 114    LU   LUX 2021 8.550624e+10         2023-05-10\n#> 115    BG   BGR 2021 8.405631e+10         2023-05-10\n#> 116    GH   GHA 2021 7.759428e+10         2023-05-10\n#> 117    S3   CSS 2021 7.529530e+10         2023-05-10\n#> 118    CI   CIV 2021 7.004319e+10         2023-05-10\n#> 119    UZ   UZB 2021 6.923890e+10         2023-05-10\n#> 120    HR   HRV 2021 6.895508e+10         2023-05-10\n#> 121    BY   BLR 2021 6.820538e+10         2023-05-10\n#> 122    TZ   TZA 2021 6.784105e+10         2023-05-10\n#> 123    AO   AGO 2021 6.740429e+10         2023-05-10\n#> 124    LT   LTU 2021 6.644526e+10         2023-05-10\n#> 125    MM   MMR 2021 6.509175e+10         2023-05-10\n#> 126    CR   CRI 2021 6.428244e+10         2023-05-10\n#> 127    PA   PAN 2021 6.360510e+10         2023-05-10\n#> 128    RS   SRB 2021 6.308205e+10         2023-05-10\n#> 129    SI   SVN 2021 6.174859e+10         2023-05-10\n#> 130    UY   URY 2021 5.931948e+10         2023-05-10\n#> 131    CD   COD 2021 5.535097e+10         2023-05-10\n#> 132    AZ   AZE 2021 5.462218e+10         2023-05-10\n#> 133    TN   TUN 2021 4.668674e+10         2023-05-10\n#> 134    JO   JOR 2021 4.574427e+10         2023-05-10\n#> 135    CM   CMR 2021 4.533828e+10         2023-05-10\n#> 136    LY   LBY 2021 4.281747e+10         2023-05-10\n#> 137    UG   UGA 2021 4.052979e+10         2023-05-10\n#> 138    BO   BOL 2021 4.040821e+10         2023-05-10\n#> 139    LV   LVA 2021 3.985350e+10         2023-05-10\n#> 140    PY   PRY 2021 3.949543e+10         2023-05-10\n#> 141    BH   BHR 2021 3.886866e+10         2023-05-10\n#> 142    EE   EST 2021 3.719117e+10         2023-05-10\n#> 143    NP   NPL 2021 3.628883e+10         2023-05-10\n#> 144    SD   SDN 2021 3.432606e+10         2023-05-10\n#> 145    MO   MAC 2021 3.012391e+10         2023-05-10\n#> 146    SV   SLV 2021 2.873694e+10         2023-05-10\n#> 147    HN   HND 2021 2.848867e+10         2023-05-10\n#> 148    CY   CYP 2021 2.840787e+10         2023-05-10\n#> 149    ZW   ZWE 2021 2.837124e+10         2023-05-10\n#> 150    SN   SEN 2021 2.762539e+10         2023-05-10\n#> 151    KH   KHM 2021 2.696106e+10         2023-05-10\n#> 152    PG   PNG 2021 2.659431e+10         2023-05-10\n#> 153    IS   ISL 2021 2.560242e+10         2023-05-10\n#> 154    TT   TTO 2021 2.446020e+10         2023-05-10\n#> 155    BA   BIH 2021 2.336536e+10         2023-05-10\n#> 156    LB   LBN 2021 2.313194e+10         2023-05-10\n#> 157    ZM   ZMB 2021 2.214763e+10         2023-05-10\n#> 158    HT   HTI 2021 2.094439e+10         2023-05-10\n#> 159    GA   GAB 2021 2.021684e+10         2023-05-10\n#> 160    BF   BFA 2021 1.973762e+10         2023-05-10\n#> 161    ML   MLI 2021 1.914046e+10         2023-05-10\n#> 162    LA   LAO 2021 1.882715e+10         2023-05-10\n#> 163    GE   GEO 2021 1.862937e+10         2023-05-10\n#> 164    AL   ALB 2021 1.825579e+10         2023-05-10\n#> 165    PS   PSE 2021 1.803680e+10         2023-05-10\n#> 166    BW   BWA 2021 1.761479e+10         2023-05-10\n#> 167    MT   MLT 2021 1.736404e+10         2023-05-10\n#> 168    BJ   BEN 2021 1.714492e+10         2023-05-10\n#> 169    GN   GIN 2021 1.609182e+10         2023-05-10\n#> 170    MZ   MOZ 2021 1.577676e+10         2023-05-10\n#> 171    MN   MNG 2021 1.528644e+10         2023-05-10\n#> 172    NE   NER 2021 1.491500e+10         2023-05-10\n#> 173    AF   AFG 2021 1.478686e+10         2023-05-10\n#> 174    JM   JAM 2021 1.465759e+10         2023-05-10\n#> 175    MG   MDG 2021 1.447260e+10         2023-05-10\n#> 176    NI   NIC 2021 1.401302e+10         2023-05-10\n#> 177    BN   BRN 2021 1.400657e+10         2023-05-10\n#> 178    AM   ARM 2021 1.386141e+10         2023-05-10\n#> 179    MK   MKD 2021 1.382505e+10         2023-05-10\n#> 180    MD   MDA 2021 1.367922e+10         2023-05-10\n#> 181    CG   COG 2021 1.336623e+10         2023-05-10\n#> 182    MW   MWI 2021 1.262672e+10         2023-05-10\n#> 183    NA   NAM 2021 1.231060e+10         2023-05-10\n#> 184    GQ   GNQ 2021 1.226939e+10         2023-05-10\n#> 185    TD   TCD 2021 1.177998e+10         2023-05-10\n#> 186    MU   MUS 2021 1.152904e+10         2023-05-10\n#> 187    BS   BHS 2021 1.120860e+10         2023-05-10\n#> 188    RW   RWA 2021 1.107036e+10         2023-05-10\n#> 189    NC   NCL 2021 1.007135e+10         2023-05-10\n#> 190    MR   MRT 2021 9.996250e+09         2023-05-10\n#> 191    S2   PSS 2021 9.481916e+09         2023-05-10\n#> 192    XK   XKX 2021 9.412034e+09         2023-05-10\n#> 193    TJ   TJK 2021 8.746271e+09         2023-05-10\n#> 194    MC   MCO 2021 8.596097e+09         2023-05-10\n#> 195    KG   KGZ 2021 8.543424e+09         2023-05-10\n#> 196    TG   TGO 2021 8.413201e+09         2023-05-10\n#> 197    GY   GUY 2021 8.044499e+09         2023-05-10\n#> 198    SO   SOM 2021 7.628000e+09         2023-05-10\n#> 199    BM   BMU 2021 7.286607e+09         2023-05-10\n#> 200    GU   GUM 2021 6.123000e+09         2023-05-10\n#> 201    PF   PYF 2021 6.054677e+09         2023-05-10\n#> 202    KY   CYM 2021 5.898450e+09         2023-05-10\n#> 203    ME   MNE 2021 5.861268e+09         2023-05-10\n#> 204    MV   MDV 2021 5.405576e+09         2023-05-10\n#> 205    BB   BRB 2021 4.843800e+09         2023-05-10\n#> 206    SZ   SWZ 2021 4.743335e+09         2023-05-10\n#> 207    FJ   FJI 2021 4.296305e+09         2023-05-10\n#> 208    SL   SLE 2021 4.042238e+09         2023-05-10\n#> 209    FO   FRO 2021 3.649886e+09         2023-05-10\n#> 210    TL   TLS 2021 3.621222e+09         2023-05-10\n#> 211    LR   LBR 2021 3.509000e+09         2023-05-10\n#> 212    DJ   DJI 2021 3.482987e+09         2023-05-10\n#> 213    AD   AND 2021 3.330282e+09         2023-05-10\n#> 214    AW   ABW 2021 3.126019e+09         2023-05-10\n#> 215    SR   SUR 2021 2.984706e+09         2023-05-10\n#> 216    BI   BDI 2021 2.779813e+09         2023-05-10\n#> 217    CW   CUW 2021 2.699612e+09         2023-05-10\n#> 218    BT   BTN 2021 2.539553e+09         2023-05-10\n#> 219    CF   CAF 2021 2.516498e+09         2023-05-10\n#> 220    LS   LSO 2021 2.496135e+09         2023-05-10\n#> 221    BZ   BLZ 2021 2.491500e+09         2023-05-10\n#> 222    GM   GMB 2021 2.038417e+09         2023-05-10\n#> 223    CV   CPV 2021 1.936174e+09         2023-05-10\n#> 224    LC   LCA 2021 1.691275e+09         2023-05-10\n#> 225    GW   GNB 2021 1.638518e+09         2023-05-10\n#> 226    SB   SLB 2021 1.631487e+09         2023-05-10\n#> 227    AG   ATG 2021 1.471126e+09         2023-05-10\n#> 228    SC   SYC 2021 1.454458e+09         2023-05-10\n#> 229    KM   COM 2021 1.296090e+09         2023-05-10\n#> 230    GD   GRD 2021 1.122807e+09         2023-05-10\n#> 231    VU   VUT 2021 9.563327e+08         2023-05-10\n#> 232    TC   TCA 2021 9.432698e+08         2023-05-10\n#> 233    VC   VCT 2021 9.041815e+08         2023-05-10\n#> 234    KN   KNA 2021 8.608407e+08         2023-05-10\n#> 235    WS   WSM 2021 8.438424e+08         2023-05-10\n#> 236    AS   ASM 2021 7.090000e+08         2023-05-10\n#> 237    DM   DMA 2021 5.541815e+08         2023-05-10\n#> 238    ST   STP 2021 5.266538e+08         2023-05-10\n#> 239    TO   TON 2021 4.692313e+08         2023-05-10\n#> 240    FM   FSM 2021 4.040289e+08         2023-05-10\n#> 241    MH   MHL 2021 2.595387e+08         2023-05-10\n#> 242    PW   PLW 2021 2.178000e+08         2023-05-10\n#> 243    KI   KIR 2021 2.070312e+08         2023-05-10\n#> 244    NR   NRU 2021 1.332189e+08         2023-05-10\n#> 245    TV   TUV 2021 6.310096e+07         2023-05-10\n#>                         region             capital\n#> 1                   Aggregates                    \n#> 2                         <NA>                <NA>\n#> 3                   Aggregates                    \n#> 4                   Aggregates                    \n#> 5                   Aggregates                    \n#> 6                   Aggregates                    \n#> 7                   Aggregates                    \n#> 8                   Aggregates                    \n#> 9                   Aggregates                    \n#> 10                        <NA>                <NA>\n#> 11                  Aggregates                    \n#> 12                  Aggregates                    \n#> 13                  Aggregates                    \n#> 14               North America     Washington D.C.\n#> 15                  Aggregates                    \n#> 16                  Aggregates                    \n#> 17         East Asia & Pacific             Beijing\n#> 18                  Aggregates                    \n#> 19                  Aggregates                    \n#> 20                  Aggregates                    \n#> 21                        <NA>                <NA>\n#> 22                        <NA>                <NA>\n#> 23                  Aggregates                    \n#> 24         East Asia & Pacific               Tokyo\n#> 25                  Aggregates                    \n#> 26                  Aggregates                    \n#> 27       Europe & Central Asia              Berlin\n#> 28                  Aggregates                    \n#> 29                  Aggregates                    \n#> 30                  Aggregates                    \n#> 31                  Aggregates                    \n#> 32                  South Asia           New Delhi\n#> 33       Europe & Central Asia              London\n#> 34       Europe & Central Asia               Paris\n#> 35                  Aggregates                    \n#> 36                  Aggregates                    \n#> 37       Europe & Central Asia                Rome\n#> 38               North America              Ottawa\n#> 39                        <NA>                <NA>\n#> 40                  Aggregates                    \n#> 41                  Aggregates                    \n#> 42                  Aggregates                    \n#> 43         East Asia & Pacific               Seoul\n#> 44                  Aggregates                    \n#> 45       Europe & Central Asia              Moscow\n#> 46   Latin America & Caribbean            Brasilia\n#> 47         East Asia & Pacific            Canberra\n#> 48                  Aggregates                    \n#> 49                  Aggregates                    \n#> 50                  Aggregates                    \n#> 51                  Aggregates                    \n#> 52       Europe & Central Asia              Madrid\n#> 53                  Aggregates                    \n#> 54   Latin America & Caribbean         Mexico City\n#> 55         East Asia & Pacific             Jakarta\n#> 56                  Aggregates                    \n#> 57                  Aggregates                    \n#> 58       Europe & Central Asia           Amsterdam\n#> 59                  Aggregates                    \n#> 60                  Aggregates                    \n#> 61  Middle East & North Africa              Riyadh\n#> 62       Europe & Central Asia              Ankara\n#> 63       Europe & Central Asia                Bern\n#> 64       Europe & Central Asia              Warsaw\n#> 65       Europe & Central Asia           Stockholm\n#> 66       Europe & Central Asia            Brussels\n#> 67                        <NA>                <NA>\n#> 68                  Aggregates                    \n#> 69         East Asia & Pacific             Bangkok\n#> 70       Europe & Central Asia              Dublin\n#> 71  Middle East & North Africa                    \n#> 72   Latin America & Caribbean        Buenos Aires\n#> 73       Europe & Central Asia                Oslo\n#> 74       Europe & Central Asia              Vienna\n#> 75                  Aggregates                    \n#> 76          Sub-Saharan Africa               Abuja\n#> 77          Sub-Saharan Africa            Pretoria\n#> 78                  South Asia               Dhaka\n#> 79  Middle East & North Africa           Abu Dhabi\n#> 80  Middle East & North Africa               Cairo\n#> 81       Europe & Central Asia          Copenhagen\n#> 82         East Asia & Pacific           Singapore\n#> 83         East Asia & Pacific              Manila\n#> 84         East Asia & Pacific        Kuala Lumpur\n#> 85         East Asia & Pacific                    \n#> 86         East Asia & Pacific               Hanoi\n#> 87  Middle East & North Africa              Tehran\n#> 88                  South Asia           Islamabad\n#> 89   Latin America & Caribbean            Santiago\n#> 90   Latin America & Caribbean              Bogota\n#> 91       Europe & Central Asia            Helsinki\n#> 92       Europe & Central Asia           Bucharest\n#> 93                        <NA>                <NA>\n#> 94       Europe & Central Asia              Lisbon\n#> 95         East Asia & Pacific          Wellington\n#> 96   Latin America & Caribbean                Lima\n#> 97       Europe & Central Asia              Athens\n#> 98  Middle East & North Africa             Baghdad\n#> 99       Europe & Central Asia                Kiev\n#> 100      Europe & Central Asia              Astana\n#> 101      Europe & Central Asia            Budapest\n#> 102 Middle East & North Africa                Doha\n#> 103 Middle East & North Africa             Algiers\n#> 104 Middle East & North Africa               Rabat\n#> 105      Europe & Central Asia          Bratislava\n#> 106         Sub-Saharan Africa         Addis Ababa\n#> 107         Sub-Saharan Africa             Nairobi\n#> 108  Latin America & Caribbean            San Juan\n#> 109  Latin America & Caribbean               Quito\n#> 110  Latin America & Caribbean       Santo Domingo\n#> 111                 South Asia             Colombo\n#> 112 Middle East & North Africa              Muscat\n#> 113  Latin America & Caribbean      Guatemala City\n#> 114      Europe & Central Asia          Luxembourg\n#> 115      Europe & Central Asia               Sofia\n#> 116         Sub-Saharan Africa               Accra\n#> 117                 Aggregates                    \n#> 118         Sub-Saharan Africa        Yamoussoukro\n#> 119      Europe & Central Asia            Tashkent\n#> 120      Europe & Central Asia              Zagreb\n#> 121      Europe & Central Asia               Minsk\n#> 122         Sub-Saharan Africa              Dodoma\n#> 123         Sub-Saharan Africa              Luanda\n#> 124      Europe & Central Asia             Vilnius\n#> 125        East Asia & Pacific           Naypyidaw\n#> 126  Latin America & Caribbean            San Jose\n#> 127  Latin America & Caribbean         Panama City\n#> 128      Europe & Central Asia            Belgrade\n#> 129      Europe & Central Asia           Ljubljana\n#> 130  Latin America & Caribbean          Montevideo\n#> 131         Sub-Saharan Africa            Kinshasa\n#> 132      Europe & Central Asia                Baku\n#> 133 Middle East & North Africa               Tunis\n#> 134 Middle East & North Africa               Amman\n#> 135         Sub-Saharan Africa             Yaounde\n#> 136 Middle East & North Africa             Tripoli\n#> 137         Sub-Saharan Africa             Kampala\n#> 138  Latin America & Caribbean              La Paz\n#> 139      Europe & Central Asia                Riga\n#> 140  Latin America & Caribbean            Asuncion\n#> 141 Middle East & North Africa              Manama\n#> 142      Europe & Central Asia             Tallinn\n#> 143                 South Asia           Kathmandu\n#> 144         Sub-Saharan Africa            Khartoum\n#> 145        East Asia & Pacific                    \n#> 146  Latin America & Caribbean        San Salvador\n#> 147  Latin America & Caribbean         Tegucigalpa\n#> 148      Europe & Central Asia             Nicosia\n#> 149         Sub-Saharan Africa              Harare\n#> 150         Sub-Saharan Africa               Dakar\n#> 151        East Asia & Pacific          Phnom Penh\n#> 152        East Asia & Pacific        Port Moresby\n#> 153      Europe & Central Asia           Reykjavik\n#> 154  Latin America & Caribbean       Port-of-Spain\n#> 155      Europe & Central Asia            Sarajevo\n#> 156 Middle East & North Africa              Beirut\n#> 157         Sub-Saharan Africa              Lusaka\n#> 158  Latin America & Caribbean      Port-au-Prince\n#> 159         Sub-Saharan Africa          Libreville\n#> 160         Sub-Saharan Africa         Ouagadougou\n#> 161         Sub-Saharan Africa              Bamako\n#> 162        East Asia & Pacific           Vientiane\n#> 163      Europe & Central Asia             Tbilisi\n#> 164      Europe & Central Asia              Tirane\n#> 165 Middle East & North Africa                    \n#> 166         Sub-Saharan Africa            Gaborone\n#> 167 Middle East & North Africa            Valletta\n#> 168         Sub-Saharan Africa          Porto-Novo\n#> 169         Sub-Saharan Africa             Conakry\n#> 170         Sub-Saharan Africa              Maputo\n#> 171        East Asia & Pacific         Ulaanbaatar\n#> 172         Sub-Saharan Africa              Niamey\n#> 173                 South Asia               Kabul\n#> 174  Latin America & Caribbean            Kingston\n#> 175         Sub-Saharan Africa        Antananarivo\n#> 176  Latin America & Caribbean             Managua\n#> 177        East Asia & Pacific Bandar Seri Begawan\n#> 178      Europe & Central Asia             Yerevan\n#> 179      Europe & Central Asia              Skopje\n#> 180      Europe & Central Asia            Chisinau\n#> 181         Sub-Saharan Africa         Brazzaville\n#> 182         Sub-Saharan Africa            Lilongwe\n#> 183         Sub-Saharan Africa            Windhoek\n#> 184         Sub-Saharan Africa              Malabo\n#> 185         Sub-Saharan Africa           N'Djamena\n#> 186         Sub-Saharan Africa          Port Louis\n#> 187  Latin America & Caribbean              Nassau\n#> 188         Sub-Saharan Africa              Kigali\n#> 189        East Asia & Pacific             Noum'ea\n#> 190         Sub-Saharan Africa          Nouakchott\n#> 191                 Aggregates                    \n#> 192      Europe & Central Asia            Pristina\n#> 193      Europe & Central Asia            Dushanbe\n#> 194      Europe & Central Asia              Monaco\n#> 195      Europe & Central Asia             Bishkek\n#> 196         Sub-Saharan Africa                Lome\n#> 197  Latin America & Caribbean          Georgetown\n#> 198         Sub-Saharan Africa           Mogadishu\n#> 199              North America            Hamilton\n#> 200        East Asia & Pacific               Agana\n#> 201        East Asia & Pacific             Papeete\n#> 202  Latin America & Caribbean         George Town\n#> 203      Europe & Central Asia           Podgorica\n#> 204                 South Asia                Male\n#> 205  Latin America & Caribbean          Bridgetown\n#> 206         Sub-Saharan Africa             Mbabane\n#> 207        East Asia & Pacific                Suva\n#> 208         Sub-Saharan Africa            Freetown\n#> 209      Europe & Central Asia            Torshavn\n#> 210        East Asia & Pacific                Dili\n#> 211         Sub-Saharan Africa            Monrovia\n#> 212 Middle East & North Africa            Djibouti\n#> 213      Europe & Central Asia    Andorra la Vella\n#> 214  Latin America & Caribbean          Oranjestad\n#> 215  Latin America & Caribbean          Paramaribo\n#> 216         Sub-Saharan Africa           Bujumbura\n#> 217  Latin America & Caribbean          Willemstad\n#> 218                 South Asia             Thimphu\n#> 219         Sub-Saharan Africa              Bangui\n#> 220         Sub-Saharan Africa              Maseru\n#> 221  Latin America & Caribbean            Belmopan\n#> 222         Sub-Saharan Africa              Banjul\n#> 223         Sub-Saharan Africa               Praia\n#> 224  Latin America & Caribbean            Castries\n#> 225         Sub-Saharan Africa              Bissau\n#> 226        East Asia & Pacific             Honiara\n#> 227  Latin America & Caribbean        Saint John's\n#> 228         Sub-Saharan Africa            Victoria\n#> 229         Sub-Saharan Africa              Moroni\n#> 230  Latin America & Caribbean      Saint George's\n#> 231        East Asia & Pacific           Port-Vila\n#> 232  Latin America & Caribbean          Grand Turk\n#> 233  Latin America & Caribbean           Kingstown\n#> 234  Latin America & Caribbean          Basseterre\n#> 235        East Asia & Pacific                Apia\n#> 236        East Asia & Pacific           Pago Pago\n#> 237  Latin America & Caribbean              Roseau\n#> 238         Sub-Saharan Africa            Sao Tome\n#> 239        East Asia & Pacific          Nuku'alofa\n#> 240        East Asia & Pacific             Palikir\n#> 241        East Asia & Pacific              Majuro\n#> 242        East Asia & Pacific               Koror\n#> 243        East Asia & Pacific              Tarawa\n#> 244        East Asia & Pacific      Yaren District\n#> 245        East Asia & Pacific            Funafuti\n#>      longitude   latitude              income\n#> 1                                  Aggregates\n#> 2         <NA>       <NA>                <NA>\n#> 3                                  Aggregates\n#> 4                                  Aggregates\n#> 5                                  Aggregates\n#> 6                                  Aggregates\n#> 7                                  Aggregates\n#> 8                                  Aggregates\n#> 9                                  Aggregates\n#> 10        <NA>       <NA>                <NA>\n#> 11                                 Aggregates\n#> 12                                 Aggregates\n#> 13                                 Aggregates\n#> 14     -77.032    38.8895         High income\n#> 15                                 Aggregates\n#> 16                                 Aggregates\n#> 17     116.286    40.0495 Upper middle income\n#> 18                                 Aggregates\n#> 19                                 Aggregates\n#> 20                                 Aggregates\n#> 21        <NA>       <NA>                <NA>\n#> 22        <NA>       <NA>                <NA>\n#> 23                                 Aggregates\n#> 24      139.77      35.67         High income\n#> 25                                 Aggregates\n#> 26                                 Aggregates\n#> 27     13.4115    52.5235         High income\n#> 28                                 Aggregates\n#> 29                                 Aggregates\n#> 30                                 Aggregates\n#> 31                                 Aggregates\n#> 32      77.225    28.6353 Lower middle income\n#> 33   -0.126236    51.5002         High income\n#> 34     2.35097    48.8566         High income\n#> 35                                 Aggregates\n#> 36                                 Aggregates\n#> 37     12.4823    41.8955         High income\n#> 38    -75.6919    45.4215         High income\n#> 39        <NA>       <NA>                <NA>\n#> 40                                 Aggregates\n#> 41                                 Aggregates\n#> 42                                 Aggregates\n#> 43     126.957    37.5323         High income\n#> 44                                 Aggregates\n#> 45     37.6176    55.7558 Upper middle income\n#> 46    -47.9292   -15.7801 Upper middle income\n#> 47     149.129    -35.282         High income\n#> 48                                 Aggregates\n#> 49                                 Aggregates\n#> 50                                 Aggregates\n#> 51                                 Aggregates\n#> 52    -3.70327    40.4167         High income\n#> 53                                 Aggregates\n#> 54    -99.1276     19.427 Upper middle income\n#> 55      106.83   -6.19752 Lower middle income\n#> 56                                 Aggregates\n#> 57                                 Aggregates\n#> 58     4.89095    52.3738         High income\n#> 59                                 Aggregates\n#> 60                                 Aggregates\n#> 61     46.6977    24.6748         High income\n#> 62     32.3606    39.7153 Upper middle income\n#> 63     7.44821     46.948         High income\n#> 64       21.02      52.26         High income\n#> 65     18.0645    59.3327         High income\n#> 66     4.36761    50.8371         High income\n#> 67        <NA>       <NA>                <NA>\n#> 68                                 Aggregates\n#> 69     100.521    13.7308 Upper middle income\n#> 70    -6.26749    53.3441         High income\n#> 71     35.2035    31.7717         High income\n#> 72    -58.4173   -34.6118 Upper middle income\n#> 73     10.7387    59.9138         High income\n#> 74     16.3798    48.2201         High income\n#> 75                                 Aggregates\n#> 76     7.48906    9.05804 Lower middle income\n#> 77     28.1871    -25.746 Upper middle income\n#> 78     90.4113    23.7055 Lower middle income\n#> 79     54.3705    24.4764         High income\n#> 80     31.2461    30.0982 Lower middle income\n#> 81     12.5681    55.6763         High income\n#> 82      103.85    1.28941         High income\n#> 83     121.035    14.5515 Lower middle income\n#> 84     101.684    3.12433 Upper middle income\n#> 85     114.109    22.3964         High income\n#> 86     105.825    21.0069 Lower middle income\n#> 87     51.4447    35.6878 Lower middle income\n#> 88        72.8    30.5167 Lower middle income\n#> 89    -70.6475    -33.475         High income\n#> 90     -74.082    4.60987 Upper middle income\n#> 91     24.9525    60.1608         High income\n#> 92     26.0979    44.4479         High income\n#> 93        <NA>       <NA>                <NA>\n#> 94    -9.13552    38.7072         High income\n#> 95     174.776   -41.2865         High income\n#> 96    -77.0465   -12.0931 Upper middle income\n#> 97     23.7166    37.9792         High income\n#> 98      44.394    33.3302 Upper middle income\n#> 99     30.5038    50.4536 Lower middle income\n#> 100    71.4382    51.1879 Upper middle income\n#> 101    19.0408    47.4984         High income\n#> 102    51.5082    25.2948         High income\n#> 103    3.05097    36.7397 Lower middle income\n#> 104    -6.8704    33.9905 Lower middle income\n#> 105    17.1073    48.1484         High income\n#> 106    38.7468    9.02274          Low income\n#> 107    36.8126   -1.27975 Lower middle income\n#> 108        -66      18.23         High income\n#> 109   -78.5243  -0.229498 Upper middle income\n#> 110   -69.8908     18.479 Upper middle income\n#> 111    79.8528    6.92148 Lower middle income\n#> 112    58.5874    23.6105         High income\n#> 113   -90.5328    14.6248 Upper middle income\n#> 114     6.1296      49.61         High income\n#> 115    23.3238    42.7105 Upper middle income\n#> 116   -0.20795    5.57045 Lower middle income\n#> 117                                Aggregates\n#> 118    -4.0305      5.332 Lower middle income\n#> 119     69.269    41.3052 Lower middle income\n#> 120    15.9614    45.8069         High income\n#> 121    27.5766    53.9678 Upper middle income\n#> 122    35.7382   -6.17486 Lower middle income\n#> 123     13.242   -8.81155 Lower middle income\n#> 124    25.2799    54.6896         High income\n#> 125    95.9562     21.914 Lower middle income\n#> 126   -84.0089    9.63701 Upper middle income\n#> 127   -79.5188    8.99427         High income\n#> 128    20.4656    44.8024 Upper middle income\n#> 129    14.5044    46.0546         High income\n#> 130   -56.0675   -34.8941         High income\n#> 131    15.3222     -4.325          Low income\n#> 132    49.8932    40.3834 Upper middle income\n#> 133      10.21    36.7899 Lower middle income\n#> 134    35.9263    31.9497 Upper middle income\n#> 135    11.5174     3.8721 Lower middle income\n#> 136    13.1072    32.8578 Upper middle income\n#> 137    32.5729   0.314269          Low income\n#> 138   -66.1936   -13.9908 Lower middle income\n#> 139    24.1048    56.9465         High income\n#> 140   -57.6362   -25.3005 Upper middle income\n#> 141    50.5354    26.1921         High income\n#> 142    24.7586    59.4392         High income\n#> 143    85.3157    27.6939 Lower middle income\n#> 144    32.5363    15.5932          Low income\n#> 145     113.55    22.1667         High income\n#> 146   -89.2073    13.7034 Lower middle income\n#> 147   -87.4667    15.1333 Lower middle income\n#> 148    33.3736    35.1676         High income\n#> 149    31.0672   -17.8312 Lower middle income\n#> 150   -17.4734    14.7247 Lower middle income\n#> 151    104.874    11.5556 Lower middle income\n#> 152    147.194   -9.47357 Lower middle income\n#> 153   -21.8952    64.1353         High income\n#> 154   -61.4789    10.6596         High income\n#> 155    18.4214    43.8607 Upper middle income\n#> 156    35.5134    33.8872 Lower middle income\n#> 157    28.2937   -15.3982          Low income\n#> 158   -72.3288    18.5392 Lower middle income\n#> 159    9.45162    0.38832 Upper middle income\n#> 160   -1.53395    12.3605          Low income\n#> 161   -7.50034    13.5667          Low income\n#> 162    102.177    18.5826 Lower middle income\n#> 163     44.793      41.71 Upper middle income\n#> 164    19.8172    41.3317 Upper middle income\n#> 165                       Lower middle income\n#> 166    25.9201   -24.6544 Upper middle income\n#> 167    14.5189    35.9042         High income\n#> 168     2.6323     6.4779 Lower middle income\n#> 169      -13.7    9.51667          Low income\n#> 170    32.5713   -25.9664          Low income\n#> 171    106.937    47.9129 Lower middle income\n#> 172     2.1073     13.514          Low income\n#> 173    69.1761    34.5228          Low income\n#> 174    -76.792    17.9927 Upper middle income\n#> 175    45.7167   -20.4667          Low income\n#> 176   -86.2734    12.1475 Lower middle income\n#> 177    114.946    4.94199         High income\n#> 178     44.509    40.1596 Upper middle income\n#> 179    21.4361    42.0024 Upper middle income\n#> 180    28.8497    47.0167 Upper middle income\n#> 181    15.2662    -4.2767 Lower middle income\n#> 182    33.7703   -13.9899          Low income\n#> 183    17.0931   -22.5648 Upper middle income\n#> 184     8.7741     3.7523 Upper middle income\n#> 185    15.0445    12.1048          Low income\n#> 186    57.4977   -20.1605 Upper middle income\n#> 187    -77.339    25.0661         High income\n#> 188    30.0587   -1.95325          Low income\n#> 189    166.464   -22.2677         High income\n#> 190   -15.9824    18.2367 Lower middle income\n#> 191                                Aggregates\n#> 192     20.926     42.565 Upper middle income\n#> 193    68.7864    38.5878 Lower middle income\n#> 194    7.41891    43.7325         High income\n#> 195    74.6057    42.8851 Lower middle income\n#> 196     1.2255     6.1228          Low income\n#> 197   -58.1548    6.80461 Upper middle income\n#> 198    45.3254    2.07515          Low income\n#> 199    -64.706    32.3293         High income\n#> 200    144.794    13.4443         High income\n#> 201    -149.57    -17.535         High income\n#> 202   -81.3857    19.3022         High income\n#> 203    19.2595    42.4602 Upper middle income\n#> 204    73.5109     4.1742 Upper middle income\n#> 205   -59.6105    13.0935         High income\n#> 206    31.4659   -26.5225 Lower middle income\n#> 207    178.399   -18.1149 Upper middle income\n#> 208   -13.2134     8.4821          Low income\n#> 209   -6.91181    61.8926         High income\n#> 210    125.567   -8.56667 Lower middle income\n#> 211   -10.7957    6.30039          Low income\n#> 212    43.1425    11.5806 Lower middle income\n#> 213     1.5218    42.5075         High income\n#> 214   -70.0167    12.5167         High income\n#> 215   -55.1679     5.8232 Upper middle income\n#> 216    29.3639    -3.3784          Low income\n#> 217                               High income\n#> 218    89.6177    27.5768 Lower middle income\n#> 219    21.6407    5.63056          Low income\n#> 220    27.7167   -29.5208 Lower middle income\n#> 221   -88.7713    17.2534 Upper middle income\n#> 222   -16.5885    13.4495          Low income\n#> 223   -23.5087    14.9218 Lower middle income\n#> 224   -60.9832         14 Upper middle income\n#> 225   -15.1804    11.8037          Low income\n#> 226    159.949   -9.42676 Lower middle income\n#> 227   -61.8456    17.1175         High income\n#> 228    55.4466    -4.6309         High income\n#> 229    43.2418   -11.6986 Lower middle income\n#> 230   -61.7449    12.0653 Upper middle income\n#> 231    168.321   -17.7404 Lower middle income\n#> 232 -71.141389 21.4602778         High income\n#> 233   -61.2653    13.2035 Upper middle income\n#> 234   -62.7309       17.3         High income\n#> 235   -171.752   -13.8314 Lower middle income\n#> 236   -170.691   -14.2846 Upper middle income\n#> 237     -61.39    15.2976 Upper middle income\n#> 238     6.6071    0.20618 Lower middle income\n#> 239   -175.216    -21.136 Upper middle income\n#> 240    158.185    6.91771 Lower middle income\n#> 241    171.135    7.11046 Upper middle income\n#> 242    134.479    7.34194 Upper middle income\n#> 243    172.979    1.32905 Lower middle income\n#> 244 166.920867    -0.5477         High income\n#> 245 179.089567 -8.6314877 Upper middle income\n#>            lending\n#> 1       Aggregates\n#> 2             <NA>\n#> 3       Aggregates\n#> 4       Aggregates\n#> 5       Aggregates\n#> 6       Aggregates\n#> 7       Aggregates\n#> 8       Aggregates\n#> 9       Aggregates\n#> 10            <NA>\n#> 11      Aggregates\n#> 12      Aggregates\n#> 13      Aggregates\n#> 14  Not classified\n#> 15      Aggregates\n#> 16      Aggregates\n#> 17            IBRD\n#> 18      Aggregates\n#> 19      Aggregates\n#> 20      Aggregates\n#> 21            <NA>\n#> 22            <NA>\n#> 23      Aggregates\n#> 24  Not classified\n#> 25      Aggregates\n#> 26      Aggregates\n#> 27  Not classified\n#> 28      Aggregates\n#> 29      Aggregates\n#> 30      Aggregates\n#> 31      Aggregates\n#> 32            IBRD\n#> 33  Not classified\n#> 34  Not classified\n#> 35      Aggregates\n#> 36      Aggregates\n#> 37  Not classified\n#> 38  Not classified\n#> 39            <NA>\n#> 40      Aggregates\n#> 41      Aggregates\n#> 42      Aggregates\n#> 43  Not classified\n#> 44      Aggregates\n#> 45            IBRD\n#> 46            IBRD\n#> 47  Not classified\n#> 48      Aggregates\n#> 49      Aggregates\n#> 50      Aggregates\n#> 51      Aggregates\n#> 52  Not classified\n#> 53      Aggregates\n#> 54            IBRD\n#> 55            IBRD\n#> 56      Aggregates\n#> 57      Aggregates\n#> 58  Not classified\n#> 59      Aggregates\n#> 60      Aggregates\n#> 61  Not classified\n#> 62            IBRD\n#> 63  Not classified\n#> 64            IBRD\n#> 65  Not classified\n#> 66  Not classified\n#> 67            <NA>\n#> 68      Aggregates\n#> 69            IBRD\n#> 70  Not classified\n#> 71  Not classified\n#> 72            IBRD\n#> 73  Not classified\n#> 74  Not classified\n#> 75      Aggregates\n#> 76           Blend\n#> 77            IBRD\n#> 78             IDA\n#> 79  Not classified\n#> 80            IBRD\n#> 81  Not classified\n#> 82  Not classified\n#> 83            IBRD\n#> 84            IBRD\n#> 85  Not classified\n#> 86            IBRD\n#> 87            IBRD\n#> 88           Blend\n#> 89            IBRD\n#> 90            IBRD\n#> 91  Not classified\n#> 92            IBRD\n#> 93            <NA>\n#> 94  Not classified\n#> 95  Not classified\n#> 96            IBRD\n#> 97  Not classified\n#> 98            IBRD\n#> 99            IBRD\n#> 100           IBRD\n#> 101 Not classified\n#> 102 Not classified\n#> 103           IBRD\n#> 104           IBRD\n#> 105 Not classified\n#> 106            IDA\n#> 107          Blend\n#> 108 Not classified\n#> 109           IBRD\n#> 110           IBRD\n#> 111           IBRD\n#> 112 Not classified\n#> 113           IBRD\n#> 114 Not classified\n#> 115           IBRD\n#> 116            IDA\n#> 117     Aggregates\n#> 118            IDA\n#> 119          Blend\n#> 120           IBRD\n#> 121           IBRD\n#> 122            IDA\n#> 123           IBRD\n#> 124 Not classified\n#> 125            IDA\n#> 126           IBRD\n#> 127           IBRD\n#> 128           IBRD\n#> 129 Not classified\n#> 130           IBRD\n#> 131            IDA\n#> 132           IBRD\n#> 133           IBRD\n#> 134           IBRD\n#> 135          Blend\n#> 136           IBRD\n#> 137            IDA\n#> 138           IBRD\n#> 139 Not classified\n#> 140           IBRD\n#> 141 Not classified\n#> 142 Not classified\n#> 143            IDA\n#> 144            IDA\n#> 145 Not classified\n#> 146           IBRD\n#> 147            IDA\n#> 148 Not classified\n#> 149          Blend\n#> 150            IDA\n#> 151            IDA\n#> 152          Blend\n#> 153 Not classified\n#> 154           IBRD\n#> 155           IBRD\n#> 156           IBRD\n#> 157            IDA\n#> 158            IDA\n#> 159           IBRD\n#> 160            IDA\n#> 161            IDA\n#> 162            IDA\n#> 163           IBRD\n#> 164           IBRD\n#> 165 Not classified\n#> 166           IBRD\n#> 167 Not classified\n#> 168            IDA\n#> 169            IDA\n#> 170            IDA\n#> 171           IBRD\n#> 172            IDA\n#> 173            IDA\n#> 174           IBRD\n#> 175            IDA\n#> 176            IDA\n#> 177 Not classified\n#> 178           IBRD\n#> 179           IBRD\n#> 180           IBRD\n#> 181          Blend\n#> 182            IDA\n#> 183           IBRD\n#> 184           IBRD\n#> 185            IDA\n#> 186           IBRD\n#> 187 Not classified\n#> 188            IDA\n#> 189 Not classified\n#> 190            IDA\n#> 191     Aggregates\n#> 192            IDA\n#> 193            IDA\n#> 194 Not classified\n#> 195            IDA\n#> 196            IDA\n#> 197            IDA\n#> 198            IDA\n#> 199 Not classified\n#> 200 Not classified\n#> 201 Not classified\n#> 202 Not classified\n#> 203           IBRD\n#> 204            IDA\n#> 205 Not classified\n#> 206           IBRD\n#> 207          Blend\n#> 208            IDA\n#> 209 Not classified\n#> 210          Blend\n#> 211            IDA\n#> 212            IDA\n#> 213 Not classified\n#> 214 Not classified\n#> 215           IBRD\n#> 216            IDA\n#> 217 Not classified\n#> 218            IDA\n#> 219            IDA\n#> 220            IDA\n#> 221           IBRD\n#> 222            IDA\n#> 223          Blend\n#> 224          Blend\n#> 225            IDA\n#> 226            IDA\n#> 227           IBRD\n#> 228           IBRD\n#> 229            IDA\n#> 230          Blend\n#> 231            IDA\n#> 232 Not classified\n#> 233          Blend\n#> 234           IBRD\n#> 235            IDA\n#> 236 Not classified\n#> 237          Blend\n#> 238            IDA\n#> 239            IDA\n#> 240            IDA\n#> 241            IDA\n#> 242           IBRD\n#> 243            IDA\n#> 244           IBRD\n#> 245            IDA"},{"path":"first-example.html","id":"年のgdpの降順での表示２","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.3 2021年のGDPの降順での表示（２）","text":"最初に、World と表示され、グループや、カテゴリーのデータもあるようですから、それを、まず、削除することが必要です。region の列を見ると、World などは、Aggregates となっているので、そのようなものを削除すればよさそうです。数値の大きい順に並べたいので、desc 降順（descending order）にします。これは、グラフではありませんが、これも一つの視覚化とも考えられないことはありません。上位７カ国は、United States, China, Japan, Germany, India, United Kingdom, France であることがわかりました。8番目は、Italy でここまでが、GDP が 2兆ドルを越している国となります。","code":"\ndf_gdp %>% filter(year == 2021, region != \"Aggregates\") %>% \n  drop_na(gdp) %>% arrange(desc(gdp))\n#>                            country iso2c iso3c year\n#> 1                    United States    US   USA 2021\n#> 2                            China    CN   CHN 2021\n#> 3                            Japan    JP   JPN 2021\n#> 4                          Germany    DE   DEU 2021\n#> 5                            India    IN   IND 2021\n#> 6                   United Kingdom    GB   GBR 2021\n#> 7                           France    FR   FRA 2021\n#> 8                            Italy    IT   ITA 2021\n#> 9                           Canada    CA   CAN 2021\n#> 10                     Korea, Rep.    KR   KOR 2021\n#> 11              Russian Federation    RU   RUS 2021\n#> 12                          Brazil    BR   BRA 2021\n#> 13                       Australia    AU   AUS 2021\n#> 14                           Spain    ES   ESP 2021\n#> 15                          Mexico    MX   MEX 2021\n#> 16                       Indonesia    ID   IDN 2021\n#> 17                     Netherlands    NL   NLD 2021\n#> 18                    Saudi Arabia    SA   SAU 2021\n#> 19                         Turkiye    TR   TUR 2021\n#> 20                     Switzerland    CH   CHE 2021\n#> 21                          Poland    PL   POL 2021\n#> 22                          Sweden    SE   SWE 2021\n#> 23                         Belgium    BE   BEL 2021\n#> 24                        Thailand    TH   THA 2021\n#> 25                         Ireland    IE   IRL 2021\n#> 26                          Israel    IL   ISR 2021\n#> 27                       Argentina    AR   ARG 2021\n#> 28                          Norway    NO   NOR 2021\n#> 29                         Austria    AT   AUT 2021\n#> 30                         Nigeria    NG   NGA 2021\n#> 31                    South Africa    ZA   ZAF 2021\n#> 32                      Bangladesh    BD   BGD 2021\n#> 33            United Arab Emirates    AE   ARE 2021\n#> 34                Egypt, Arab Rep.    EG   EGY 2021\n#> 35                         Denmark    DK   DNK 2021\n#> 36                       Singapore    SG   SGP 2021\n#> 37                     Philippines    PH   PHL 2021\n#> 38                        Malaysia    MY   MYS 2021\n#> 39            Hong Kong SAR, China    HK   HKG 2021\n#> 40                         Vietnam    VN   VNM 2021\n#> 41              Iran, Islamic Rep.    IR   IRN 2021\n#> 42                        Pakistan    PK   PAK 2021\n#> 43                           Chile    CL   CHL 2021\n#> 44                        Colombia    CO   COL 2021\n#> 45                         Finland    FI   FIN 2021\n#> 46                         Romania    RO   ROU 2021\n#> 47                        Portugal    PT   PRT 2021\n#> 48                     New Zealand    NZ   NZL 2021\n#> 49                            Peru    PE   PER 2021\n#> 50                          Greece    GR   GRC 2021\n#> 51                            Iraq    IQ   IRQ 2021\n#> 52                         Ukraine    UA   UKR 2021\n#> 53                      Kazakhstan    KZ   KAZ 2021\n#> 54                         Hungary    HU   HUN 2021\n#> 55                           Qatar    QA   QAT 2021\n#> 56                         Algeria    DZ   DZA 2021\n#> 57                         Morocco    MA   MAR 2021\n#> 58                 Slovak Republic    SK   SVK 2021\n#> 59                        Ethiopia    ET   ETH 2021\n#> 60                           Kenya    KE   KEN 2021\n#> 61                     Puerto Rico    PR   PRI 2021\n#> 62                         Ecuador    EC   ECU 2021\n#> 63              Dominican Republic    DO   DOM 2021\n#> 64                       Sri Lanka    LK   LKA 2021\n#> 65                            Oman    OM   OMN 2021\n#> 66                       Guatemala    GT   GTM 2021\n#> 67                      Luxembourg    LU   LUX 2021\n#> 68                        Bulgaria    BG   BGR 2021\n#> 69                           Ghana    GH   GHA 2021\n#> 70                   Cote d'Ivoire    CI   CIV 2021\n#> 71                      Uzbekistan    UZ   UZB 2021\n#> 72                         Croatia    HR   HRV 2021\n#> 73                         Belarus    BY   BLR 2021\n#> 74                        Tanzania    TZ   TZA 2021\n#> 75                          Angola    AO   AGO 2021\n#> 76                       Lithuania    LT   LTU 2021\n#> 77                         Myanmar    MM   MMR 2021\n#> 78                      Costa Rica    CR   CRI 2021\n#> 79                          Panama    PA   PAN 2021\n#> 80                          Serbia    RS   SRB 2021\n#> 81                        Slovenia    SI   SVN 2021\n#> 82                         Uruguay    UY   URY 2021\n#> 83                Congo, Dem. Rep.    CD   COD 2021\n#> 84                      Azerbaijan    AZ   AZE 2021\n#> 85                         Tunisia    TN   TUN 2021\n#> 86                          Jordan    JO   JOR 2021\n#> 87                        Cameroon    CM   CMR 2021\n#> 88                           Libya    LY   LBY 2021\n#> 89                          Uganda    UG   UGA 2021\n#> 90                         Bolivia    BO   BOL 2021\n#> 91                          Latvia    LV   LVA 2021\n#> 92                        Paraguay    PY   PRY 2021\n#> 93                         Bahrain    BH   BHR 2021\n#> 94                         Estonia    EE   EST 2021\n#> 95                           Nepal    NP   NPL 2021\n#> 96                           Sudan    SD   SDN 2021\n#> 97                Macao SAR, China    MO   MAC 2021\n#> 98                     El Salvador    SV   SLV 2021\n#> 99                        Honduras    HN   HND 2021\n#> 100                         Cyprus    CY   CYP 2021\n#> 101                       Zimbabwe    ZW   ZWE 2021\n#> 102                        Senegal    SN   SEN 2021\n#> 103                       Cambodia    KH   KHM 2021\n#> 104               Papua New Guinea    PG   PNG 2021\n#> 105                        Iceland    IS   ISL 2021\n#> 106            Trinidad and Tobago    TT   TTO 2021\n#> 107         Bosnia and Herzegovina    BA   BIH 2021\n#> 108                        Lebanon    LB   LBN 2021\n#> 109                         Zambia    ZM   ZMB 2021\n#> 110                          Haiti    HT   HTI 2021\n#> 111                          Gabon    GA   GAB 2021\n#> 112                   Burkina Faso    BF   BFA 2021\n#> 113                           Mali    ML   MLI 2021\n#> 114                        Lao PDR    LA   LAO 2021\n#> 115                        Georgia    GE   GEO 2021\n#> 116                        Albania    AL   ALB 2021\n#> 117             West Bank and Gaza    PS   PSE 2021\n#> 118                       Botswana    BW   BWA 2021\n#> 119                          Malta    MT   MLT 2021\n#> 120                          Benin    BJ   BEN 2021\n#> 121                         Guinea    GN   GIN 2021\n#> 122                     Mozambique    MZ   MOZ 2021\n#> 123                       Mongolia    MN   MNG 2021\n#> 124                          Niger    NE   NER 2021\n#> 125                    Afghanistan    AF   AFG 2021\n#> 126                        Jamaica    JM   JAM 2021\n#> 127                     Madagascar    MG   MDG 2021\n#> 128                      Nicaragua    NI   NIC 2021\n#> 129              Brunei Darussalam    BN   BRN 2021\n#> 130                        Armenia    AM   ARM 2021\n#> 131                North Macedonia    MK   MKD 2021\n#> 132                        Moldova    MD   MDA 2021\n#> 133                    Congo, Rep.    CG   COG 2021\n#> 134                         Malawi    MW   MWI 2021\n#> 135                        Namibia    NA   NAM 2021\n#> 136              Equatorial Guinea    GQ   GNQ 2021\n#> 137                           Chad    TD   TCD 2021\n#> 138                      Mauritius    MU   MUS 2021\n#> 139                   Bahamas, The    BS   BHS 2021\n#> 140                         Rwanda    RW   RWA 2021\n#> 141                  New Caledonia    NC   NCL 2021\n#> 142                     Mauritania    MR   MRT 2021\n#> 143                         Kosovo    XK   XKX 2021\n#> 144                     Tajikistan    TJ   TJK 2021\n#> 145                         Monaco    MC   MCO 2021\n#> 146                Kyrgyz Republic    KG   KGZ 2021\n#> 147                           Togo    TG   TGO 2021\n#> 148                         Guyana    GY   GUY 2021\n#> 149                        Somalia    SO   SOM 2021\n#> 150                        Bermuda    BM   BMU 2021\n#> 151                           Guam    GU   GUM 2021\n#> 152               French Polynesia    PF   PYF 2021\n#> 153                 Cayman Islands    KY   CYM 2021\n#> 154                     Montenegro    ME   MNE 2021\n#> 155                       Maldives    MV   MDV 2021\n#> 156                       Barbados    BB   BRB 2021\n#> 157                       Eswatini    SZ   SWZ 2021\n#> 158                           Fiji    FJ   FJI 2021\n#> 159                   Sierra Leone    SL   SLE 2021\n#> 160                  Faroe Islands    FO   FRO 2021\n#> 161                    Timor-Leste    TL   TLS 2021\n#> 162                        Liberia    LR   LBR 2021\n#> 163                       Djibouti    DJ   DJI 2021\n#> 164                        Andorra    AD   AND 2021\n#> 165                          Aruba    AW   ABW 2021\n#> 166                       Suriname    SR   SUR 2021\n#> 167                        Burundi    BI   BDI 2021\n#> 168                        Curacao    CW   CUW 2021\n#> 169                         Bhutan    BT   BTN 2021\n#> 170       Central African Republic    CF   CAF 2021\n#> 171                        Lesotho    LS   LSO 2021\n#> 172                         Belize    BZ   BLZ 2021\n#> 173                    Gambia, The    GM   GMB 2021\n#> 174                     Cabo Verde    CV   CPV 2021\n#> 175                      St. Lucia    LC   LCA 2021\n#> 176                  Guinea-Bissau    GW   GNB 2021\n#> 177                Solomon Islands    SB   SLB 2021\n#> 178            Antigua and Barbuda    AG   ATG 2021\n#> 179                     Seychelles    SC   SYC 2021\n#> 180                        Comoros    KM   COM 2021\n#> 181                        Grenada    GD   GRD 2021\n#> 182                        Vanuatu    VU   VUT 2021\n#> 183       Turks and Caicos Islands    TC   TCA 2021\n#> 184 St. Vincent and the Grenadines    VC   VCT 2021\n#> 185            St. Kitts and Nevis    KN   KNA 2021\n#> 186                          Samoa    WS   WSM 2021\n#> 187                 American Samoa    AS   ASM 2021\n#> 188                       Dominica    DM   DMA 2021\n#> 189          Sao Tome and Principe    ST   STP 2021\n#> 190                          Tonga    TO   TON 2021\n#> 191          Micronesia, Fed. Sts.    FM   FSM 2021\n#> 192               Marshall Islands    MH   MHL 2021\n#> 193                          Palau    PW   PLW 2021\n#> 194                       Kiribati    KI   KIR 2021\n#> 195                          Nauru    NR   NRU 2021\n#> 196                         Tuvalu    TV   TUV 2021\n#>              gdp status lastupdated\n#> 1   2.331508e+13         2023-05-10\n#> 2   1.773406e+13         2023-05-10\n#> 3   4.940878e+12         2023-05-10\n#> 4   4.259935e+12         2023-05-10\n#> 5   3.176295e+12         2023-05-10\n#> 6   3.131378e+12         2023-05-10\n#> 7   2.957880e+12         2023-05-10\n#> 8   2.107703e+12         2023-05-10\n#> 9   1.988336e+12         2023-05-10\n#> 10  1.810956e+12         2023-05-10\n#> 11  1.778783e+12         2023-05-10\n#> 12  1.608981e+12         2023-05-10\n#> 13  1.552667e+12         2023-05-10\n#> 14  1.427381e+12         2023-05-10\n#> 15  1.272839e+12         2023-05-10\n#> 16  1.186093e+12         2023-05-10\n#> 17  1.012847e+12         2023-05-10\n#> 18  8.335412e+11         2023-05-10\n#> 19  8.190352e+11         2023-05-10\n#> 20  8.006402e+11         2023-05-10\n#> 21  6.794448e+11         2023-05-10\n#> 22  6.356638e+11         2023-05-10\n#> 23  5.941042e+11         2023-05-10\n#> 24  5.059470e+11         2023-05-10\n#> 25  5.041826e+11         2023-05-10\n#> 26  4.885265e+11         2023-05-10\n#> 27  4.872273e+11         2023-05-10\n#> 28  4.821749e+11         2023-05-10\n#> 29  4.803684e+11         2023-05-10\n#> 30  4.408336e+11         2023-05-10\n#> 31  4.190150e+11         2023-05-10\n#> 32  4.162649e+11         2023-05-10\n#> 33  4.150216e+11         2023-05-10\n#> 34  4.041428e+11         2023-05-10\n#> 35  3.983033e+11         2023-05-10\n#> 36  3.969869e+11         2023-05-10\n#> 37  3.940864e+11         2023-05-10\n#> 38  3.729810e+11         2023-05-10\n#> 39  3.691764e+11         2023-05-10\n#> 40  3.661376e+11         2023-05-10\n#> 41  3.597132e+11         2023-05-10\n#> 42  3.482625e+11         2023-05-10\n#> 43  3.170585e+11         2023-05-10\n#> 44  3.144641e+11         2023-05-10\n#> 45  2.973019e+11         2023-05-10\n#> 46  2.840876e+11         2023-05-10\n#> 47  2.536631e+11         2023-05-10\n#> 48  2.498857e+11         2023-05-10\n#> 49  2.232495e+11         2023-05-10\n#> 50  2.148739e+11         2023-05-10\n#> 51  2.078893e+11         2023-05-10\n#> 52  2.000855e+11         2023-05-10\n#> 53  1.971123e+11         2023-05-10\n#> 54  1.818480e+11         2023-05-10\n#> 55  1.796772e+11         2023-05-10\n#> 56  1.630444e+11         2023-05-10\n#> 57  1.428663e+11         2023-05-10\n#> 58  1.165271e+11         2023-05-10\n#> 59  1.112711e+11         2023-05-10\n#> 60  1.103471e+11         2023-05-10\n#> 61  1.065257e+11         2023-05-10\n#> 62  1.061659e+11         2023-05-10\n#> 63  9.424345e+10         2023-05-10\n#> 64  8.892726e+10         2023-05-10\n#> 65  8.819198e+10         2023-05-10\n#> 66  8.598575e+10         2023-05-10\n#> 67  8.550624e+10         2023-05-10\n#> 68  8.405631e+10         2023-05-10\n#> 69  7.759428e+10         2023-05-10\n#> 70  7.004319e+10         2023-05-10\n#> 71  6.923890e+10         2023-05-10\n#> 72  6.895508e+10         2023-05-10\n#> 73  6.820538e+10         2023-05-10\n#> 74  6.784105e+10         2023-05-10\n#> 75  6.740429e+10         2023-05-10\n#> 76  6.644526e+10         2023-05-10\n#> 77  6.509175e+10         2023-05-10\n#> 78  6.428244e+10         2023-05-10\n#> 79  6.360510e+10         2023-05-10\n#> 80  6.308205e+10         2023-05-10\n#> 81  6.174859e+10         2023-05-10\n#> 82  5.931948e+10         2023-05-10\n#> 83  5.535097e+10         2023-05-10\n#> 84  5.462218e+10         2023-05-10\n#> 85  4.668674e+10         2023-05-10\n#> 86  4.574427e+10         2023-05-10\n#> 87  4.533828e+10         2023-05-10\n#> 88  4.281747e+10         2023-05-10\n#> 89  4.052979e+10         2023-05-10\n#> 90  4.040821e+10         2023-05-10\n#> 91  3.985350e+10         2023-05-10\n#> 92  3.949543e+10         2023-05-10\n#> 93  3.886866e+10         2023-05-10\n#> 94  3.719117e+10         2023-05-10\n#> 95  3.628883e+10         2023-05-10\n#> 96  3.432606e+10         2023-05-10\n#> 97  3.012391e+10         2023-05-10\n#> 98  2.873694e+10         2023-05-10\n#> 99  2.848867e+10         2023-05-10\n#> 100 2.840787e+10         2023-05-10\n#> 101 2.837124e+10         2023-05-10\n#> 102 2.762539e+10         2023-05-10\n#> 103 2.696106e+10         2023-05-10\n#> 104 2.659431e+10         2023-05-10\n#> 105 2.560242e+10         2023-05-10\n#> 106 2.446020e+10         2023-05-10\n#> 107 2.336536e+10         2023-05-10\n#> 108 2.313194e+10         2023-05-10\n#> 109 2.214763e+10         2023-05-10\n#> 110 2.094439e+10         2023-05-10\n#> 111 2.021684e+10         2023-05-10\n#> 112 1.973762e+10         2023-05-10\n#> 113 1.914046e+10         2023-05-10\n#> 114 1.882715e+10         2023-05-10\n#> 115 1.862937e+10         2023-05-10\n#> 116 1.825579e+10         2023-05-10\n#> 117 1.803680e+10         2023-05-10\n#> 118 1.761479e+10         2023-05-10\n#> 119 1.736404e+10         2023-05-10\n#> 120 1.714492e+10         2023-05-10\n#> 121 1.609182e+10         2023-05-10\n#> 122 1.577676e+10         2023-05-10\n#> 123 1.528644e+10         2023-05-10\n#> 124 1.491500e+10         2023-05-10\n#> 125 1.478686e+10         2023-05-10\n#> 126 1.465759e+10         2023-05-10\n#> 127 1.447260e+10         2023-05-10\n#> 128 1.401302e+10         2023-05-10\n#> 129 1.400657e+10         2023-05-10\n#> 130 1.386141e+10         2023-05-10\n#> 131 1.382505e+10         2023-05-10\n#> 132 1.367922e+10         2023-05-10\n#> 133 1.336623e+10         2023-05-10\n#> 134 1.262672e+10         2023-05-10\n#> 135 1.231060e+10         2023-05-10\n#> 136 1.226939e+10         2023-05-10\n#> 137 1.177998e+10         2023-05-10\n#> 138 1.152904e+10         2023-05-10\n#> 139 1.120860e+10         2023-05-10\n#> 140 1.107036e+10         2023-05-10\n#> 141 1.007135e+10         2023-05-10\n#> 142 9.996250e+09         2023-05-10\n#> 143 9.412034e+09         2023-05-10\n#> 144 8.746271e+09         2023-05-10\n#> 145 8.596097e+09         2023-05-10\n#> 146 8.543424e+09         2023-05-10\n#> 147 8.413201e+09         2023-05-10\n#> 148 8.044499e+09         2023-05-10\n#> 149 7.628000e+09         2023-05-10\n#> 150 7.286607e+09         2023-05-10\n#> 151 6.123000e+09         2023-05-10\n#> 152 6.054677e+09         2023-05-10\n#> 153 5.898450e+09         2023-05-10\n#> 154 5.861268e+09         2023-05-10\n#> 155 5.405576e+09         2023-05-10\n#> 156 4.843800e+09         2023-05-10\n#> 157 4.743335e+09         2023-05-10\n#> 158 4.296305e+09         2023-05-10\n#> 159 4.042238e+09         2023-05-10\n#> 160 3.649886e+09         2023-05-10\n#> 161 3.621222e+09         2023-05-10\n#> 162 3.509000e+09         2023-05-10\n#> 163 3.482987e+09         2023-05-10\n#> 164 3.330282e+09         2023-05-10\n#> 165 3.126019e+09         2023-05-10\n#> 166 2.984706e+09         2023-05-10\n#> 167 2.779813e+09         2023-05-10\n#> 168 2.699612e+09         2023-05-10\n#> 169 2.539553e+09         2023-05-10\n#> 170 2.516498e+09         2023-05-10\n#> 171 2.496135e+09         2023-05-10\n#> 172 2.491500e+09         2023-05-10\n#> 173 2.038417e+09         2023-05-10\n#> 174 1.936174e+09         2023-05-10\n#> 175 1.691275e+09         2023-05-10\n#> 176 1.638518e+09         2023-05-10\n#> 177 1.631487e+09         2023-05-10\n#> 178 1.471126e+09         2023-05-10\n#> 179 1.454458e+09         2023-05-10\n#> 180 1.296090e+09         2023-05-10\n#> 181 1.122807e+09         2023-05-10\n#> 182 9.563327e+08         2023-05-10\n#> 183 9.432698e+08         2023-05-10\n#> 184 9.041815e+08         2023-05-10\n#> 185 8.608407e+08         2023-05-10\n#> 186 8.438424e+08         2023-05-10\n#> 187 7.090000e+08         2023-05-10\n#> 188 5.541815e+08         2023-05-10\n#> 189 5.266538e+08         2023-05-10\n#> 190 4.692313e+08         2023-05-10\n#> 191 4.040289e+08         2023-05-10\n#> 192 2.595387e+08         2023-05-10\n#> 193 2.178000e+08         2023-05-10\n#> 194 2.070312e+08         2023-05-10\n#> 195 1.332189e+08         2023-05-10\n#> 196 6.310096e+07         2023-05-10\n#>                         region             capital\n#> 1                North America     Washington D.C.\n#> 2          East Asia & Pacific             Beijing\n#> 3          East Asia & Pacific               Tokyo\n#> 4        Europe & Central Asia              Berlin\n#> 5                   South Asia           New Delhi\n#> 6        Europe & Central Asia              London\n#> 7        Europe & Central Asia               Paris\n#> 8        Europe & Central Asia                Rome\n#> 9                North America              Ottawa\n#> 10         East Asia & Pacific               Seoul\n#> 11       Europe & Central Asia              Moscow\n#> 12   Latin America & Caribbean            Brasilia\n#> 13         East Asia & Pacific            Canberra\n#> 14       Europe & Central Asia              Madrid\n#> 15   Latin America & Caribbean         Mexico City\n#> 16         East Asia & Pacific             Jakarta\n#> 17       Europe & Central Asia           Amsterdam\n#> 18  Middle East & North Africa              Riyadh\n#> 19       Europe & Central Asia              Ankara\n#> 20       Europe & Central Asia                Bern\n#> 21       Europe & Central Asia              Warsaw\n#> 22       Europe & Central Asia           Stockholm\n#> 23       Europe & Central Asia            Brussels\n#> 24         East Asia & Pacific             Bangkok\n#> 25       Europe & Central Asia              Dublin\n#> 26  Middle East & North Africa                    \n#> 27   Latin America & Caribbean        Buenos Aires\n#> 28       Europe & Central Asia                Oslo\n#> 29       Europe & Central Asia              Vienna\n#> 30          Sub-Saharan Africa               Abuja\n#> 31          Sub-Saharan Africa            Pretoria\n#> 32                  South Asia               Dhaka\n#> 33  Middle East & North Africa           Abu Dhabi\n#> 34  Middle East & North Africa               Cairo\n#> 35       Europe & Central Asia          Copenhagen\n#> 36         East Asia & Pacific           Singapore\n#> 37         East Asia & Pacific              Manila\n#> 38         East Asia & Pacific        Kuala Lumpur\n#> 39         East Asia & Pacific                    \n#> 40         East Asia & Pacific               Hanoi\n#> 41  Middle East & North Africa              Tehran\n#> 42                  South Asia           Islamabad\n#> 43   Latin America & Caribbean            Santiago\n#> 44   Latin America & Caribbean              Bogota\n#> 45       Europe & Central Asia            Helsinki\n#> 46       Europe & Central Asia           Bucharest\n#> 47       Europe & Central Asia              Lisbon\n#> 48         East Asia & Pacific          Wellington\n#> 49   Latin America & Caribbean                Lima\n#> 50       Europe & Central Asia              Athens\n#> 51  Middle East & North Africa             Baghdad\n#> 52       Europe & Central Asia                Kiev\n#> 53       Europe & Central Asia              Astana\n#> 54       Europe & Central Asia            Budapest\n#> 55  Middle East & North Africa                Doha\n#> 56  Middle East & North Africa             Algiers\n#> 57  Middle East & North Africa               Rabat\n#> 58       Europe & Central Asia          Bratislava\n#> 59          Sub-Saharan Africa         Addis Ababa\n#> 60          Sub-Saharan Africa             Nairobi\n#> 61   Latin America & Caribbean            San Juan\n#> 62   Latin America & Caribbean               Quito\n#> 63   Latin America & Caribbean       Santo Domingo\n#> 64                  South Asia             Colombo\n#> 65  Middle East & North Africa              Muscat\n#> 66   Latin America & Caribbean      Guatemala City\n#> 67       Europe & Central Asia          Luxembourg\n#> 68       Europe & Central Asia               Sofia\n#> 69          Sub-Saharan Africa               Accra\n#> 70          Sub-Saharan Africa        Yamoussoukro\n#> 71       Europe & Central Asia            Tashkent\n#> 72       Europe & Central Asia              Zagreb\n#> 73       Europe & Central Asia               Minsk\n#> 74          Sub-Saharan Africa              Dodoma\n#> 75          Sub-Saharan Africa              Luanda\n#> 76       Europe & Central Asia             Vilnius\n#> 77         East Asia & Pacific           Naypyidaw\n#> 78   Latin America & Caribbean            San Jose\n#> 79   Latin America & Caribbean         Panama City\n#> 80       Europe & Central Asia            Belgrade\n#> 81       Europe & Central Asia           Ljubljana\n#> 82   Latin America & Caribbean          Montevideo\n#> 83          Sub-Saharan Africa            Kinshasa\n#> 84       Europe & Central Asia                Baku\n#> 85  Middle East & North Africa               Tunis\n#> 86  Middle East & North Africa               Amman\n#> 87          Sub-Saharan Africa             Yaounde\n#> 88  Middle East & North Africa             Tripoli\n#> 89          Sub-Saharan Africa             Kampala\n#> 90   Latin America & Caribbean              La Paz\n#> 91       Europe & Central Asia                Riga\n#> 92   Latin America & Caribbean            Asuncion\n#> 93  Middle East & North Africa              Manama\n#> 94       Europe & Central Asia             Tallinn\n#> 95                  South Asia           Kathmandu\n#> 96          Sub-Saharan Africa            Khartoum\n#> 97         East Asia & Pacific                    \n#> 98   Latin America & Caribbean        San Salvador\n#> 99   Latin America & Caribbean         Tegucigalpa\n#> 100      Europe & Central Asia             Nicosia\n#> 101         Sub-Saharan Africa              Harare\n#> 102         Sub-Saharan Africa               Dakar\n#> 103        East Asia & Pacific          Phnom Penh\n#> 104        East Asia & Pacific        Port Moresby\n#> 105      Europe & Central Asia           Reykjavik\n#> 106  Latin America & Caribbean       Port-of-Spain\n#> 107      Europe & Central Asia            Sarajevo\n#> 108 Middle East & North Africa              Beirut\n#> 109         Sub-Saharan Africa              Lusaka\n#> 110  Latin America & Caribbean      Port-au-Prince\n#> 111         Sub-Saharan Africa          Libreville\n#> 112         Sub-Saharan Africa         Ouagadougou\n#> 113         Sub-Saharan Africa              Bamako\n#> 114        East Asia & Pacific           Vientiane\n#> 115      Europe & Central Asia             Tbilisi\n#> 116      Europe & Central Asia              Tirane\n#> 117 Middle East & North Africa                    \n#> 118         Sub-Saharan Africa            Gaborone\n#> 119 Middle East & North Africa            Valletta\n#> 120         Sub-Saharan Africa          Porto-Novo\n#> 121         Sub-Saharan Africa             Conakry\n#> 122         Sub-Saharan Africa              Maputo\n#> 123        East Asia & Pacific         Ulaanbaatar\n#> 124         Sub-Saharan Africa              Niamey\n#> 125                 South Asia               Kabul\n#> 126  Latin America & Caribbean            Kingston\n#> 127         Sub-Saharan Africa        Antananarivo\n#> 128  Latin America & Caribbean             Managua\n#> 129        East Asia & Pacific Bandar Seri Begawan\n#> 130      Europe & Central Asia             Yerevan\n#> 131      Europe & Central Asia              Skopje\n#> 132      Europe & Central Asia            Chisinau\n#> 133         Sub-Saharan Africa         Brazzaville\n#> 134         Sub-Saharan Africa            Lilongwe\n#> 135         Sub-Saharan Africa            Windhoek\n#> 136         Sub-Saharan Africa              Malabo\n#> 137         Sub-Saharan Africa           N'Djamena\n#> 138         Sub-Saharan Africa          Port Louis\n#> 139  Latin America & Caribbean              Nassau\n#> 140         Sub-Saharan Africa              Kigali\n#> 141        East Asia & Pacific             Noum'ea\n#> 142         Sub-Saharan Africa          Nouakchott\n#> 143      Europe & Central Asia            Pristina\n#> 144      Europe & Central Asia            Dushanbe\n#> 145      Europe & Central Asia              Monaco\n#> 146      Europe & Central Asia             Bishkek\n#> 147         Sub-Saharan Africa                Lome\n#> 148  Latin America & Caribbean          Georgetown\n#> 149         Sub-Saharan Africa           Mogadishu\n#> 150              North America            Hamilton\n#> 151        East Asia & Pacific               Agana\n#> 152        East Asia & Pacific             Papeete\n#> 153  Latin America & Caribbean         George Town\n#> 154      Europe & Central Asia           Podgorica\n#> 155                 South Asia                Male\n#> 156  Latin America & Caribbean          Bridgetown\n#> 157         Sub-Saharan Africa             Mbabane\n#> 158        East Asia & Pacific                Suva\n#> 159         Sub-Saharan Africa            Freetown\n#> 160      Europe & Central Asia            Torshavn\n#> 161        East Asia & Pacific                Dili\n#> 162         Sub-Saharan Africa            Monrovia\n#> 163 Middle East & North Africa            Djibouti\n#> 164      Europe & Central Asia    Andorra la Vella\n#> 165  Latin America & Caribbean          Oranjestad\n#> 166  Latin America & Caribbean          Paramaribo\n#> 167         Sub-Saharan Africa           Bujumbura\n#> 168  Latin America & Caribbean          Willemstad\n#> 169                 South Asia             Thimphu\n#> 170         Sub-Saharan Africa              Bangui\n#> 171         Sub-Saharan Africa              Maseru\n#> 172  Latin America & Caribbean            Belmopan\n#> 173         Sub-Saharan Africa              Banjul\n#> 174         Sub-Saharan Africa               Praia\n#> 175  Latin America & Caribbean            Castries\n#> 176         Sub-Saharan Africa              Bissau\n#> 177        East Asia & Pacific             Honiara\n#> 178  Latin America & Caribbean        Saint John's\n#> 179         Sub-Saharan Africa            Victoria\n#> 180         Sub-Saharan Africa              Moroni\n#> 181  Latin America & Caribbean      Saint George's\n#> 182        East Asia & Pacific           Port-Vila\n#> 183  Latin America & Caribbean          Grand Turk\n#> 184  Latin America & Caribbean           Kingstown\n#> 185  Latin America & Caribbean          Basseterre\n#> 186        East Asia & Pacific                Apia\n#> 187        East Asia & Pacific           Pago Pago\n#> 188  Latin America & Caribbean              Roseau\n#> 189         Sub-Saharan Africa            Sao Tome\n#> 190        East Asia & Pacific          Nuku'alofa\n#> 191        East Asia & Pacific             Palikir\n#> 192        East Asia & Pacific              Majuro\n#> 193        East Asia & Pacific               Koror\n#> 194        East Asia & Pacific              Tarawa\n#> 195        East Asia & Pacific      Yaren District\n#> 196        East Asia & Pacific            Funafuti\n#>      longitude   latitude              income\n#> 1      -77.032    38.8895         High income\n#> 2      116.286    40.0495 Upper middle income\n#> 3       139.77      35.67         High income\n#> 4      13.4115    52.5235         High income\n#> 5       77.225    28.6353 Lower middle income\n#> 6    -0.126236    51.5002         High income\n#> 7      2.35097    48.8566         High income\n#> 8      12.4823    41.8955         High income\n#> 9     -75.6919    45.4215         High income\n#> 10     126.957    37.5323         High income\n#> 11     37.6176    55.7558 Upper middle income\n#> 12    -47.9292   -15.7801 Upper middle income\n#> 13     149.129    -35.282         High income\n#> 14    -3.70327    40.4167         High income\n#> 15    -99.1276     19.427 Upper middle income\n#> 16      106.83   -6.19752 Lower middle income\n#> 17     4.89095    52.3738         High income\n#> 18     46.6977    24.6748         High income\n#> 19     32.3606    39.7153 Upper middle income\n#> 20     7.44821     46.948         High income\n#> 21       21.02      52.26         High income\n#> 22     18.0645    59.3327         High income\n#> 23     4.36761    50.8371         High income\n#> 24     100.521    13.7308 Upper middle income\n#> 25    -6.26749    53.3441         High income\n#> 26     35.2035    31.7717         High income\n#> 27    -58.4173   -34.6118 Upper middle income\n#> 28     10.7387    59.9138         High income\n#> 29     16.3798    48.2201         High income\n#> 30     7.48906    9.05804 Lower middle income\n#> 31     28.1871    -25.746 Upper middle income\n#> 32     90.4113    23.7055 Lower middle income\n#> 33     54.3705    24.4764         High income\n#> 34     31.2461    30.0982 Lower middle income\n#> 35     12.5681    55.6763         High income\n#> 36      103.85    1.28941         High income\n#> 37     121.035    14.5515 Lower middle income\n#> 38     101.684    3.12433 Upper middle income\n#> 39     114.109    22.3964         High income\n#> 40     105.825    21.0069 Lower middle income\n#> 41     51.4447    35.6878 Lower middle income\n#> 42        72.8    30.5167 Lower middle income\n#> 43    -70.6475    -33.475         High income\n#> 44     -74.082    4.60987 Upper middle income\n#> 45     24.9525    60.1608         High income\n#> 46     26.0979    44.4479         High income\n#> 47    -9.13552    38.7072         High income\n#> 48     174.776   -41.2865         High income\n#> 49    -77.0465   -12.0931 Upper middle income\n#> 50     23.7166    37.9792         High income\n#> 51      44.394    33.3302 Upper middle income\n#> 52     30.5038    50.4536 Lower middle income\n#> 53     71.4382    51.1879 Upper middle income\n#> 54     19.0408    47.4984         High income\n#> 55     51.5082    25.2948         High income\n#> 56     3.05097    36.7397 Lower middle income\n#> 57     -6.8704    33.9905 Lower middle income\n#> 58     17.1073    48.1484         High income\n#> 59     38.7468    9.02274          Low income\n#> 60     36.8126   -1.27975 Lower middle income\n#> 61         -66      18.23         High income\n#> 62    -78.5243  -0.229498 Upper middle income\n#> 63    -69.8908     18.479 Upper middle income\n#> 64     79.8528    6.92148 Lower middle income\n#> 65     58.5874    23.6105         High income\n#> 66    -90.5328    14.6248 Upper middle income\n#> 67      6.1296      49.61         High income\n#> 68     23.3238    42.7105 Upper middle income\n#> 69    -0.20795    5.57045 Lower middle income\n#> 70     -4.0305      5.332 Lower middle income\n#> 71      69.269    41.3052 Lower middle income\n#> 72     15.9614    45.8069         High income\n#> 73     27.5766    53.9678 Upper middle income\n#> 74     35.7382   -6.17486 Lower middle income\n#> 75      13.242   -8.81155 Lower middle income\n#> 76     25.2799    54.6896         High income\n#> 77     95.9562     21.914 Lower middle income\n#> 78    -84.0089    9.63701 Upper middle income\n#> 79    -79.5188    8.99427         High income\n#> 80     20.4656    44.8024 Upper middle income\n#> 81     14.5044    46.0546         High income\n#> 82    -56.0675   -34.8941         High income\n#> 83     15.3222     -4.325          Low income\n#> 84     49.8932    40.3834 Upper middle income\n#> 85       10.21    36.7899 Lower middle income\n#> 86     35.9263    31.9497 Upper middle income\n#> 87     11.5174     3.8721 Lower middle income\n#> 88     13.1072    32.8578 Upper middle income\n#> 89     32.5729   0.314269          Low income\n#> 90    -66.1936   -13.9908 Lower middle income\n#> 91     24.1048    56.9465         High income\n#> 92    -57.6362   -25.3005 Upper middle income\n#> 93     50.5354    26.1921         High income\n#> 94     24.7586    59.4392         High income\n#> 95     85.3157    27.6939 Lower middle income\n#> 96     32.5363    15.5932          Low income\n#> 97      113.55    22.1667         High income\n#> 98    -89.2073    13.7034 Lower middle income\n#> 99    -87.4667    15.1333 Lower middle income\n#> 100    33.3736    35.1676         High income\n#> 101    31.0672   -17.8312 Lower middle income\n#> 102   -17.4734    14.7247 Lower middle income\n#> 103    104.874    11.5556 Lower middle income\n#> 104    147.194   -9.47357 Lower middle income\n#> 105   -21.8952    64.1353         High income\n#> 106   -61.4789    10.6596         High income\n#> 107    18.4214    43.8607 Upper middle income\n#> 108    35.5134    33.8872 Lower middle income\n#> 109    28.2937   -15.3982          Low income\n#> 110   -72.3288    18.5392 Lower middle income\n#> 111    9.45162    0.38832 Upper middle income\n#> 112   -1.53395    12.3605          Low income\n#> 113   -7.50034    13.5667          Low income\n#> 114    102.177    18.5826 Lower middle income\n#> 115     44.793      41.71 Upper middle income\n#> 116    19.8172    41.3317 Upper middle income\n#> 117                       Lower middle income\n#> 118    25.9201   -24.6544 Upper middle income\n#> 119    14.5189    35.9042         High income\n#> 120     2.6323     6.4779 Lower middle income\n#> 121      -13.7    9.51667          Low income\n#> 122    32.5713   -25.9664          Low income\n#> 123    106.937    47.9129 Lower middle income\n#> 124     2.1073     13.514          Low income\n#> 125    69.1761    34.5228          Low income\n#> 126    -76.792    17.9927 Upper middle income\n#> 127    45.7167   -20.4667          Low income\n#> 128   -86.2734    12.1475 Lower middle income\n#> 129    114.946    4.94199         High income\n#> 130     44.509    40.1596 Upper middle income\n#> 131    21.4361    42.0024 Upper middle income\n#> 132    28.8497    47.0167 Upper middle income\n#> 133    15.2662    -4.2767 Lower middle income\n#> 134    33.7703   -13.9899          Low income\n#> 135    17.0931   -22.5648 Upper middle income\n#> 136     8.7741     3.7523 Upper middle income\n#> 137    15.0445    12.1048          Low income\n#> 138    57.4977   -20.1605 Upper middle income\n#> 139    -77.339    25.0661         High income\n#> 140    30.0587   -1.95325          Low income\n#> 141    166.464   -22.2677         High income\n#> 142   -15.9824    18.2367 Lower middle income\n#> 143     20.926     42.565 Upper middle income\n#> 144    68.7864    38.5878 Lower middle income\n#> 145    7.41891    43.7325         High income\n#> 146    74.6057    42.8851 Lower middle income\n#> 147     1.2255     6.1228          Low income\n#> 148   -58.1548    6.80461 Upper middle income\n#> 149    45.3254    2.07515          Low income\n#> 150    -64.706    32.3293         High income\n#> 151    144.794    13.4443         High income\n#> 152    -149.57    -17.535         High income\n#> 153   -81.3857    19.3022         High income\n#> 154    19.2595    42.4602 Upper middle income\n#> 155    73.5109     4.1742 Upper middle income\n#> 156   -59.6105    13.0935         High income\n#> 157    31.4659   -26.5225 Lower middle income\n#> 158    178.399   -18.1149 Upper middle income\n#> 159   -13.2134     8.4821          Low income\n#> 160   -6.91181    61.8926         High income\n#> 161    125.567   -8.56667 Lower middle income\n#> 162   -10.7957    6.30039          Low income\n#> 163    43.1425    11.5806 Lower middle income\n#> 164     1.5218    42.5075         High income\n#> 165   -70.0167    12.5167         High income\n#> 166   -55.1679     5.8232 Upper middle income\n#> 167    29.3639    -3.3784          Low income\n#> 168                               High income\n#> 169    89.6177    27.5768 Lower middle income\n#> 170    21.6407    5.63056          Low income\n#> 171    27.7167   -29.5208 Lower middle income\n#> 172   -88.7713    17.2534 Upper middle income\n#> 173   -16.5885    13.4495          Low income\n#> 174   -23.5087    14.9218 Lower middle income\n#> 175   -60.9832         14 Upper middle income\n#> 176   -15.1804    11.8037          Low income\n#> 177    159.949   -9.42676 Lower middle income\n#> 178   -61.8456    17.1175         High income\n#> 179    55.4466    -4.6309         High income\n#> 180    43.2418   -11.6986 Lower middle income\n#> 181   -61.7449    12.0653 Upper middle income\n#> 182    168.321   -17.7404 Lower middle income\n#> 183 -71.141389 21.4602778         High income\n#> 184   -61.2653    13.2035 Upper middle income\n#> 185   -62.7309       17.3         High income\n#> 186   -171.752   -13.8314 Lower middle income\n#> 187   -170.691   -14.2846 Upper middle income\n#> 188     -61.39    15.2976 Upper middle income\n#> 189     6.6071    0.20618 Lower middle income\n#> 190   -175.216    -21.136 Upper middle income\n#> 191    158.185    6.91771 Lower middle income\n#> 192    171.135    7.11046 Upper middle income\n#> 193    134.479    7.34194 Upper middle income\n#> 194    172.979    1.32905 Lower middle income\n#> 195 166.920867    -0.5477         High income\n#> 196 179.089567 -8.6314877 Upper middle income\n#>            lending\n#> 1   Not classified\n#> 2             IBRD\n#> 3   Not classified\n#> 4   Not classified\n#> 5             IBRD\n#> 6   Not classified\n#> 7   Not classified\n#> 8   Not classified\n#> 9   Not classified\n#> 10  Not classified\n#> 11            IBRD\n#> 12            IBRD\n#> 13  Not classified\n#> 14  Not classified\n#> 15            IBRD\n#> 16            IBRD\n#> 17  Not classified\n#> 18  Not classified\n#> 19            IBRD\n#> 20  Not classified\n#> 21            IBRD\n#> 22  Not classified\n#> 23  Not classified\n#> 24            IBRD\n#> 25  Not classified\n#> 26  Not classified\n#> 27            IBRD\n#> 28  Not classified\n#> 29  Not classified\n#> 30           Blend\n#> 31            IBRD\n#> 32             IDA\n#> 33  Not classified\n#> 34            IBRD\n#> 35  Not classified\n#> 36  Not classified\n#> 37            IBRD\n#> 38            IBRD\n#> 39  Not classified\n#> 40            IBRD\n#> 41            IBRD\n#> 42           Blend\n#> 43            IBRD\n#> 44            IBRD\n#> 45  Not classified\n#> 46            IBRD\n#> 47  Not classified\n#> 48  Not classified\n#> 49            IBRD\n#> 50  Not classified\n#> 51            IBRD\n#> 52            IBRD\n#> 53            IBRD\n#> 54  Not classified\n#> 55  Not classified\n#> 56            IBRD\n#> 57            IBRD\n#> 58  Not classified\n#> 59             IDA\n#> 60           Blend\n#> 61  Not classified\n#> 62            IBRD\n#> 63            IBRD\n#> 64            IBRD\n#> 65  Not classified\n#> 66            IBRD\n#> 67  Not classified\n#> 68            IBRD\n#> 69             IDA\n#> 70             IDA\n#> 71           Blend\n#> 72            IBRD\n#> 73            IBRD\n#> 74             IDA\n#> 75            IBRD\n#> 76  Not classified\n#> 77             IDA\n#> 78            IBRD\n#> 79            IBRD\n#> 80            IBRD\n#> 81  Not classified\n#> 82            IBRD\n#> 83             IDA\n#> 84            IBRD\n#> 85            IBRD\n#> 86            IBRD\n#> 87           Blend\n#> 88            IBRD\n#> 89             IDA\n#> 90            IBRD\n#> 91  Not classified\n#> 92            IBRD\n#> 93  Not classified\n#> 94  Not classified\n#> 95             IDA\n#> 96             IDA\n#> 97  Not classified\n#> 98            IBRD\n#> 99             IDA\n#> 100 Not classified\n#> 101          Blend\n#> 102            IDA\n#> 103            IDA\n#> 104          Blend\n#> 105 Not classified\n#> 106           IBRD\n#> 107           IBRD\n#> 108           IBRD\n#> 109            IDA\n#> 110            IDA\n#> 111           IBRD\n#> 112            IDA\n#> 113            IDA\n#> 114            IDA\n#> 115           IBRD\n#> 116           IBRD\n#> 117 Not classified\n#> 118           IBRD\n#> 119 Not classified\n#> 120            IDA\n#> 121            IDA\n#> 122            IDA\n#> 123           IBRD\n#> 124            IDA\n#> 125            IDA\n#> 126           IBRD\n#> 127            IDA\n#> 128            IDA\n#> 129 Not classified\n#> 130           IBRD\n#> 131           IBRD\n#> 132           IBRD\n#> 133          Blend\n#> 134            IDA\n#> 135           IBRD\n#> 136           IBRD\n#> 137            IDA\n#> 138           IBRD\n#> 139 Not classified\n#> 140            IDA\n#> 141 Not classified\n#> 142            IDA\n#> 143            IDA\n#> 144            IDA\n#> 145 Not classified\n#> 146            IDA\n#> 147            IDA\n#> 148            IDA\n#> 149            IDA\n#> 150 Not classified\n#> 151 Not classified\n#> 152 Not classified\n#> 153 Not classified\n#> 154           IBRD\n#> 155            IDA\n#> 156 Not classified\n#> 157           IBRD\n#> 158          Blend\n#> 159            IDA\n#> 160 Not classified\n#> 161          Blend\n#> 162            IDA\n#> 163            IDA\n#> 164 Not classified\n#> 165 Not classified\n#> 166           IBRD\n#> 167            IDA\n#> 168 Not classified\n#> 169            IDA\n#> 170            IDA\n#> 171            IDA\n#> 172           IBRD\n#> 173            IDA\n#> 174          Blend\n#> 175          Blend\n#> 176            IDA\n#> 177            IDA\n#> 178           IBRD\n#> 179           IBRD\n#> 180            IDA\n#> 181          Blend\n#> 182            IDA\n#> 183 Not classified\n#> 184          Blend\n#> 185           IBRD\n#> 186            IDA\n#> 187 Not classified\n#> 188          Blend\n#> 189            IDA\n#> 190            IDA\n#> 191            IDA\n#> 192            IDA\n#> 193           IBRD\n#> 194            IDA\n#> 195           IBRD\n#> 196            IDA"},{"path":"first-example.html","id":"fig-3.-2021年時のgdp上位7カ国のgdp経年変化","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.4 Fig 3. 2021年時のGDP上位7カ国のGDP経年変化","text":"ここでは、最初に、filter を使って、7カ国のデータを選択しています。\nそのときには、%% として、国名を、combine するといういみで、c() とひとまとめにします。数字ではなく、文字なので、引用符で囲んでいます。この場合は、single quote でも構いませんが、半角を使ってください。このグラフからは、どのようなことがわかりますか。気づいたことを書いてみましょう。もう少し、このようなグラフをみてみたいというような、メモも大切です。","code":"\ndf_gdp %>% filter(iso2c %in% c(\"US\", \"CN\", \"JP\", \"DE\", \"IN\", \"GB\", \"FR\")) %>%\n  ggplot(aes(x = year, y = gdp, col = iso2c)) + geom_line()\n#> Warning: Removed 17 rows containing missing values\n#> (`geom_line()`).df_gdp %>% filter(iso2c %in% c(\"US\", \"CN\", \"JP\", \"DE\", \"IN\", \"GB\", \"FR\")) %>%\n  ggplot(aes(x = year, y = gdp, col = iso2c)) + geom_line()"},{"path":"first-example.html","id":"fig-4.-世界のgdp-における割合１","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.5 Fig 4. 世界のGDP における割合（１）","text":"まず、下の部分が新しいですが、ここでは、年毎にグループにして、その上で、新しい dgp_ratio という名前の列を追加し、その gdp の値を、gdp 合計で割っています。すなわち、世界の、GDP における割合が計算されています。下の部分では、geom_area を使って、fill=iso2c により、iso2c ごとに、違う色を塗って、position = “stack” により、積み上げ型の、グラフを描き、境目がわかりやすいように、0.3 の太さの黒の線を描いてください。また、y 軸は、小数点以下を省いたパーセント表示に変えてください。というコードです。","code":"\ndf_gdp %>% \n  filter(region != \"Aggregates\") %>% drop_na(gdp) %>% \n  group_by(year) %>% mutate(gdp_ratio = gdp/sum(gdp)) %>% ungroup() %>%\n  filter(iso2c %in% c(\"US\", \"CN\", \"JP\", \"DE\", \"IN\", \"GB\", \"FR\"))  %>%\n  ggplot(aes(x = year, y = gdp_ratio, fill = iso2c)) + geom_area() +\n  geom_line(col = \"black\", position = \"stack\", linewidth = 0.3) + \n  scale_y_continuous(labels = scales::percent_format(accuracy = 1))  group_by(year) %>% mutate(gdp_ratio = gdp/sum(gdp)) %>% ungroup() %>%  ggplot(aes(x = year, y = gdp_ratio, fill = iso2c)) + geom_area() +\n  geom_line(col = \"black\", position = \"stack\", linewidth = 0.3) + \n  scale_y_continuous(labels = scales::percent_format(accuracy = 1))"},{"path":"first-example.html","id":"fig-4.-世界のgdp-における割合２","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.6 Fig 4. 世界のGDP における割合（２）","text":"これは、上から、iso2c の アルファベットの順番になっていますが、積み上げの順序を変更することもできます。これらは、世界全体の GPT における割合です。どのようなことがわかりますか。主要国で、60%〜70% を占めていることがわかります。それぞれの国や、幾つかの国の影響力も、ある程度みることができるように見えます。気づいたこと、疑問に思ったことなどを、書き出してみてください。GDP が大きな国と、小さな国があるのはわかりますが、それは、どのように分布しているのでしょうか。","code":"\ndf_gdp %>% \n  filter(region != \"Aggregates\") %>% drop_na(gdp) %>% \n  group_by(year) %>% mutate(gdp_ratio = gdp/sum(gdp)) %>% ungroup() %>%\n  filter(iso2c %in% c(\"US\", \"CN\", \"JP\", \"DE\", \"IN\", \"GB\", \"FR\"))  %>%\n  mutate(iso2co = factor(iso2c, levels = c(\"IN\", \"CN\", \"FR\", \"GB\", \"DE\", \"JP\", \"US\"))) %>%\n  ggplot(aes(x = year, y = gdp_ratio, fill = iso2co)) + geom_area() +\n  geom_line(col = \"black\", position = \"stack\", linewidth = 0.3) + \n  scale_y_continuous(labels = scales::percent_format(accuracy = 1))"},{"path":"first-example.html","id":"fig-5.-2021年の世界の国のgdpの分布１","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.7 Fig 5. 2021年の世界の国のGDPの分布（１）","text":"小さいところに集中していることがわかりますが、scale_x_log10() を加え、対数軸をとってみます。\\(log10(1000) = 3\\), \\(log10(1000000) = 6\\), \\(log10(1000000000) = 9\\) などになります。","code":"\ndf_gdp %>% drop_na(gdp) %>% \n  filter(year == 2021) %>% filter(region != \"Aggregates\") %>%\n  ggplot(aes(gdp)) + geom_histogram()\n#> `stat_bin()` using `bins = 30`. Pick better value with\n#> `binwidth`."},{"path":"first-example.html","id":"fig-6.-2021年の世界の国のgdpの分布２","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.8 Fig 6. 2021年の世界の国のGDPの分布（２）","text":"幅を変更したり、分ける個数を変更するには binwidth = 0.5 や、bins = 20 を、geom_histogram() のかっこの中に入れます。","code":"\ndf_gdp %>% drop_na(gdp) %>% \n  filter(year == 2021) %>% filter(region != \"Aggregates\") %>%\n  ggplot(aes(gdp)) + geom_histogram() + scale_x_log10()\n#> `stat_bin()` using `bins = 30`. Pick better value with\n#> `binwidth`."},{"path":"first-example.html","id":"fig-7.-2021年の世界の国のgdpの分布３","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.9 Fig 7. 2021年の世界の国のGDPの分布（３）","text":"また、密度曲線に変えるには、geom_density を使います。","code":"\ndf_gdp %>% drop_na(gdp) %>% \n  filter(year == 2021) %>% filter(region != \"Aggregates\") %>%\n  ggplot(aes(gdp)) + geom_density() + scale_x_log10()"},{"path":"first-example.html","id":"fig-8.-2021年の世界の国のgdpの分布４","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.10 Fig 8. 2021年の世界の国のGDPの分布（４）","text":"これは、2021年のデータですが、density の変化を見てみます。alpha の値は透明度です。","code":"\ndf_gdp %>% drop_na(gdp) %>% \n  filter(year %in% c(1961, 1971, 1981, 1991, 2001, 2011, 2021)) %>%\n  ggplot(aes(gdp, fill = factor(year))) + geom_density(alpha = 0.4) + scale_x_log10()"},{"path":"first-example.html","id":"fig-9.-2021年の世界の国のgdpの分布５","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.11 Fig 9. 2021年の世界の国のGDPの分布（５）","text":"少しみにくいので、分けてみます。","code":"\ndf_gdp %>% drop_na(gdp) %>% \n  filter(year %in% c(1971, 1981, 1991, 2001, 2011, 2021)) %>%\n  ggplot(aes(gdp, fill = factor(year))) + \n  geom_density() + scale_x_log10() + facet_wrap(~year)"},{"path":"first-example.html","id":"fig-10.-地域ごとの-gdp-の分布","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.12 Fig 10. 地域ごとの GDP の分布","text":"いくつかのグループごとに分布をみてみることも可能です。それには、Boxplot が有効です。","code":"\ndf_gdp %>% drop_na(gdp) %>% filter(region != \"Aggregates\") %>%\n  drop_na(region) %>% filter(year %in% c(2021)) %>%\n  ggplot(aes(gdp, region, fill = region)) + \n  geom_boxplot() + scale_x_log10() + labs(y = \"\") + \n  theme(legend.position = \"none\")"},{"path":"first-example.html","id":"fig-11.-収入の多寡による分類ごとの-gdp-分布","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.13 Fig 11. 収入の多寡による分類ごとの GDP 分布","text":"これからも、いろいろなことがわかりますね。","code":"\ndf_gdp %>% drop_na(gdp) %>% filter(region != \"Aggregates\") %>%\n  drop_na(income) %>% filter(year %in% c(2021)) %>%\n  mutate(level = factor(income, c(\"High income\", \"Upper middle income\", \"Lower middle income\", \"Low income\"))) %>%\n  ggplot(aes(gdp, level, fill = income)) + \n  geom_boxplot() + scale_x_log10() + labs(y = \"\") + \n  theme(legend.position = \"none\")"},{"path":"first-example.html","id":"世界地図の準備","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.14 世界地図の準備","text":"地図で、国の income level をみてみましょう。","code":"\nlibrary(maps)\ngdp_short <- df_gdp %>% filter(year == 2021, region != \"Aggregates\") %>%\n  select(iso2c, gdp, income)\nmap_world <- map_data('world')\nmap_gdp <- map_world %>% \n  mutate(iso2c = iso.alpha(region, n=2)) %>% \n  left_join(gdp_short, by = \"iso2c\") \nhead(map_gdp)\n#>        long      lat group order region subregion iso2c\n#> 1 -69.89912 12.45200     1     1  Aruba      <NA>    AW\n#> 2 -69.89571 12.42300     1     2  Aruba      <NA>    AW\n#> 3 -69.94219 12.43853     1     3  Aruba      <NA>    AW\n#> 4 -70.00415 12.50049     1     4  Aruba      <NA>    AW\n#> 5 -70.06612 12.54697     1     5  Aruba      <NA>    AW\n#> 6 -70.05088 12.59707     1     6  Aruba      <NA>    AW\n#>          gdp      income\n#> 1 3126019399 High income\n#> 2 3126019399 High income\n#> 3 3126019399 High income\n#> 4 3126019399 High income\n#> 5 3126019399 High income\n#> 6 3126019399 High income"},{"path":"first-example.html","id":"fig-12.-income-level-による色分け地図","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.15 Fig 12. Income Level による色分け地図","text":"","code":"\nmap_gdp %>% mutate(income_level = factor(income, levels = c(\"High income\", \"Upper middle income\", \"Lower middle income\", \"Low income\", \"Not classified\", NA))) %>%\n  ggplot() +\n  geom_map(aes(long, lat, map_id = region, fill = income_level), map = map_world, col = \"black\", size = 0.1) \n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2\n#> 3.4.0.\n#> ℹ Please use `linewidth` instead.\n#> This warning is displayed once every 8 hours.\n#> Call `lifecycle::last_lifecycle_warnings()` to see where\n#> this warning was generated.\n#> Warning in geom_map(aes(long, lat, map_id = region, fill =\n#> income_level), : Ignoring unknown aesthetics: x and y"},{"path":"first-example.html","id":"fig-13.-gdp-による色分け地図","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.16 Fig 13. GDP による色分け地図","text":"","code":"\nmap_gdp %>%\n  ggplot() +\n  geom_map(aes(x=long, y=lat, map_id = region, fill = gdp), map = map_world, col = \"black\", size = 0.1) \n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2\n#> 3.4.0.\n#> ℹ Please use `linewidth` instead.\n#> This warning is displayed once every 8 hours.\n#> Call `lifecycle::last_lifecycle_warnings()` to see where\n#> this warning was generated.\n#> Warning in geom_map(aes(x = long, y = lat, map_id = region,\n#> fill = gdp), : Ignoring unknown aesthetics: x and y"},{"path":"first-example.html","id":"練習","chapter":"3 はじめてのデータサイエンス","heading":"3.3 練習","text":"それぞれのグラフから、わかったこと、問いなどを列挙してみましょう。Fig 1 の　Japan の部分を他の国や、グループ（World など）に変えてみてください。何がわかりますか。Fig 3 の iso2c で選択する、国を変更してください。何がわかりますか。Fig 4 または Fig 5 の iso2c の部分を他の国に変更してください。何がわかりますか。Fig 5 または Fig 6 の、区間の幅や、数を 変更してみてください。何がわかりますか。Fig 7, Fig 8, Fig 9 の年を変更してみてください。何がわかりますか。Fig 12, Fig 13 の年を変更してみてください。何がわかりますか。","code":""},{"path":"first-example.html","id":"プロジェクト","chapter":"3 はじめてのデータサイエンス","heading":"3.4 プロジェクト","text":"他のデータで、同様のことをしてみましょう。最初に、gdp = \"NY.GDP.MKTP.CD\" としましたが、GNI per capita, Atlas method (current US$): NY.GNP.PCAP.CD に変えてみましょう。World Development Indicators のサイトの下にある、Data Themes（テーマ）から自分が調べたいテーマを選び、そのテーマから、データコードを取得して、同様の分析をしてみてください。データがあまりない場合もありますので、ある程度データが多いものを選択することをお勧めします。","code":"\ndf_gnppcap <- WDI(country = \"all\", \n              indicator = c(gnppcap = \"NY.GNP.PCAP.CD\"), \n              extra = TRUE)"},{"path":"first-example.html","id":"まとめ","chapter":"3 はじめてのデータサイエンス","heading":"3.5 まとめ","text":"今回は、経済指標である、GDP を使いました。データサイエンスについて少しずつ、学んでいきます。コードの説明は、簡単にしかしていませんから、理解するのは難しいと思いますが、いくつかのことは、ご理解いただけると思います。それほど、長くはない、コードで、データを見ていく。R は対話型（interactive）のプログラミング言語と言われています。それほど、長くはない、コードで、データを見ていく。R は対話型（interactive）のプログラミング言語と言われています。コードに続けて、結果が表示されるので、コードと出力の対応が見やすい。また、コメントや説明も併記することができる。これは、RMarkdown という形式の中で、コードを書いていることによるものです。RMarkdown は、再現性（reproducibility）と、プログラム・コードの内容をコンピュータにわかるようにでなく、人間にもわかるように記述する（Literate Programming）を実現しています。コードに続けて、結果が表示されるので、コードと出力の対応が見やすい。また、コメントや説明も併記することができる。これは、RMarkdown という形式の中で、コードを書いていることによるものです。RMarkdown は、再現性（reproducibility）と、プログラム・コードの内容をコンピュータにわかるようにでなく、人間にもわかるように記述する（Literate Programming）を実現しています。視覚化（Visualization）によって、わかることが色々とある。また、視覚化の方法もたくさんあり、いろいろな見方をすることで、データについての理解が深まっていく。視覚化（Visualization）によって、わかることが色々とある。また、視覚化の方法もたくさんあり、いろいろな見方をすることで、データについての理解が深まっていく。視覚化を通して、データを理解すること、問いを持ち、他の視覚化などを用いて、さらに、理解を深めることがたいせつ。視覚化を通して、データを理解すること、問いを持ち、他の視覚化などを用いて、さらに、理解を深めることがたいせつ。理解したことを元にして、さらに、そのデータ、または、他のデータを使って、新たな発見をしていく。理解したことを元にして、さらに、そのデータ、または、他のデータを使って、新たな発見をしていく。統計的な指標も用いますが、それらによって、新しい知識を生み出すとも表現しますが、そのような営み全体が、データサイエンスの核をなす部分だと思います。","code":""},{"path":"publicdata.html","id":"publicdata","chapter":"4 Public Data","heading":"4 Public Data","text":"まずは、パブリックデータを見てみましょう。大きな機関のパグリックデータには、ダッシュボード（dashboard）と呼ばれている、パラメタを変更して、そのグラフを描くなどの機能が付いているものもあります。","code":""},{"path":"publicdata.html","id":"オープンデータ","chapter":"4 Public Data","heading":"4.1 オープンデータ","text":"","code":""},{"path":"publicdata.html","id":"open-government-data-toolkit-open-data-defined","chapter":"4 Public Data","heading":"4.1.1 Open Government Data Toolkit: Open Data Defined","text":"term Open Data precise meaning. Data content open anyone free use, re-use redistribute , subject measures preserve provenance openness.data must legally open, means must placed public domain liberal terms use minimal restrictions.data must technically open, means must published electronic formats machine readable non-proprietary, anyone can access use data using common, freely available software tools. Data must also publicly available accessible public server, without password firewall restrictions. make Open Data easier find, organizations create manage Open Data catalogs.オープンデータの定義オープンデータという言葉は、非常に正確な意味を持っています。データまたはコンテンツは、誰でも自由に使用、再利用、再配布でき、せいぜい出所とオープン性を維持するための措置に従うだけであればオープンです。オープンデータという言葉は、非常に正確な意味を持っています。データまたはコンテンツは、誰でも自由に使用、再利用、再配布でき、せいぜい出所とオープン性を維持するための措置に従うだけであればオープンです。データは法的にオープンでなければなりません。つまり、パブリックドメインに置かれるか、最小限の制限で自由な使用条件のもとに置かれなければなりません。\nデータは技術的にオープンでなければならない。つまり、誰でも自由に使える一般的なソフトウェアツールを使ってデータにアクセスし利用できるように、機械可読で非専有の電子フォーマットで公開されていなければならない。また、データは一般に公開され、パスワードやファイアウォールによる制限を受けずに、公共のサーバーでアクセスできなければなりません。オープンデータを見つけやすくするために、ほとんどの組織がオープンデータカタログを作成し管理しています。データは法的にオープンでなければなりません。つまり、パブリックドメインに置かれるか、最小限の制限で自由な使用条件のもとに置かれなければなりません。\nデータは技術的にオープンでなければならない。つまり、誰でも自由に使える一般的なソフトウェアツールを使ってデータにアクセスし利用できるように、機械可読で非専有の電子フォーマットで公開されていなければならない。また、データは一般に公開され、パスワードやファイアウォールによる制限を受けずに、公共のサーバーでアクセスできなければなりません。オープンデータを見つけやすくするために、ほとんどの組織がオープンデータカタログを作成し管理しています。","code":""},{"path":"publicdata.html","id":"日本から世界を見る","chapter":"4 Public Data","heading":"4.2 日本から世界を見る","text":"以下では、世界銀行の、世界開発指標を利用するが、他にも、UNdata、OECD data、WID、Eurostat、World Data なども、同様の、ダッシュボードを備えており、データの提供もしている。日本では、e-Stat、ダッシュボード日本のデータはどうでしょうか。","code":""},{"path":"publicdata.html","id":"世界銀行world-bank","chapter":"4 Public Data","heading":"4.3 世界銀行（World Bank）","text":"World Bank: https://www.worldbank.orgWho :\nend extreme poverty: reducing share global population lives extreme poverty 3 percent 2030.\npromote shared prosperity: increasing incomes poorest 40 percent people every country.\nend extreme poverty: reducing share global population lives extreme poverty 3 percent 2030.promote shared prosperity: increasing incomes poorest 40 percent people every country.World Bank Open Data: https://data.worldbank.org\nData Bank, World Development Indicators, etc.\nData Bank, World Development Indicators, etc.","code":""},{"path":"publicdata.html","id":"世界開発指数world-development-indicator-wdi","chapter":"4 Public Data","heading":"4.3.1 世界開発指数（World Development Indicator (WDI)）","text":"World Development Indicators (WDI) : World Bank’s premier compilation cross-country comparable data development; 1400 time series indicators\nThemes: Poverty Inequality, People, Environment, Economy, States Markets, Global Links\nOpen Data & DataBank: Explore data, Query database\nBulk Download: Excel, CSV\nAPI Documentation\nThemes: Poverty Inequality, People, Environment, Economy, States Markets, Global LinksOpen Data & DataBank: Explore data, Query databaseBulk Download: Excel, CSVAPI Documentation","code":""},{"path":"publicdata.html","id":"world-bank-wdi---world-development-indicaters","chapter":"4 Public Data","heading":"4.3.2 World Bank: WDI - World Development Indicaters","text":"世界銀行（World Bank）: https://www.worldbank.org世界銀行について（）:\n極度の貧困状態の削減（end extreme poverty）: 2030年までに、極度の貧困状態にある世界人口の割合を3%に削減する。reducing share global population lives extreme poverty 3 percent 2030.\n繁栄を共に享受（promote shared prosperity）: すべての国の最貧困層の40％の人々の所得を増加させることによって共栄を促進。increasing incomes poorest 40 percent people every country.\n極度の貧困状態の削減（end extreme poverty）: 2030年までに、極度の貧困状態にある世界人口の割合を3%に削減する。reducing share global population lives extreme poverty 3 percent 2030.繁栄を共に享受（promote shared prosperity）: すべての国の最貧困層の40％の人々の所得を増加させることによって共栄を促進。increasing incomes poorest 40 percent people every country.世界銀行オープンデータ（World Bank Open Data）: https://data.worldbank.org\nData Bank, World Development Indicators, etc.\nData Bank, World Development Indicators, etc.日本について：https://data.worldbank.org/country/japan?view=chart","code":""},{"path":"publicdata.html","id":"世界開発指標world-development-indicator","chapter":"4 Public Data","heading":"4.3.3 世界開発指標（World Development Indicator）","text":"World Development Indicators (WDI) : 世界銀行が開発に関する各国間比較可能なデータの集大成である1400の時系列指標（World Bank’s premier compilation cross-country comparable data development; 1400 time series indicators）\nテーマ別（Themes）: 貧困と格差、人間、環境、経済、国家と市場、グローバルリンク集（Poverty Inequality, People, Environment, Economy, States Markets, Global Links）\nオープンデータとデータバンク（Open Data & DataBank）: Explore data, Query database\nBulk Download: Excel, CSV\nAPI Documentation\nテーマ別（Themes）: 貧困と格差、人間、環境、経済、国家と市場、グローバルリンク集（Poverty Inequality, People, Environment, Economy, States Markets, Global Links）オープンデータとデータバンク（Open Data & DataBank）: Explore data, Query databaseBulk Download: Excel, CSVAPI Documentation","code":""},{"path":"publicdata.html","id":"例","chapter":"4 Public Data","heading":"4.3.4 例","text":"","code":""},{"path":"publicdata.html","id":"gdp-per-capita-constant-2015-us","chapter":"4 Public Data","heading":"4.3.4.1 GDP per capita (constant 2015 US$)","text":"実質GDP（2015年を基準にしたもの）を、総人口で割った値。アメリカ合衆国、英国、ドイツ、フランス、日本、中国、日本、ロシア、ウクライナの2021年における比較棒グラフ - リンク年次変化を示す折線グラフ -","code":""},{"path":"publicdata.html","id":"central-government-debt-total-of-gdp","chapter":"4 Public Data","heading":"4.3.4.2 Central government debt, total (% of GDP)","text":"2020年の政府の負債（GDP の百分率）- リンク政府の負債（GDP の百分率）の年次変化を示す折線グラフ\n","code":""},{"path":"publicdata.html","id":"co2-emissions-metric-tons-per-capita","chapter":"4 Public Data","heading":"4.3.4.3 CO2 emissions (metric tons per capita)","text":"CO2 排出量 (1 人あたりのメートル トン) - リンクCO2 排出量 (1 人あたりのメートル トン) の年次変化の折線グラフ","code":""},{"path":"publicdata.html","id":"military-expenditure-of-gdp","chapter":"4 Public Data","heading":"4.3.4.4 Military expenditure (% of GDP)","text":"2021年の軍事費 (GDP の %) - リンク軍事費 (GDP の %) の年次変化","code":""},{"path":"publicdata.html","id":"military-expenditure-current-usd","chapter":"4 Public Data","heading":"4.3.4.5 Military expenditure (current USD)","text":"2021年の軍事費 (現在の米ドル)軍事費の年次変化","code":""},{"path":"publicdata.html","id":"proportion-of-seats-held-by-women-in-natinal-parliaments","chapter":"4 Public Data","heading":"4.3.4.6 Proportion of seats held by women in natinal parliaments (%)","text":"2021年、国会で女性が占める議席の割合 (%) - リンク国会で女性が占める議席の割合 (%) の年次変化","code":""},{"path":"publicdata.html","id":"世界のさまざまな課題から見る","chapter":"4 Public Data","heading":"4.4 世界のさまざまな課題から見る","text":"","code":""},{"path":"publicdata.html","id":"oecd","chapter":"4 Public Data","heading":"4.5 OECD","text":"OECD Data: https://data.oecd.org/","code":""},{"path":"publicdata.html","id":"un-data","chapter":"4 Public Data","heading":"4.6 UN Data","text":"UNdata: https://data.un.org","code":""},{"path":"publicdata.html","id":"our-world-in-data","chapter":"4 Public Data","heading":"4.7 Our World in Data","text":"owid: https://ourworldindata.org/","code":""},{"path":"publicdata.html","id":"eurostat","chapter":"4 Public Data","heading":"4.8 Eurostat","text":"eurostat: https://ec.europa.eu/eurostat","code":""},{"path":"ronrstudio.html","id":"ronrstudio","chapter":"5 R Studio で R","heading":"5 R Studio で R","text":"","code":""},{"path":"ronrstudio.html","id":"はじめに","chapter":"5 R Studio で R","heading":"5.1 はじめに","text":"この章では、R と R Studio をインストールし、正常に動作しているかを、確認することを目標とします。実際の、使い方は、次の章以下で、述べます。また、Posit Cloud など、R Studio 以外で、R を使う方法も、最後に述べます。特に、Posit Cloud は、一定の制限はあるものの、基本的には、R Studio で R を使うのと、同様のことが可能な、Cloud 環境ですので、R と R Studio のインストールに成功した場合も、利用方法を確認してください。確認の段階で、エラーが出てしまった場合の解決方法も、下に書きますが、まずは、Posit Cloud など、他の方法でR を使えるようにして、時間のあるときに、解決を試みてください。","code":""},{"path":"ronrstudio.html","id":"r-と-r-studio","chapter":"5 R Studio で R","heading":"5.2 R と R Studio","text":"R free software environment statistical computing graphics. compiles runs wide variety UNIX platforms, Windows MacOS. https://www.r-project.orgR は、無償で提供されている、統計解析ともに、データサイエンスにおいてたいせつな可視化のためのグラフを描写する環境でもあります。Windows、MacOS や、Linux で利用することが可能です。RStudio integrated development environment (IDE) R Python. includes console, syntax-highlighting editor supports direct code execution, tools plotting, history, debugging, workspace management. RStudio available open source commercial editions runs desktop (Windows, Mac, Linux).　https://posit.co/products/open-source/rstudio/RStudio は、R と Python のための、総合開発環境（IDE）です。RStudio には、プログラムを実行したり、制御やジョブ管理のための、コンソール（console）、コードを書いたり、実行したりする、文書の編集をする、エディター（Editor）とともに、グラフを表示したり、履歴や、プログラムを修正するなどのための、さまざまなツールが付属しています。RStudio はオープンソースで提供され、Windows、Mac および、Linux で利用可能で、有償版のサービスと無償版を提供しています。R は、統計解析のためのシステムで、R Studio は、R（および Python）を利用するための、総合開発環境です。そこで、「R Studio で R を利用する」という表現をします。","code":""},{"path":"ronrstudio.html","id":"r-と-r-studio-のインストール","chapter":"5 R Studio で R","heading":"5.3 R と R Studio のインストール","text":"R と R Studio をインストールします。両方とも、インストールすることが必要です。今後のために、動作確認を、RNotebook を使って行います。注意以下は、自分のコンピュータ、すなわち、管理者権限があるコンピュータにインストールすることを前提に書きます。家族で、コンピュータを共有していて、管理者権限がない場合は、管理者権限のあるかたに、R と RStudio をインストールしてもらってください。そうすれば、そのコンピュータの他のアカウントでも利用することができます。ある制約がかかるとメッセージが出ますが、管理者権限なしで、インストールすることも可能です。特別の事情があり、管理者権限なしで、インストールする場合は、こちらを参照してください。","code":""},{"path":"ronrstudio.html","id":"r-のインストール","chapter":"5 R Studio で R","heading":"5.3.1 R のインストール","text":"https://cloud.r-project.org上のリンクから、Windows、macOS または、Linux を選択して、インストールしてください。Windows の場合は、base - install R first time を選択してください。macOS の場合は、M1, M2 など、最近の Apple Silicon の CPU で動くコンピュータか、以前の、Intel の CPU で動くものか、選択してください。Mac の左上の、りんごマークの、このコンピュータについてから、確認できます。不明の場合は、「R のインストール」と検索してみてください。","code":""},{"path":"ronrstudio.html","id":"r-studio-の-インストール","chapter":"5 R Studio で R","heading":"5.3.2 R Studio の インストール","text":"http://www.rstudio.com/download上のリンクから、Windows 10/11 または、macOS 11+ を 選択してください。これら以外の、古いシステムのコンピュータの場合は、 下のサイトから、探してください。https://docs.posit.co/previous-versions/不明の場合は、「RStudio のインストール」と検索してみてください。","code":""},{"path":"ronrstudio.html","id":"動作確認","chapter":"5 R Studio で R","heading":"5.3.3 動作確認","text":"動作確認のための、一連の流れを書き、その下に、問題が起こった場合の対処を書きます。R Studio はこれまでも使っていたが、R Notebook は使ったことがないという方も、同様の確認をしてください。RStudio を立ち上げます。上のメニューの File から、New Project を選択します。Project の名前を（test とか、firstproject など）つけて、Create ボタンを押します。上のメニューの File から、New File の R Notebook を選択します。\nPackage が必要なので、Install するかと聞かれますから、インストールを選んでください1。\nPackage が必要なので、Install するかと聞かれますから、インストールを選んでください1。File から、Save を選んで、名前を（test0, rnotebook など）とつけ、Preview ボタンを押すと、内容が現れます。Preview ボタンの右の、三角印を押すと、Knit PDF と現れますから、それを選択\nすでに、TeX というシステムを使っておられる方は、PDF が作成されますが、それ以外の方は、なにやらメッセージが出て、TeX システムが無いと出ると思います。\n左下の、Console タブに、tinytex::install_tinytex() をコピーして、入力し、Enter または、Return キーを押し実行します。\nもう一度、Kit PDF を（今度は、Preview ボタンが、Knit となっていると思います。その右の三角から Knit PDF を選択し）押し実行します。\nすでに、TeX というシステムを使っておられる方は、PDF が作成されますが、それ以外の方は、なにやらメッセージが出て、TeX システムが無いと出ると思います。左下の、Console タブに、tinytex::install_tinytex() をコピーして、入力し、Enter または、Return キーを押し実行します。もう一度、Kit PDF を（今度は、Preview ボタンが、Knit となっていると思います。その右の三角から Knit PDF を選択し）押し実行します。この一連の作業で、最後に、PDF が現れれば、動作確認終了です。クラウド Posit Cloud の項目に進んでください。ステップ5まで終了すれば、PDF を作成しない限り、問題はありませんので、あとは、時間のあるときに、対応することも可能です。","code":""},{"path":"ronrstudio.html","id":"トラブルシューティング１","chapter":"5 R Studio で R","heading":"5.3.4 トラブル・シューティング（１）","text":"動作確認のステップ 4 （またはステップ５で要求されるパッケージのインストール時点）または、6 でエラーが出る場合があります。動作確認の ステップ 4で、パッケージをたくさんインストールしますが、この段階で、エラーが出る場合があります。そのときは、まず、RStudio の上のメニューの、Tools の一番下の、Global Options を開き、左のメニューから、Packages を選び、Primary CRAN Repository を Change として、CRAN mirror から、Japan: Institute Statistical Mathematics, Tokyo を選択してください2。\n解決しない場合は、下の、解決しない場合はに進んでください。\n動作確認の ステップ 4で、パッケージをたくさんインストールしますが、この段階で、エラーが出る場合があります。そのときは、まず、RStudio の上のメニューの、Tools の一番下の、Global Options を開き、左のメニューから、Packages を選び、Primary CRAN Repository を Change として、CRAN mirror から、Japan: Institute Statistical Mathematics, Tokyo を選択してください2。解決しない場合は、下の、解決しない場合はに進んでください。動作確認のステップ 4では、問題なく、パッケージのインストールが完了したが、6で、エラーが出た場合には、Windows の日本語アカウント名の問題の可能性が高いと思います。OneDrive の問題の可能性もないとは言えませんが、次を試してみてください。\nTinyTeX のアンインストール：tinytex::unstall_tinytex() を コンソールで実行\nWindowsの自分のアカウントからサインアウトし、サインインしなおす\nTinyTeX をディレクトリを指定してインストール：tinytex::install_tinytex(dir = \"C:/myTinyTeX\") を コンソールで実行\nサインアウトし、サインインしなおす\n上の動作確認のステップ6、R Notebook から knit PDF を利用して、PDF を作成する。\n解決しない場合は、下の、解決しない場合はに進んでください。\n動作確認のステップ 4では、問題なく、パッケージのインストールが完了したが、6で、エラーが出た場合には、Windows の日本語アカウント名の問題の可能性が高いと思います。OneDrive の問題の可能性もないとは言えませんが、次を試してみてください。TinyTeX のアンインストール：tinytex::unstall_tinytex() を コンソールで実行Windowsの自分のアカウントからサインアウトし、サインインしなおすTinyTeX をディレクトリを指定してインストール：tinytex::install_tinytex(dir = \"C:/myTinyTeX\") を コンソールで実行サインアウトし、サインインしなおす上の動作確認のステップ6、R Notebook から knit PDF を利用して、PDF を作成する。解決しない場合は、下の、解決しない場合はに進んでください。解決しない場合は、下の囲みの中を読んでください。Windows の、OneDrive 関連の問題の可能性が高いかと思います。\nその後に書いてあるように、R と RStudio を一度、アンインストールします。（この作業はしなくても、おそらく問題ないと思いますが、安全のためにアンインストールします。）\nもう一つ別の管理者権限のあるアカウントを（半角ローマ字名で）下の指示に従って作成して、そのアカウントにサインインして、上の、1から6を試してください。\n問題なく、1から6が完了したら、しばらく、そちらのアカウントを利用してください。それ以降については、また下に書きます。\n解決しない場合は、下の囲みの中を読んでください。Windows の、OneDrive 関連の問題の可能性が高いかと思います。その後に書いてあるように、R と RStudio を一度、アンインストールします。（この作業はしなくても、おそらく問題ないと思いますが、安全のためにアンインストールします。）もう一つ別の管理者権限のあるアカウントを（半角ローマ字名で）下の指示に従って作成して、そのアカウントにサインインして、上の、1から6を試してください。問題なく、1から6が完了したら、しばらく、そちらのアカウントを利用してください。それ以降については、また下に書きます。別のアカウントでも、問題が解決しない場合は、コンピュータに詳しい方に相談してください。わたしのホームページにある、メールアドレスから、わたしに相談するときは、次の三つの情報をコピー・ペーストして、教えてください。\n上の手順のどこでどのような問題が生じたか、そのときの、エラーメッセージ\nSys.getenv() の出力\nWindows の場合、コマンド・プロンプトから、systeminfo と入力したときの出力\n別のアカウントでも、問題が解決しない場合は、コンピュータに詳しい方に相談してください。わたしのホームページにある、メールアドレスから、わたしに相談するときは、次の三つの情報をコピー・ペーストして、教えてください。上の手順のどこでどのような問題が生じたか、そのときの、エラーメッセージSys.getenv() の出力Windows の場合、コマンド・プロンプトから、systeminfo と入力したときの出力注意：Windows における既知の不具合についてSys.getenv('HOME') と、Sys.getenv('R_LIBS_USER') をそれぞれ、コピーして、RStudio 左下の窓枠の Console タブに、ペーストして、エンターして、???? や、カタカナ、漢字や、OneDrive という文字列が現れるか確認してください。Sys.getenv() とすれば、すべての環境変数を確認することもできます3。Windows の日本語システムで、アカウント名に日本語を使っておられる方、または、OneDrive を使っていて、Documents（書類）ディレクトリーのすべてをバックアップしておられる方は、ファイルを作成したり、パッケージをインストールするときに、問題が発生する可能性があります。カタカナや漢字のユーザネームを使っている場合は、RMarkdown で、文書を作成し、PDF で出力するときには、問題が起こります4。解決方法は上に書いたように、一つの解決方法として、TinyTeX を、Home とは異なるところにインストールしています5。OneDrive で、ドキュメントフォルダ全体のバックアップをとっている場合も、問題が起こる可能性がありますが、一般的には書けませんので、困ったときは、下に書く方法を参照してください6。","code":""},{"path":"ronrstudio.html","id":"トラブルシューティング２","chapter":"5 R Studio で R","heading":"5.3.4.1 トラブル・シューティング（２）","text":"トラブル・シューティング（１）では解決できない場合の対処法を書きます。わたしは、MacOS では、動作確認の１から６で、問題が起こったと聞いたことがないので、以下では主として、Windows に限って書きます。実際には、さまざまな理由がありますから、以下の方法では対処できないかもしれません。まず、エラーメッセージを丁寧に見ることが大切ですが、簡単には理解できない場合が多いかと思います。そこで、まず、試してみる方法を以下に書きます。","code":""},{"path":"ronrstudio.html","id":"r-および-rstudio-のアンインストール","chapter":"5 R Studio で R","heading":"5.3.4.1.1 R および RStudio のアンインストール","text":"どのようなアプリも、本来はインストールと同時に、アンインストール（アプリを削除）する方法を知っておくことは大切です。Windows: 設定から、アプリを選び、アンインストール（削除）したいものを選択して、実行。Mac: アプリケーションフォルダーから、アプリをみつけ、ゴミ箱へ。備考：環境変数のPath について上記の方法で、残ってしまうものがあります。それは、環境変数 Path の設定です。\nアンインストールなどをしたときは、一旦、サインアウトをして、もう一度、サインインしてから確認してください。Mac は、システムのベースにあるのは、Linux などと同じ、Unix なので、アプリケーションの、ユーティリティ（Utilities）から、Terminal を立ち上げ、\necho $PATH とすると、確認できます。RStudio の左下の窓枠にも Terminal があり、そこからでも、同じように確認できます。Windows の場合は、対応するものには、コマンド・プロンプト（Command Prompt）と、パワーシェル（PowerShell）があります。初期設定7では、RStudio の左下の窓枠には、コマンド・プロンプトが出ていると思います。そこで、echo %PATH% とします。PowerShell の場合は echo $Env:Path とすれば、表示できます。Windows の場合、「設定」から、「環境変数の編集」を検索して、選択すると、Path を見ることができます。上の枠が、ユーザの環境変数、下の枠が、システム環境変数です。ユーザの環境変数の中の、Path（他には、TEMP, TMP もあるかと思います。）をコピーしておくと良いでしょう。Path をダブルクリックして、編集することも可能です。ただし、十分理解しないで、Path を変更すると、問題が起こる可能性がありますので、注意してください。","code":""},{"path":"ronrstudio.html","id":"別のアカウントを作成してインストール","chapter":"5 R Studio で R","heading":"5.3.4.1.2 別のアカウントを作成してインストール","text":"Windows に、もう一つ、アカウントを作成します。[スタート] \\(>\\) [設定] \\(>\\) [アカウント] の順に選択し、[ファミリとその他のユーザー] を選択し、[アカウントの追加] から作成します。[スタート] \\(>\\) [設定] \\(>\\) [アカウント] の順に選択し、[ファミリとその他のユーザー] を選択し、[アカウントの追加] から作成します。どのようにサインインしますかと出ますから、下にある、「このユーザーのサインイン\n情報がありません」を選択します。[次へ]どのようにサインインしますかと出ますから、下にある、「このユーザーのサインイン\n情報がありません」を選択します。[次へ]つぎに、アカウントを作成しましょうとでますから、特に、なにも入力せず、「Microsoft ア\nカウントを持たないユーザーを追加する」を選択します。[次へ]つぎに、アカウントを作成しましょうとでますから、特に、なにも入力せず、「Microsoft ア\nカウントを持たないユーザーを追加する」を選択します。[次へ]アカウント設定、名前とパスワード、名前は、ローマ字と数字の半角で作成。パスワードは２回入れる。アカウントの名前と、パスワードは記録しておくこと。アカウント設定、名前とパスワード、名前は、ローマ字と数字の半角で作成。パスワードは２回入れる。アカウントの名前と、パスワードは記録しておくこと。その下の三つの質問とその答えを記入します。これも、おぼられるものにするか、記録すること。[次へ]その下の三つの質問とその答えを記入します。これも、おぼられるものにするか、記録すること。[次へ]アカウントが作成されるが、そのアカウントを選択すると、「アカウントの種類の変更」が選択できるので、「管理者」に変更。[OK] をクリックして終了。アカウントが作成されるが、そのアカウントを選択すると、「アカウントの種類の変更」が選択できるので、「管理者」に変更。[OK] をクリックして終了。アカウント名をローマ字にします。このアカウントから、インストールしてください。元の日本語アカウントとファイルを共有したいときは、C ドライブのユーザーにあるパブリック（共有）ディレクトリーにコピーしてください。","code":""},{"path":"ronrstudio.html","id":"このあとの使い方について","chapter":"5 R Studio で R","heading":"5.3.4.1.3 このあとの使い方について","text":"他のアカウントに、R と RStudio をインストールしても、自分のアカウントでも、R と RStudio を利用することが可能です。しかし、漢字やカタカナのアカウント名や、OneDrive の問題は、解決しません。アカウント名を修正することは可能ですが、間違えると、コンピュータ自体が動かなくなりますから、ここでは、説明しませんが、興味のあるかたは、矢内勇生さんのスライド を参照してください。OneDrive は、どのように使われているかによって、対応が変わりますので、一般的な対応方法は書けません。OneDrive は、Microsoft が提供するクラウドサービスで、5GB までは、無料で使えることもあり、コンピュータを使い始めるときに8、利用を促されます。5GB を超える場合は、課金されます。十分な容量を有料で確保していると、すべて、OneDrive にバックアップすることになり、Home も、OneDrive の管理下に置かれて、上に述べたような、ファイルを書いたり消去したりを頻繁に行うプログラムの場合には、問題が起こるようです。ただし、バックアップを取ること自体は、とても有効なことですので、設定を変える場合は、十分検討してから行ってください。個人的には、簡単設定で設定される、デスクトップと、ドキュメントと、フォトのうち、ドキュメントについては、OneDrive バックアップを停止し、ドキュメントの中に、バックアップ用のフォリダーを作成し、その中のもののみ、バックアップするのが良いのではないかと思います。それには、ドキュメントのバックアップを外し、OneDrive の中に、フォルダーを作成して、そこに、バックアップするファイルを移動させます。しかし、使い方などによって、状況が異なりますので、コンピュータに詳しいかたに相談することをお勧めします。その上で、RStudio のプロジェクトを作成するときは、OneDrive でバックアップをとっていないフォルダーに作成します。詳細は、下のリンクなどを参照してください。参照リンク","code":""},{"path":"ronrstudio.html","id":"positcloud","chapter":"5 R Studio で R","heading":"5.4 クラウド - Posit Cloud","text":"Posit（RStudio）Cloudは、誰でもオンラインでデータサイエンスを行い、共有し、教え、学ぶことができる、軽量でクラウドベースのソリューションです。2022年11月に、会社名が、RStuio から Posit に変更になったので、Posit Cloud となっていますが、まだ、RStudio Cloud と表示されている箇所もあります。","code":""},{"path":"ronrstudio.html","id":"クラウドサービス-how-to-start-posit-cloud","chapter":"5 R Studio で R","heading":"5.4.1 クラウドサービス　How to Start Posit Cloud","text":"まず、サインアップして、使ってください。一ヶ月の利用時間の限度など、設定されていますが、どこからでも、インターネットにつながっていれば使えるので、わたしは、いつくかアカウントを持って、活用しています。Posit Cloud にアクセスします。Go https://posit.cloud/Get Started または、右上から、Sign を選択します。Sign : top rightEmail address Google accountNew Project: Project Name特徴：制限など（Key Features）プロジェクト数の上限は50。50 projects total共有スペースは一つのみ（5人までのメンバーが10個のプロジェクトまで共有できます） 1 shared space (5 members 10 projects max)コンピュータ時間としては月間最大25時間9。25 compute hours per month各プロジェクトについて最大 1GB のRAM（Read Access Memory）。1 GB RAM per project各プロジェクトについて 1 CPU。1 CPU per project背後で実行する作業は1時間が上限。1 hour background execution time大学で課題などに取り組むと、まず、月間25時間の制限に引っかかり、次のようなメッセージが表示されます。account exceeded compute hour limit. can continue open projects account time, used total 40 compute hours. unable open projects space owned account next usage period begins day.わたしは、このようなメッセージが出たら、重要度にもよりますが、まずは、プロジェクトをダウンロードし、いつでも、自分のコンピュータで使えるようにしてから、他の、アカウントに引っ越して、作業を続けています。その方法を追記しておきます。TIPs：プロジェクトをダウンロード：プロジェクトのダウンロード：自分のコンピュータに R と R Studio が使える場合は、必要なプロジェクトをダンロードします。ダウンロードするには、左上の3本線から、自分の Workspace にもどり、プロジェクトの右についている、ダウンロードボタンを押します。これは、プロジェクトとして、RStudio から開くことができます。installed R Studio R computer, three lines top left, go back workspace.\ndownload button right project. can open computer.他のアカウントとの共有：異なる電子メールアドレスで別の Posit Cloud アカウントを作成します。（create another Posit Cloud account another email address.）使っていたプロジェクトを開き、右上のギアマークから、Change Access を、から、everyone に変更します。（current project, open gear mark top right, change access everyone.）使っていたプロジェクトのアカウント名の隣にある、三つの点が丸で囲まれているものを選び、Share Link を、別のアカウントを作成したアドレスに送ります。（currentproject, next account name, circle three dots. Share link send email another account.）使っていた、元のアカウントからログアウトし、新しいアカウントを開き、送られてきたアドレスクリック、またはコードを入れると、使っていたプロジェクトが開き、Temporary Copy と出ます。編集して使いたい時は、それを Permanent Copy にすると、新しいアカウントで編集し、使うことができます。（, can get access code current project. Log existing account, log new account, use link.\ncan see temporary file containing everything old account use permanent project.)","code":""},{"path":"ronrstudio.html","id":"positcloud-shared-project","chapter":"5 R Studio で R","heading":"5.4.2 PositCloud Shared Project","text":"わたしのプロジェクトを一つ共有してありますので、興味のある方はご覧ください、まず、自分の、PositCloud アカウントにログインする。リンク をクリック上に、Temporary Copy と出ています。このままでの、右下の、窓枠から、Files を選び、開いて中身を見たり、Code Chunk を実行したり、Preview や、knit をすることも可能です。Try と表示されますが、それをクリックすると、表示されます。R Markdown などの詳細は、R Markdown の章をみてください。上に、Save Permanent Copy とあります。これを、クリックすると、自分の、プロジェクトとすることができ、編集も可能になります。","code":""},{"path":"ronrstudio.html","id":"posit-primers-and-cheat-sheet","chapter":"5 R Studio で R","heading":"5.4.3 Posit Primers and Cheat Sheet","text":"Posit Primers の左の帯（表示されていない場合は、左上の３本線をクリックしてください）をみると、いろいろな機能があることがわかります。特に、Primers は、基本的な練習をするプログラムで、あとからも、紹介しますが、答えを入力している形の練習問題になっています。とても有用です。Cheat Sheet は、いくつもの、機能の一覧が、早見表の形式で載っています。使い方などをぼえておくことはできないので、わたしも、よく使っています。","code":""},{"path":"ronrstudio.html","id":"r-のその他の利用方法","chapter":"5 R Studio で R","heading":"5.5 R のその他の利用方法","text":"R Studio または、RStudio Cloud（Posit Cloud） 以外で、R を使われる方のために、少しだけ書いておきます。個人的には、Google colab と、Cocalc を利用しています。Google colab は、Google アカウントの作成、Cocalc は、Cocalc アカウントの作成、または、Google アカウントか、GitHub アカウントのリンクが必要です。Google アカウントをお持ちの方は多いと思うので、Google colab について、最低限のことのみ、書いておきます。","code":""},{"path":"ronrstudio.html","id":"google-colab-で-r","chapter":"5 R Studio で R","heading":"5.5.1 Google colab で R","text":"基本的に、python 開発環境として構築されているものですが、R でも使うことができます。Google アカウントにログインします。ここ をクリックして起動します。一番上に、ノートブック名が Untitled0.ipynb などと表示されますから、適当に変更します。＋コード、＋テキスト　とあり、最初のコードの１行が表示されていますから、たとえば、head(cars) と入れて、左の三角を押します。すると、最初だけ少し時間がかかりますが、その下に結果がでます。次に、上や、最後の行の直下に、表示される、＋コード、＋テキスト をクリックして、あたらしい、コード・チャンクか、テキスト・チャンクを書き入れていきます。tidyverse などは、すでにインストールされていますが、使いたいときは、library(tidyverse) とし、インストールされていないときは、install.packages(\"WDI\") などとします。ノートを、保存、印刷、ダウンロードなど可能です。フォルダーを作成して、外部ファイルを読み込んだり、書き出したりすることも可能です。","code":""},{"path":"ronrstudio.html","id":"参考-2","chapter":"5 R Studio で R","heading":"5.5.1.1 参考","text":"use R Google Colab:","code":""},{"path":"ronrstudio.html","id":"cocalc-で-r-と-rmarkdown","chapter":"5 R Studio で R","heading":"5.5.2 CoCalc で R と RMarkdown","text":"Cocalc リンク無償版は、スピードが遅いですが、個人的には、有用なクラウドサービスとして、活用しています。グループでプロジェクトを共有することも簡単にできます。最初は、上のリンクの下にある、SinUp から、アカウントを作成します。Email アドレス、または、Google などのアカウントにリンクさせて、アカウントを作成することが可能です。Create New Project から、プロジェクトを作成します。使い方New から、Sage Worksheet を選択して、%default_mode r と最初に書けば、そのあと、R のコマンドを実行できます。New から、RMarkdown を選択すると、RMarkdown 文書を作成することができます。他にも、TeX や、Python Notebook (Jupyter Notebook) など、さまざまな道具が提供されています。Maxima と呼ばれる、Maathematica の Free のバージョンから改良した、SageMath からスタートしたサイトです。","code":""},{"path":"rmarkdown.html","id":"rmarkdown","chapter":"6 R Markdown","heading":"6 R Markdown","text":"","code":""},{"path":"rmarkdown.html","id":"reproducible-and-literate-programming","chapter":"6 R Markdown","heading":"6.1 Reproducible and Literate Programming","text":"データサイエンスは、サイエンス（科学）ということばもついていますが、特に、根拠に基づいた（evidence based）とか、データに基づいた（data based）ということばを使うときには、なおさら、再現可能性（reproducibility）や、コードの内容の説明などのコミュニケーションにも注力する必要があります。このことを心がけて、データサイエンスを学んでいきましょう。表題にある、“Reproducible Literate Programming” は、Reproducible （再現可能）かつ、Literate　な（理解できるように記述した）Program（プログラム・コード）を共有することをたいせつにしましょうということです。","code":""},{"path":"rmarkdown.html","id":"目的問いなど","chapter":"6 R Markdown","heading":"6.1.1 目的、問いなど","text":"プロジェクトの目的、問いなどは、途中で変わっていくこともありますが、その都度に、メモをしておくと良いでしょう。","code":""},{"path":"rmarkdown.html","id":"データについて","chapter":"6 R Markdown","heading":"6.1.2 データについて","text":"どのようなデータをどのように取得してきたかを、記録し、伝えられるようにすることが、必要です。データを取得するときから、取得方法や、それを伝える方法にも常に気をつけましょう。","code":""},{"path":"rmarkdown.html","id":"コードについて","chapter":"6 R Markdown","heading":"6.1.3 コードについて","text":"どのようなコードでそのグラフ（chart）などが得られたかも、単にコードを記述するだけでなく、それぞれの部分に、説明を付与することも有効です。","code":""},{"path":"rmarkdown.html","id":"グラフについて","chapter":"6 R Markdown","heading":"6.1.4 グラフについて","text":"視覚化（visualization）は、とても有効です。そこで、見て理解したこと、観察したこと（observations）などは、簡単でも構いませんから、必ず、記録しておきましょう。","code":""},{"path":"rmarkdown.html","id":"まとめr-markdown-の目的","chapter":"6 R Markdown","heading":"6.1.5 まとめ：R Markdown の目的","text":"まさに、このようなことを可能にするのが、R Markdown です。少しずつ学んでいきましょう。","code":""},{"path":"rmarkdown.html","id":"準備パッケージのインストール","chapter":"6 R Markdown","heading":"6.2 準備：パッケージのインストール","text":"Rパッケージは、Rの拡張機能で、コード、データ、ドキュメントを標準化されたコレクション形式で含んでおり、標準的なものは、R Studio の Top Bar の Tool > Install Packages からインストールできます。tidyversermarkdowntinytexインストールを複数回しても問題はありませんが、インストールされているかどうかは、Packages タブから確認することができます。インストールは一回だけ。ときどき、Tools > Check Package Update をつかって、Update しておくと良いでしょう。","code":""},{"path":"rmarkdown.html","id":"r-notebook","chapter":"6 R Markdown","heading":"6.3 R Notebook","text":"R Markdownはデータサイエンスのためのオーサリングフレームワーク。コード（プログラム）とその実行結果、を記録・表示し、高品質のレポートの作成を可能にします。R Notebook は、独立してインタラクティブに実行できるチャンクを持つR Markdownドキュメントの一つの形式で、入力のすぐ下に出力が表示することができます。File > New File > R NotebookSave file name, say, test-notebookPreview [Preview] buttonRun Code Chunk plot(cars) Preview .","code":""},{"path":"rmarkdown.html","id":"日本語のテンプレート","chapter":"6 R Markdown","heading":"6.4 日本語のテンプレート","text":"下のリンクを開き、右上の Code ボタンから、Download Rmd を選択すると、ダウンロードできますから、ダインロードしたものを、プロジェクト・フォールダーに移動またはコピーしてください。ダウンロードできないときは、Ctrl を押しながら、Download Rmd をクリックすると、Save で保存できると思います。ブラウザーによって仕様が異なりますから、適切な方法を選んでください。https://ds-sl.github.io/intro2r/RNotebook-J.nb.htmlhttps://ds-sl.github.io/intro2r/Rmarkdown-J.nb.htmlWindows でも、Mac でも提供されている、Google Chrome の場合には、Code ボタンから、ダンロードされるはずです。RNotebook の新しいファイルを作成し、下のサイトを表示させて、コピー・ペーストで、書き換えることも可能です。https://ds-sl.github.io/intro2r/RNotebook-J.htmlhttps://ds-sl.github.io/intro2r/Rmarkdown-J.html","code":""},{"path":"rmarkdown.html","id":"r-markdown-いくつかの-output","chapter":"6 R Markdown","heading":"6.5 R Markdown いくつかの Output","text":"PDFでエラー？ コンソールで tinytex::install_tinytex()TeX システムがインストールされている場合は不要エラーの例を書いておきます。tinytex::install_tinytex() おらず、他の TeX システムもインストールしていない環境で、上に引用した、RNotebook-J から、PDF を作成したときに生じたエラーです。ここに「よくわからない場合は、RでTinyTeXをインストールすることもできます: tinytex::install_tinytex()」と書いてあります。エラーメッセージの例","code":"---\ntitle: \"Testing R Markdown Formats\"\nauthor: \"ID Your Name\"\nheader-includes:\n  - \\usepackage{ctex}\noutput:\n  html_notebook: default\n  html_document: default\n  pdf_document: default\n    latex_engine: xelatex\n  word_document: default\n  powerpoint_presentation: default\n  ioslides_presentation: default\n---If you are not sure, you may install TinyTeX in R: tinytex::install_tinytex()processing file: RNotebook-J.Rmd\n\n“C:/Program Files/RStudio/bin/quarto/bin/tools/pandoc” +RTS -K512m -RTS RNotebook-J.knit.md –to latex –from markdown+autolink_bare_uris+tex_math_single_backslash –output RNotebook-J.tex –lua-filter “C:000117x-library\\4.2.lua” –lua-filter “C:000117x-library\\4.2-div.lua” –embed-resources –standalone –highlight-style tango –pdf-engine pdflatex –variable graphics –variable “geometry:margin=1in” output file: RNotebook-J.knit.md\n\nError: LaTeX failed to compile RNotebook-J.tex. See https://yihui.org/tinytex/r/#debugging for debugging tips. In addition: Warning message: In system2(…, stdout = if (use_file_stdout()) f1 else FALSE, stderr = f2) : ‘“pdflatex”’ not found Execution halted\n\nNo LaTeX installation detected (LaTeX is required to create PDF output). You should install a LaTeX distribution for your platform: https://www.latex-project.org/get/\n\nIf you are not sure, you may install TinyTeX in R: tinytex::install_tinytex()\n\nOtherwise consider MiKTeX on Windows - http://miktex.org\n\nMacTeX on macOS - https://tug.org/mactex/ (NOTE: Download with Safari rather than Chrome strongly recommended)\n\nLinux: Use system package manager"},{"path":"rmarkdown.html","id":"youtube-video---rmarkdown","chapter":"6 R Markdown","heading":"6.6 YouTube Video - rmarkdown","text":"","code":""},{"path":"rmarkdown.html","id":"rmarkdown-で-pdf-を作成するときの注意","chapter":"6 R Markdown","heading":"6.6.1 RMarkdown で PDF を作成するときの注意","text":"RMarkdown では、tinytex パッケージというとても素晴らしいものが提供されています。これは、TeXLive というシステムを扱うためのものですが、LiveTeX 全体は、3GB 程度ありますが、非常に小さなファイルで、必要なものだけ、導入できるようになっています。システムを、使われる方は、TeXLive が、インストールされているかと思いますので、それを使うことが狩野樹になっています。一応、TeXLive がインストールされていて、そのあとに、TinyTeX をインストールしようとすると、拒否されますが、インストール、アンインストールなどをしていると、Path も変更になるため、問題が起こり、PDF が作成できなくなる場合もあります。その場合の対処も含めて、下に書きます。アカウントに漢字やカタカナが入っていると、PDF が作成できません。","code":""},{"path":"rmarkdown.html","id":"tinytex-によるインストール方法","chapter":"6 R Markdown","heading":"6.6.1.1 tinytex によるインストール方法","text":"tinytex::install_tinytex(dir = “C:/TTeX”)環境変数の設定：\nPath=C:\\**UserName**\\AppData\\Local\\Microsoft\\WindowsApps;C:\\TTeX\\bin\\windows\nUserName の部分は、ご自分のユーザネームに変更　 は日本語システムでは、¥ と表示されているかもしれません。\nPath=C:\\**UserName**\\AppData\\Local\\Microsoft\\WindowsApps;C:\\TTeX\\bin\\windowsUserName の部分は、ご自分のユーザネームに変更　 は日本語システムでは、¥ と表示されているかもしれません。これで解決しない場合は、Windows に、もう一つ、アカウントを作成し10、アカウント名を英語にして、そちらから、インストールしてください。元の日本語アカウントとファイルを共有したいときは、共有ディレクトリーにコピーしてください。すべての状況は確認できませんので、ここまでとします11。Chat GPT に確認したやりとりは、ここにあります。自分で確認をして、HOME の変更などをしてみても良いですが、問題が生じた時に、サポートできませんから、一般的な方法としては、書かないことにします。注：矢内勇生さんのサイトには、詳細な説明があります。","code":""},{"path":"rbasics.html","id":"rbasics","chapter":"7 R Basics","heading":"7 R Basics","text":"","code":""},{"path":"rbasics.html","id":"プロジェクト---project","chapter":"7 R Basics","heading":"7.1 プロジェクト - Project","text":"RStudio で R を利用する場合には、プロジェクトを作成することを強く勧めます。まず、R Studio を起動します。まず、R Studio を起動します。上のメニューの、File から、New Project を選択します。New Directory（新しいディレクトリー）を選択し、プロジェクトを作成する Directory を決めて、名前をつけます。その名前が、プロジェクト名になります。上のメニューの、File から、New Project を選択します。New Directory（新しいディレクトリー）を選択し、プロジェクトを作成する Directory を決めて、名前をつけます。その名前が、プロジェクト名になります。Directory（フォルダー）を指定してその名前をつけて、プロジェクトを作成します。Directory が階層に分かれているときは、どこに作成するかを選択してから、名前をつけて、作成します。一旦、R Studio を終了してみましょう。一旦、R Studio を終了してみましょう。プロジェクトの起動には、いくつかの方法があります。プロジェクトの起動には、いくつかの方法があります。まず、R Studio を起動。一つしかプロジェクトがない場合は、そのプロジェクトが起動すると思います、。上に、プロジェクト名が掲載されていれば、問題ありません。File から、Open Project を選択し、起動したい、プロジェクトの Directory（フォルダー）を選択して起動します。File から、Recent Project（最近使ったプロジェクト）を選択すると、プロジェクト名が表示されますから、選択すると起動することができます。コンピュータのプロジェクト入っているディレクトリー（フォルダー）をさがし、そこに、プロジェクト名.Rproj とあるものを見つけて、それを開くと、そのプロジェクトが起動します。作業後は、保存しますかと聞かれますから、保存して終了してください。","code":""},{"path":"rbasics.html","id":"コンソールで実行---run-in-console","chapter":"7 R Basics","heading":"7.2 コンソールで実行 - Run in Console","text":"プログラム（コード）の実行には、いくつかの方法がありますが、一番、基本的な、コンソール（Console）での実行について、説明します。Console は、R Studio の左下にあります。（左の枠が一つになっているかもしれません。その一番左のタブが Console です。選択されていない場合は、Console を選択してください。）","code":""},{"path":"rbasics.html","id":"最初の四つ","chapter":"7 R Basics","heading":"7.2.1 最初の四つ","text":"下の、四つを、一つずつ、一番下の、> マークの次に書き（または、コピー・ペーストして）Return または、Enter キーを押してください。実行結果が、その下に出ます。最後の、plot(cars) は、cars というデータの、散布図が右下の、Plots タブに表示されます。head(cars)str(cars)summary(cars)plot(cars)エラーが表示されたら、もう一度、スペルを確認して、入力してみてください。次のような、結果が表示されると思います。簡単な説明をつけます。head(cars) は、cars という、R に付属している、データの、最初（頭 head）の6行を、表示します。str(cars) は、cars という、R に付属している、データの構造（structure）を表示します。data.frame とありますが、これは、矩形になったデータ（各列の長さがおなじ）の一番簡単なクラスの名前で、2変数、それぞれが、50 個の数値データ（numerical data） からなっていることがわかります。head(cars) では、縦に表示されていたものが、横に表示されています。$speed、$dist とありますが、cars$speed, cars$dist は、cars データの、それぞれの列を意味します。cars データの概要（summary）が表示されます。各列（変数）について、最小値（Minimum）、小さい方から、4分の1を切り捨てたときの最小の値（1st Quadrant）、中央値（Median）、平均（Mean）、大きい方から、4分の1を切り捨てたときの最大の値（3rd Quadrant）、最大値（Maximum）が表示されます。右下の、窓枠の、Plots に、上のグラフ（散布図）が表示されると思います。Export と書いてある、プルダウンメニューがあり、そこから、画像として保存することも、可能です。以前は、このように取り出した画像を、Word などに貼り付けて、使っていました。現在でも、そのような方法を知っていることは有効だと思います。","code":"\nhead(cars)\n#>   speed dist\n#> 1     4    2\n#> 2     4   10\n#> 3     7    4\n#> 4     7   22\n#> 5     8   16\n#> 6     9   10\nstr(cars)\n#> 'data.frame':    50 obs. of  2 variables:\n#>  $ speed: num  4 4 7 7 8 9 10 10 10 11 ...\n#>  $ dist : num  2 10 4 22 16 10 18 26 34 17 ...\nsummary(cars)\n#>      speed           dist       \n#>  Min.   : 4.0   Min.   :  2.00  \n#>  1st Qu.:12.0   1st Qu.: 26.00  \n#>  Median :15.0   Median : 36.00  \n#>  Mean   :15.4   Mean   : 42.98  \n#>  3rd Qu.:19.0   3rd Qu.: 56.00  \n#>  Max.   :25.0   Max.   :120.00\nplot(cars)"},{"path":"rbasics.html","id":"アサインメントヘルプ","chapter":"7 R Basics","heading":"7.2.2 アサインメント、ヘルプ","text":"コンソールで次のそれぞれを、試してみてください。df <- carsdf に、cars をアサインします。すなわち、df が、cars の内容に置き換わります。cars はデータですが、データを含む、オブジェクトの名前を設定するためにも使います。オブジェクト名は。英文字から始まれば、かなりの自由度がありますが、わたしは、英文字と数字と _（underscore） 程度しか使わないようにしています。head(df)head(df) は、head(cars) と同じ出力が得られます。View(cars)左上の、窓枠が開き、cars というデータ の内容が表示されます。列名のところには、三角形も表示され、それを用いると、大きい順、小さい順などに、並び替えることも可能です。また、フィルター機能も使えます。?cars右下の、窓枠の　Help タブに、cars の情報が表示されます。Help タブにある、虫眼鏡がついた、検索窓（search window）に、cars といれても、同じ結果が得られます。\n内容を確認してください。一番上には cars {datasets} とありますが、これは、datasets というパッケージの、cars だという意味です。そこで、datasets を調べてみましょう。?datasets“R Datasets Package” だと書かれていて、さらに、package contains variety datasets. complete list, use library(help = “datasets”).さまざまなデータが含まれています。全てのリストをみるには、library(help = \"datasets\") を使ってください。とありますから、library(help = \"datasets\") をコンソールに入力してみてください。library(help = \"datasets\")左上の窓枠に、リストが表示されます。古いデータばかりですが、例として使うには、十分すぎるぐらいの、数のデータがあります。これらは、Toy Data（おもちゃのデータ）と呼ばれることもあります。cars も見つかりましたか。","code":""},{"path":"rbasics.html","id":"おすすめ","chapter":"7 R Basics","heading":"7.2.3 おすすめ","text":"コンピュータのシステムが、日本語であると、R の言語も日本語になっているはずです。そこで、エラーが発生すると、一部、日本語で表示されます。しかし、ネット上などで、そのエラーの対応を検索するときは、英語のエラーメッセージで検索した方が、解決方法が得られる可能性が圧倒的に高いので、わたしは、英語に設定しています。英語にするには、Console で次のようにします。言語を英語に設定：Sys.setenv(LANG = \"en\")RStudio を終了して、もう一度起動すると、日本語に戻っていると思います。ですから、作業の最初、または、エラーが出たら、変更することをお勧めします。日本語に戻したいときは、次のようにします。言語を日本語に設定：Sys.setenv(LANG = \"ja\")さまざまな Help なども、すべて日本語で表示されれば日本語を使うのは有効かもしれませんが、すくなくとも、現在は、そうではないので、上に説明したことから、英語に設定することをお勧めします。","code":""},{"path":"rbasics.html","id":"練習-1","chapter":"7 R Basics","heading":"7.2.4 練習","text":"head(cars, 10L) は何が出力されますか。head(cars, n=10L) と同じですか。?head または、Help の検索窓に head と入力して、説明を見てみてください。head(cars, n=10L) などについて、書いてありましたか。他には、どのようなことが分かりましたか。datasets のデータのいくつかについて、そのデータの help や、head, str, summary などを使ってみてください。これらで表示できない場合はありますか。データについては、最初に、これら、三つを試してみることをお勧めします。わかったことをメモしておくと良いでしょう。datasets のリストをみるには、library(help = \"datasets\") でしたね。","code":""},{"path":"rbasics.html","id":"rstudio-について","chapter":"7 R Basics","heading":"7.3 RStudio について","text":"RStudio は多くの機能を持っています。","code":""},{"path":"rbasics.html","id":"四つの窓枠とタブ-four-panes-and-tabs","chapter":"7 R Basics","heading":"7.3.1 四つの窓枠とタブ Four Panes and Tabs","text":"左上（Top Left）: スクリプトや文書、データなどの編集（Source Editor）右上（Top Right）: 環境変数（Environment）, 履歴（History） など（etc.）左下（Bottom Left）: コードの実行・実行結果などを表示するコンソール（Console）, コンピュータシステムの端末（Terminal）, 文書の機械語翻訳（Render）, 背後での作業（Background Jobs）右下（Bottom Right）: ファイル（Files）, 描画（Plots）, パッケージ（Packages）, ヘルプ（Help）, 文書などの表示窓（Viewer）, R Markdown の HTML, PDF 表示（Presentation12）","code":""},{"path":"rbasics.html","id":"r-script-実行記録","chapter":"7 R Basics","heading":"7.4 R Script 実行記録","text":"R Script を使って、コードを実行すると、その記録を残すことができます。","code":""},{"path":"rbasics.html","id":"r-script-の作成","chapter":"7 R Basics","heading":"7.4.1 R Script の作成","text":"RStudio の上のメニュー・バーからFile > New File > R Script を選択します。File > Save で、名前をつけて保存します。{file_name}.R が作成されます。\n右下の、Files から、ファイルを確認してください。\n右下の、Files から、ファイルを確認してください。head(cars), str(cars), summary(cars), plot(cars) などと改行をしながらコードを書きます。実行するには、カーソルの場所で Ctrl+Shift+Enter (Win) または Cmd+Shift+Enter (Mac) とすると、カーソルのある行か、その下の行で、最初のコードが実行されます。\nR Script エディターの上にある、Run ボタンを押しても、同様に実行されます。\nRun ボタンの右の、Source ボタンを押すと、そのスクリプトの、最初からすべてが実行されます。\nR Script エディターの上にある、Run ボタンを押しても、同様に実行されます。Run ボタンの右の、Source ボタンを押すと、そのスクリプトの、最初からすべてが実行されます。最後には保存しておきましょう。たとえば、myfirstscript などとすると、File のところに、myfirstscript.R というファイルができていることを確認できます。","code":""},{"path":"rbasics.html","id":"r-script-による実行","chapter":"7 R Basics","heading":"7.4.2 R Script による実行","text":"新しく、R Script を作成し、この下の、コード（ハイライトされている部分）をコピー・ペーストして、保存し、実行してみてください。それぞれ、どのようなことをしているでしょうか。","code":""},{"path":"rbasics.html","id":"スクリプト1-basics.r","chapter":"7 R Basics","heading":"7.4.2.1 スクリプト1: basics.R","text":"","code":"\n#################\n#\n# basics.R\n#\n################\n# 'Quick R' by DataCamp may be a handy reference: \n#     https://www.statmethods.net/management/index.html\n# Cheat Sheet at RStudio: https://www.rstudio.com/resources/cheatsheets/\n# Base R Cheat Sheet: https://github.com/rstudio/cheatsheets/raw/main/base-r.pdf\n# To execute the line: Control + Enter (Window and Linux), Command + Enter (Mac)\n## try your experiments on the console\n\n## calculator\n\n3 + 7\n\n### +, -, *, /, ^ (or **), %%, %/%\n\n3 + 10 / 2\n\n3^2\n\n2^3\n\n2*2*2\n\n### assignment: <-, (=, ->, assign()) \n\nx <- 5\n\nx \n\n#### object_name <- value, '<-' shortcut: Alt (option) + '-' (hyphen or minus) \n#### Object names must start with a letter and can only contain letter, numbers, _ and .\n\nthis_is_a_long_name <- 5^3\n\nthis_is_a_long_name\n\nchar_name <- \"What is your name?\"\n\nchar_name\n\n#### Use 'tab completion' and 'up arrow'\n\n### ls(): list of all assignments\n\nls()\nls.str()\n\n#### check Environment in the upper right pane\n\n### (atomic) vectors\n\n5:10\n\na <- seq(5,10)\n\na\n\nb <- 5:10\n\nidentical(a,b)\n\nseq(5,10,2) # same as seq(from = 5, to = 10, by = 2)\n\nc1 <- seq(0,100, by = 10)\n\nc2 <- seq(0,100, length.out = 10)\n\nc1\n\nc2\n\nlength(c1)\n\n#### ? seq   ? length   ? identical\n\n(die <- 1:6)\n\nzero_one <- c(0,1) # same as 0:1\n\ndie + zero_one # c(1,2,3,4,5,6) + c(0,1). re-use\n\nd1 <- rep(1:3,2) # repeat\n\n\nd1\n\ndie == d1\n\nd2 <- as.character(die == d1)\n\nd2\n\nd3 <- as.numeric(die == d1)\n\nd3\n\n### class() for class and typeof() for mode\n### class of vectors: numeric, charcters, logical\n### types of vectors: doubles, integers, characters, logicals (complex and raw)\n\ntypeof(d1); class(d1)\n\ntypeof(d2); class(d2)\n\ntypeof(d3); class(d3)\n\nsqrt(2)\n\nsqrt(2)^2\n\nsqrt(2)^2 - 2\n\ntypeof(sqrt(2))\n\ntypeof(2)\n\ntypeof(2L)\n\n5 == c(5)\n\nlength(5)\n\n### Subsetting\n\n(A_Z <- LETTERS)\n\nA_F <- A_Z[1:6]\n\nA_F\n\nA_F[3]\n\nA_F[c(3,5)]\n\nlarge <- die > 3\n\nlarge\n\neven <- die %in% c(2,4,6)\n\neven\n\nA_F[large]\n\nA_F[even]\n\nA_F[die < 4]\n\n### Compare df with df1 <- data.frame(number = die, alphabet = A_F)\ndf <- data.frame(number = die, alphabet = A_F, stringsAsFactors = FALSE)\n\ndf\n\ndf$number\n\ndf$alphabet\n\ndf[3,2]\n\ndf[4,1]\n\ndf[1]\n\nclass(df[1])\n\nclass(df[[1]])\n\nidentical(df[[1]], die)\n\nidentical(df[1],die)\n\n####################\n# The First Example\n####################\n\nplot(cars)\n\n# Help\n\n? cars\n\n# cars is in the 'datasets' package\n\ndata()\n\n# help(cars) does the same as ? cars\n# You can use Help tab in the right bottom pane\n\nhelp(plot)\n? par\n\nhead(cars)\n\nstr(cars)\n\nsummary(cars)\n\nx <- cars$speed\ny <- cars$dist\n\nmin(x)\nmean(x)\nquantile(x)\n\nplot(cars)\n\nabline(lm(cars$dist ~ cars$speed))\n\nsummary(lm(cars$dist ~ cars$speed))\n\nboxplot(cars)\n\nhist(cars$speed)\nhist(cars$dist)\nhist(cars$dist, breaks = seq(0,120, 10))"},{"path":"rbasics.html","id":"スクリプト2-coronavirus.r","chapter":"7 R Basics","heading":"7.4.2.2 スクリプト2: coronavirus.R","text":"","code":"\n# https://coronavirus.jhu.edu/map.html\n# JHU Covid-19 global time series data\n# See R package coronavirus at: https://github.com/RamiKrispin/coronavirus\n# Data taken from: https://github.com/RamiKrispin/coronavirus/tree/master/csv\n# Last Updated\nSys.Date()\n\n## Download and read csv (comma separated value) file\ncoronavirus <- read.csv(\"https://github.com/RamiKrispin/coronavirus/raw/master/csv/coronavirus.csv\")\n# write.csv(coronavirus, \"data/coronavirus.csv\")\n\n## Summaries and structures of the data\nhead(coronavirus)\nstr(coronavirus)\ncoronavirus$date <- as.Date(coronavirus$date)\nstr(coronavirus)\n\nrange(coronavirus$date)\nunique(coronavirus$country)\nunique(coronavirus$type)\n\n## Set Country\nCOUNTRY <- \"Japan\"\ndf0 <- coronavirus[coronavirus$country == COUNTRY,]\nhead(df0)\ntail(df0)\n(pop <- df0$population[1])\ndf <- df0[c(1,6,7,13)]\nstr(df)\nhead(df)\n### alternatively,\nhead(df0[c(\"date\", \"type\", \"cases\", \"population\")])\n###\n\n## Set types\ndf_confirmed <- df[df$type == \"confirmed\",]\ndf_death <- df[df$type == \"death\",]\ndf_recovery <- df[df$data_type == \"recovery\",]\nhead(df_confirmed)\nhead(df_death)\nhead(df_recovery)\n\n## Histogram\nplot(df_confirmed$date, df_confirmed$cases, type = \"h\")\nplot(df_death$date, df_death$cases, type = \"h\")\n# plot(df_recovered$date, df_recovered$cases, type = \"h\") # no data for recovery\n\n## Scatter plot and correlation\nplot(df_confirmed$cases, df_death$cases, type = \"p\")\ncor(df_confirmed$cases, df_death$cases)\n\n\n## In addition set a period\nstart_date <- as.Date(\"2022-07-01\")\nend_date <- Sys.Date() \ndf_date <- df[df$date >=start_date & df$date <= end_date,]\n##\n\n## Set types\ndf_date_confirmed <- df_date[df_date$type == \"confirmed\",]\ndf_date_death <- df_date[df_date$type == \"death\",]\ndf_date_recovery <- df_date[df_date$data_type == \"recovery\",]\nhead(df_date_confirmed)\nhead(df_date_death)\nhead(df_date_recovery)\n\n## Histogram\nplot(df_date_confirmed$date, df_date_confirmed$cases, type = \"h\")\nplot(df_date_death$date, df_date_death$cases, type = \"h\")\n# plot(df_date_recovered$date, df_date_recovered$cases, type = \"h\") # no data for recovery\n\nplot(df_date_confirmed$cases, df_date_death$cases, type = \"p\")\ncor(df_date_confirmed$cases, df_date_death$cases)\n\n#### Extra\nplot(df_confirmed$date, df_confirmed$cases, type = \"h\", \n     main = paste(\"Comfirmed Cases in\",COUNTRY), \n     xlab = \"Date\", ylab = \"Number of Cases\")"},{"path":"rbasics.html","id":"練習-2","chapter":"7 R Basics","heading":"7.4.3 練習","text":"上の、coronavirus.R についてCOUNTRY <- \"Japan\" の Japan を他の国に変えてみましょう。start_date <- .Date(\"2022-07-01\") の日付を、他の日付に変えてみましょう。df_confirmed$cases と df_death$cases についてどんなことがわかりますか。発見や、問いがあれば、書き出してみましょう。","code":""},{"path":"rbasics.html","id":"tips","chapter":"7 R Basics","heading":"7.4.4 Tips","text":"キーボード・ショートカットと言われる、さまざまな機能があります。上のメニュー・バー： Help > Keyboard Short Cut Help 確認してみてください。右下の窓枠: Files タブから、ファイルの確認ができます。","code":""},{"path":"rbasics.html","id":"パッケージ---packages","chapter":"7 R Basics","heading":"7.5 パッケージ - Packages","text":"R packages extensions R statistical programming language containing code, data, documentation standardised collection format can installed users R using Tool > Install Packages top menu bar R Studio. https://en.wikipedia.org/wiki/R_packageRパッケージは、Rの拡張機能で、コード、データ、ドキュメントを標準化されたコレクション形式で含んでおり、標準的なものは、R Studio の Top Bar の Tool > Install Packages からインストールできます。","code":""},{"path":"rbasics.html","id":"パッケージのインストール","chapter":"7 R Basics","heading":"7.5.1 パッケージのインストール","text":"いずれ使いますので、まずは、三つのパッケージをインストールしてみましょう。tidyversermarkdowntinytexインストール方法はいくつかあります。一つ目は、上のメニューバーの Tool から、Install Packages … を選択します。そして、パッケージーズにインストールしたい、パッケージ名を入力します。そのパッケージ名が下にも出れば、Install ボタンを押してください。入力した名前の下にパッケージ名が出ない場合は、スペルが間違っている可能性がありますから、確認して、入れ直してください。Console に、install.packages(\"tidyverse\") などと表示され、たくさんメッセージが出ます。終了すると、> のマークがでます。二つ目は、install.packages(\"tidyverse\") のような書式で書いて、Console に入れる方法です。三つ目は、右下の窓枠の Packages のタブにある、Install というボタンを押す方法です。すると、一番目の方法に、戻り、パッケージ名を入力できるようになります。この Packages タブにある、ものが、すでに、インストールされているパッケージです。そのなかで、base や、datasets などいくつかに、チェックがついていると思いますが、それらは、ロードされていて、いつでも、使える状態になっていることを意味しています。ロードは、たとえば、library(tidyverse) のようにしますが、それは、いずれもう一度説明します。インストールは一回だけ。ときどき、Tools > Check Package Update をつかって、Update しておくと良いでしょう。パッケージのインストールで問題が生じることがあります。特に、Windows の日本語システムの場合です。（4.3.2 R Studio の インストール の下に書いてある部分を参照してください。）回避方法もいくつかあるようですが、混乱をさけるため、その場合は、Posit Cloud（旧：RStudio Cloud）を使うと良いでしょう。それを見越して、最初は、Posit Cloud ではじめることを、わたしはお薦めしています。自分のコンピュータで、R が RStudio 上で問題なく動いていても、Cloud 上にアカウントを持っていて、実行できることは有効ですし、全員が、同じ環境で作業できることもたいせつなことです。他にも、すぐ、Cheat Sheets（早見表）や、Posit Primers という練習問題（Tutorial）を利用できたり、プロジェクトを共有したりなど、さまざまなメリットがあります。","code":""},{"path":"rbasics.html","id":"備考","chapter":"7 R Basics","heading":"7.5.2 備考","text":"Package によっては、Source から Compile するかと聞いてくる場合があります。どちらでも、良いのですが、特に、問題が起こっていなければ、でよいと思います。コンピュータにあった形でインストールすることが必要な場合は、Yes とします。同じパッケージをもう一度、インストールしたり、または、関連するパッケージがあるような場合、R をリスタートするかと聞いてくることがあります。特に問題が起こらなければ、で構いません。ただ、エラーが起こって、それに関連して、特別なパッケージをインストールする必要がある場合がありますが、そのときは、Yes としてください。","code":""},{"path":"rbasics.html","id":"練習問題-posit-primers","chapter":"7 R Basics","heading":"7.6 練習問題 Posit Primers","text":"Posit Primers https://posit.cloud/learn/primers教科書 “R Data Science” は、tidyverse パッケージを中心に、データサイエンスについて解説したものですが、Posit Primers は、演習問題をしながら、教科書の内容を理解できるように構成されています。Posit Cloud からは、左のメニュー（隠れている場合は左上の3本線をクリックして表示させて）から選ぶことができます。そうでない場合は、直接、上のリンクから、利用してください。","code":""},{"path":"rbasics.html","id":"最初の演習-the-basics-r4ds-explore-i","chapter":"7 R Basics","heading":"7.6.1 最初の演習　The Basics – r4ds: Explore, I","text":"Visualization BasicsProgramming Basicsぜひこれら二つの演習問題を、トライしてください。解説を読んでいただけでは、データサイエンスは身につきません。","code":""},{"path":"rbasics.html","id":"参考文献-references","chapter":"7 R Basics","heading":"7.7 参考文献 References","text":"一番目は、すでに紹介した、教科書です。二番目は、この文書を作成している、Bookdown というパッケージのサイトですが、そこに、たくさんの本が、無償で公開されています。素晴らしい本がたくさん含まれています。R Data Science, H. Wickham: https://r4ds..co.nz\nIntroduction: https://r4ds..co.nz/explore-intro.html#explore-intro\nIntroduction: https://r4ds..co.nz/explore-intro.html#explore-introBookdown: https://bookdown.org, Archive下の一番目は、R 入門を、２時限の講義でしたときのものです。二番目と三番目は、講義で使ったものを、まとめたものです。教科書のようには、できていませんが、参考になる部分もあるかと思いますので、紹介しておきます。Introducton RData Analysis Researchers 2022Data Analysis Researchers 2021","code":""},{"path":"rbasics.html","id":"youtube-video---getstarted","chapter":"7 R Basics","heading":"7.8 YouTube Video - getstarted","text":"ファイル：https://ds-sl.github.io/intro2r/getstarted.html","code":""},{"path":"worldbank.html","id":"worldbank","chapter":"8 World Bank","heading":"8 World Bank","text":"","code":""},{"path":"worldbank.html","id":"world-development-indicator-wdi","chapter":"8 World Bank","heading":"8.1 World Development Indicator (WDI)","text":"パッケージ と tidyverse と WDI を使いますから、下のコードによって、ロードします。まず、三つの例を見てみましょう。なにをしているかわかりますか。考えて見てください。まず、世界の国々の、GDP（gross domestic product 国内総生産）のデータを、取得して、2021年の GDP を大きな順に並べています。値は、たとえば、\\(2.331508e+13\\) のように書かれていますが、これは、科学的記法と呼ばれるもので、\\(2.331508 \\times 10^{13}\\) を意味しています。約23兆ドルです。次に、3兆ドル以上の、６カ国を選択し、その、iso2c と呼ばれるコードを使って、それらの国のデータをもう一度取得し、年次変化をあらわすグラフを描いています。さらにその中から、４カ国を選んで、今度は、GDP の年次変化率を描いています。単位は、パーセントです。これは、ひとつの例ですが、ここで使われているのが、WDI World Development Indicator というもので、世界銀行が、いくつかの指標を定めて、編纂しているものです。","code":"\nlibrary(tidyverse)\n#> ── Attaching core tidyverse packages ──── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nlibrary(WDI)\nWDI(country = \"all\", indicator = c(gdp = \"NY.GDP.MKTP.CD\"),\n    extra=TRUE) %>% drop_na(gdp) %>%\n  filter(year==max(year), income !=\"Aggregates\") %>% \n  drop_na(region) %>% arrange(desc(gdp))#> Rows: 16492 Columns: 13\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (4): year, gdp, longitude, latitude\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 196 × 13\n#>    country      iso2c iso3c  year     gdp status lastupdated\n#>    <chr>        <chr> <chr> <dbl>   <dbl> <lgl>  <date>     \n#>  1 United Stat… US    USA    2021 2.33e13 NA     2022-12-22 \n#>  2 China        CN    CHN    2021 1.77e13 NA     2022-12-22 \n#>  3 Japan        JP    JPN    2021 4.94e12 NA     2022-12-22 \n#>  4 Germany      DE    DEU    2021 4.26e12 NA     2022-12-22 \n#>  5 India        IN    IND    2021 3.18e12 NA     2022-12-22 \n#>  6 United King… GB    GBR    2021 3.13e12 NA     2022-12-22 \n#>  7 France       FR    FRA    2021 2.96e12 NA     2022-12-22 \n#>  8 Italy        IT    ITA    2021 2.11e12 NA     2022-12-22 \n#>  9 Canada       CA    CAN    2021 1.99e12 NA     2022-12-22 \n#> 10 Korea, Rep.  KR    KOR    2021 1.81e12 NA     2022-12-22 \n#> # ℹ 186 more rows\n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>\nWDI(country = c(\"CN\",\"GB\",\"JP\",\"IN\",\"US\",\"DE\"), indicator = c(gdp = \"NY.GDP.MKTP.CD\"), extra=TRUE) %>% drop_na(gdp) %>% \n  ggplot(aes(year, gdp, col = country)) + geom_line() +\n  labs(title = \"WDI NY.GDP.MKTP.CD: gdp\")#> Rows: 372 Columns: 13\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (4): year, gdp, longitude, latitude\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nWDI(country = c(\"CN\",\"IN\",\"JP\",\"US\"), \n    indicator = c(gdp_growth_rate = \"NY.GDP.MKTP.KD.ZG\"), extra=TRUE) %>%\n  drop_na(gdp_growth_rate) %>% \n  ggplot(aes(year, gdp_growth_rate, col = country)) + geom_line() +\n  labs(title = paste(\"WDI NY.GDP.MKTP.KD.ZG: gdp growth rate\"))#> Rows: 248 Columns: 13\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (4): year, gdp_growth_rate, longitude, latitude\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":"worldbank.html","id":"指標-indicators-wdi","chapter":"8 World Bank","heading":"8.1.1 指標 Indicators (WDI)","text":"上の例では、次の二つの指標のコード Indicator Code (WDI Code) が使われました。NY.GDP.MKTP.CD: GDP (current US$)NY.GDP.MKTP.KD.ZG: GDP growth (annual %)","code":""},{"path":"worldbank.html","id":"指標-wdi-world-development-indicators","chapter":"8 World Bank","heading":"8.1.2 指標 WDI (World Development Indicators)","text":"World Development Indicators compilation relevant, high-quality, internationally comparable statistics global development fight poverty. database contains 1,400 time series indicators 217 economies 40 country groups, data many indicators going back 50 years.WDIは、世界の開発状況と、貧困との戦いに関する、適切で上質、かつ、国際的に比較可能な時系列の統計データを編纂したものです。このデータベースは、217の経済と40以上の国グループについて1,400の時系列指標を含み、指標のデータの多くは50年以上前に遡ることができます。世界銀行（World Bank）: https://www.worldbank.orgWorld Bank Open Data: https://data.worldbank.org\nCountry / Indicator > Featured & > Details\nCountry / Indicator > Featured & > DetailsWorld Development Indicators (WDI) :\nThemes: Poverty Inequality, People, Environment, Economy, States Markets, Global Links\nOpen Data & DataBank: Explore data, Query database\nThemes: Poverty Inequality, People, Environment, Economy, States Markets, Global LinksOpen Data & DataBank: Explore data, Query database","code":""},{"path":"worldbank.html","id":"指標-のコードwdi-code-を探してみよう","chapter":"8 World Bank","heading":"8.1.3 指標 のコード、WDI code を探してみよう","text":"いくつかの探し方があります。まず、ここでは、World Bank のサイトから探す方法を説明しましょう。ふた通りあります。World Bank Open Data にいくと、表題の下の検索窓の下に、 Country / Indicator とありますから、Indicator を選択します。すると、そこに、項目のリストが、Featured と という二つのタブに分かれて出ています。かなり膨大です。それを選択すると、その項目のサイトに行きます。それが、指標のサイトです。図などの、右上に、Details とありますから、それを選択すると、その中に、Indicator が書かれています。\n実は、指標のサイトのアドレス（URL）を見ると、そこにも、この Indicator が書かれていることがわかります。World Bank Open Data にいくと、表題の下の検索窓の下に、 Country / Indicator とありますから、Indicator を選択します。すると、そこに、項目のリストが、Featured と という二つのタブに分かれて出ています。かなり膨大です。それを選択すると、その項目のサイトに行きます。それが、指標のサイトです。図などの、右上に、Details とありますから、それを選択すると、その中に、Indicator が書かれています。\n実は、指標のサイトのアドレス（URL）を見ると、そこにも、この Indicator が書かれていることがわかります。World Development Indicators (WDI) にいくと、下のようなテーマに分かれています。World Development Indicators (WDI) にいくと、下のようなテーマに分かれています。Themes: Poverty Inequality, People, Environment, Economy, States Markets, Global Linksその中から、選択して、スクロールすると、そこに、指標が書かれています。Indicator, Code, Time coverage, Region coverage, Get dataとあり、Code が、指標のコードです。実は、すべての年や、すべての地域のデータが揃っているわけではないので、この情報を見ておくことはとても重要です。ほとんど、データがない場合もあります。一番右端の Get data からは、CSV や、データバンク（Data Bank）へのリンクがあります。それぞれの方法で、上で使った、二つの指標およびそのコードは見つかりましたか。1 の方法の途中に出てきた、検索窓から検索することも可能です。","code":""},{"path":"worldbank.html","id":"指標-wdiの例","chapter":"8 World Bank","heading":"8.1.4 指標 WDIの例","text":"このあとの、例で使う指標を書いておきます。NY.GDP.MKTP.CD: GDP (current US$)NY.GDP.DEFL.KD.ZG: Inflation, GDP deflator (annual %)SL.UEM.TOTL.NE.ZS: Unemployment, total (% total labor force) (national estimate)CPTOTNSXN: CPI Price, nominalSL.TLF.CACT.MA.NE.ZS: Labor force participation rate, male (% male population ages 15+) (national estimate)SL.TLF.CACT.FE.NE.ZS: Labor force participation rate, female (% male population ages 15+) (national estimate)","code":""},{"path":"worldbank.html","id":"練習-1.---調べてみたい-wdi-指標とそのコード","chapter":"8 World Bank","heading":"8.1.5 練習 1. - 調べてみたい WDI 指標とそのコード","text":"いくつか、リストしてみましょう。","code":""},{"path":"worldbank.html","id":"wdi-パッケージ","chapter":"8 World Bank","heading":"8.2 WDI パッケージ","text":"WDI パッケージ の使い方を紹介します。WDI パッケージで、データをダウンロードしたり、探したり、詳細情報を得たりできます。","code":""},{"path":"worldbank.html","id":"指標-wdi-検索","chapter":"8 World Bank","heading":"8.2.1 指標 WDI 検索","text":"まず、検索です。上で、サイトから調べる方法を紹介しましたが、WDI パッケージの、WDIsearch でも探すことができます。詳細は、右下の窓枠の Help タブの検索窓に、WDIsearch といれて調べて見てください。ここでは、二種類の検索方法を紹介します。","code":""},{"path":"worldbank.html","id":"検索例-1wdi名","chapter":"8 World Bank","heading":"8.2.1.1 検索例 1（WDI名）","text":"WDI 名に、ある文字列が含まれているものを検索します。検索文字列は、大文字・小文字は関係ありません。なんと、500件以上出てきました。Indicator（指標コード）と、Name（指標名）が列挙されます。すべてに、GDP という文字列が入っていることを確認できると思います。","code":"\nWDIsearch(string = \"gdp\", field = \"name\", short = TRUE, cache = NULL) %>%\n  as_tibble()\n#> # A tibble: 540 × 2\n#>    indicator            name                                \n#>    <chr>                <chr>                               \n#>  1 5.51.01.10.gdp       \"Per capita GDP growth\"             \n#>  2 6.0.GDP_current      \"GDP (current $)\"                   \n#>  3 6.0.GDP_growth       \"GDP growth (annual %)\"             \n#>  4 6.0.GDP_usd          \"GDP (constant 2005 $)\"             \n#>  5 6.0.GDPpc_constant   \"GDP per capita, PPP (constant 2011…\n#>  6 BG.GSR.NFSV.GD.ZS    \"Trade in services (% of GDP)\"      \n#>  7 BG.KAC.FNEI.GD.PP.ZS \"Gross private capital flows (% of …\n#>  8 BG.KAC.FNEI.GD.ZS    \"Gross private capital flows (% of …\n#>  9 BG.KLT.DINV.GD.PP.ZS \"Gross foreign direct investment (%…\n#> 10 BG.KLT.DINV.GD.ZS    \"Gross foreign direct investment (%…\n#> # ℹ 530 more rows"},{"path":"worldbank.html","id":"検索例-2wdi","chapter":"8 World Bank","heading":"8.2.1.2 検索例 2（WDI）","text":"Indicator（指標コード）から、Name（指標名）を検索します。二件出てきました。","code":"\nWDIsearch(string = \"NY.GDP.MKTP.CD\", field = \"indicator\", short = TRUE, cache = NULL)\n#>               indicator\n#> 11410    NY.GDP.MKTP.CD\n#> 11411 NY.GDP.MKTP.CD.XD\n#>                                             name\n#> 11410                          GDP (current US$)\n#> 11411 GDP deflator, index (2000=100; US$ series)"},{"path":"worldbank.html","id":"練習-2.---検索short","chapter":"8 World Bank","heading":"8.2.1.3 練習 2. - 検索（short）","text":"名前で検索（“” の間に、（なるべく簡単な）検索文字列を入れてください。）Indicator で検索（“” の間に、調べたい indicator を入れてください。）","code":"\nWDIsearch(string = \"\", field = \"name\", short = TRUE, cache = NULL)\nWDIsearch(string = \"\", field = \"indicator\", short = TRUE, cache = NULL)"},{"path":"worldbank.html","id":"詳しい情報を得るには","chapter":"8 World Bank","heading":"8.2.1.4 詳しい情報を得るには","text":"上では、Indicator（指標コード）と、Name（指標名）だけでしたが、Description（説明） なども得ることができます。それには、short = FALSE とします。一回一回、World Bank にアクセスして調べるのは、時間もかかりますから、Indicator と、名前などの情報をもったファイルを手元に持っておくことにします。それには、次のようにします。これは、series と、country の二つのデータ・フレームからなっているリストです。右上の窓枠（pane）から、wdi_cache を探して、中身を見てみましょう。三角印や、右から二番目の巻物のようなアイコンをクリックすると中身が見えます。series には、すべての指標がリストされ、その情報が書かれています。また、country には、それぞれについて、さまざまな情報が書かれています。これは、とても、たいせつな情報です。国名と、iso2c, iso3c のようなコードもありますし、地域（region）や、その国が、どの income level（収入の階級）に入るかも書かれています。また、国だけではなく、地域など、グループの名称も含まれています。今後、さまざまに利用していきたいと思います。","code":"\nwdi_cache <- WDIcache()"},{"path":"worldbank.html","id":"検索例-3wdi名","chapter":"8 World Bank","heading":"8.2.1.5 検索例 3（WDI名）","text":"short = FALSE として、検索してみましょう。文字列が入っている、指標名を検索します。CPTOTNSXN: CPI Price, nominal\nconsumer price index reflects change prices average consumer constant basket consumer goods. Data seasonally adjusted.\nconsumer price index reflects change prices average consumer constant basket consumer goods. Data seasonally adjusted.","code":"\nWDIsearch(string = \"CPI Price\", field = \"name\", short = FALSE, cache = wdi_cache)\n#>         indicator\n#> 2586    CPTOTNSXN\n#> 2587 CPTOTSAXMZGY\n#> 2588    CPTOTSAXN\n#> 2589 CPTOTSAXNZGY\n#>                                                 name\n#> 2586                              CPI Price, nominal\n#> 2587 CPI Price, % y-o-y, median weighted, seas. adj.\n#> 2588                  CPI Price, nominal, seas. adj.\n#> 2589         CPI Price, % y-o-y, nominal, seas. adj.\n#>                                                                                                                                                                                                                  description\n#> 2586                                                                The consumer price index reflects the change in prices for the average consumer of a constant basket of consumer goods. Data is not seasonally adjusted.\n#> 2587                                                                Median inflation rate calculated for geographical aggregates (regions, world, etc) of the annual percent change of the CPI. Data is seasonally adjusted.\n#> 2588                                               The consumer price index reflects the change in prices for the average consumer of a constant basket of consumer goods. Data is in nominal terms and seasonally adjusted.\n#> 2589 The consumer price index reflects the change in prices for the average consumer of a constant basket of consumer goods. Data is in nominal percentage terms, measured on a year-on-year basis, and seasonally adjusted.\n#>               sourceDatabase\n#> 2586 Global Economic Monitor\n#> 2587 Global Economic Monitor\n#> 2588 Global Economic Monitor\n#> 2589 Global Economic Monitor\n#>                                           sourceOrganization\n#> 2586 World Bank staff calculations based on Datastream data.\n#> 2587 World Bank staff calculations based on Datastream data.\n#> 2588 World Bank staff calculations based on Datastream data.\n#> 2589 World Bank staff calculations based on Datastream data."},{"path":"worldbank.html","id":"検索例-4wdi","chapter":"8 World Bank","heading":"8.2.1.6 検索例 4（WDI）","text":"指標コードから、詳細情報を得ます。","code":"\nWDIsearch(string = \"NY.GDP.MKTP.KD.ZG\", field = \"indicator\", short = FALSE, cache = wdi_cache)\n#>               indicator                  name\n#> 12114 NY.GDP.MKTP.KD.ZG GDP growth (annual %)\n#>                                                                                                                                                                                                                                                                                                                                                                                                                                                                           description\n#> 12114 Annual percentage growth rate of GDP at market prices based on constant local currency. Aggregates are based on constant 2015 prices, expressed in U.S. dollars. GDP is the sum of gross value added by all resident producers in the economy plus any product taxes and minus any subsidies not included in the value of the products. It is calculated without making deductions for depreciation of fabricated assets or for depletion and degradation of natural resources.\n#>                     sourceDatabase\n#> 12114 World Development Indicators\n#>                                                              sourceOrganization\n#> 12114 World Bank national accounts data, and OECD National Accounts data files."},{"path":"worldbank.html","id":"練習-2---検索long-w-cache","chapter":"8 World Bank","heading":"8.2.1.7 練習 2 - 検索（long w/ cache）","text":"string と、field を、ふたつとも入れてください。","code":"\nWDIsearch(string = \"\", field = \"\", short = FALSE, cache = wdi_cache)"},{"path":"worldbank.html","id":"指標-wdi-データのダウンロード","chapter":"8 World Bank","heading":"8.2.2 指標 WDI データのダウンロード","text":"Indicator が決まったら、ダウンロードします。右下の窓枠の Help タブの検索枠に、WDI と入れて確認しましょう。上が基本的な用法ですが、start 以下は、Default（初期値）が書かれていますから、たいせつなのは、最初の二つ、country と、indicator です。","code":"WDI(\n  country = \"all\",\n  indicator = \"NY.GDP.PCAP.KD\",\n  start = 1960,\n  end = NULL,\n  extra = FALSE,\n  cache = NULL,\n  latest = NULL,\n  language = \"en\"\n)"},{"path":"worldbank.html","id":"ダウンロード例-1-1","chapter":"8 World Bank","heading":"8.2.2.1 ダウンロード例 1-1","text":"country は、初期値も、“” となっていますから、最も簡単なのは、indicator に、指標コードを入れることです。引用符を忘れずに。これでも良いのですが、利用するには、指標コードではわかりにくいので、それを簡単な名前に置き換えて、データを読み込むこができます。","code":"\ndf_gdp1 <- WDI(country = \"all\", indicator = \"NY.GDP.MKTP.CD\")\ndf_gdp1#> Rows: 16492 Columns: 5\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (3): country, iso2c, iso3c\n#> dbl (2): year, NY.GDP.MKTP.CD\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 16,492 × 5\n#>    country                  iso2c iso3c  year NY.GDP.MKTP.CD\n#>    <chr>                    <chr> <chr> <dbl>          <dbl>\n#>  1 Africa Eastern and Sout… ZH    AFE    2021        1.08e12\n#>  2 Africa Eastern and Sout… ZH    AFE    2020        9.27e11\n#>  3 Africa Eastern and Sout… ZH    AFE    2019        1.00e12\n#>  4 Africa Eastern and Sout… ZH    AFE    2018        1.01e12\n#>  5 Africa Eastern and Sout… ZH    AFE    2017        1.02e12\n#>  6 Africa Eastern and Sout… ZH    AFE    2016        8.83e11\n#>  7 Africa Eastern and Sout… ZH    AFE    2015        9.25e11\n#>  8 Africa Eastern and Sout… ZH    AFE    2014        1.00e12\n#>  9 Africa Eastern and Sout… ZH    AFE    2013        9.83e11\n#> 10 Africa Eastern and Sout… ZH    AFE    2012        9.73e11\n#> # ℹ 16,482 more rows"},{"path":"worldbank.html","id":"ダウンロード例-1-2","chapter":"8 World Bank","heading":"8.2.2.2 ダウンロード例 1-2","text":"","code":"\ndf_gdp2 <- WDI(country = \"all\", indicator = c(gdp = \"NY.GDP.MKTP.CD\"))\ndf_gdp2#> Rows: 16492 Columns: 5\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (3): country, iso2c, iso3c\n#> dbl (2): year, gdp\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 16,492 × 5\n#>    country                     iso2c iso3c  year     gdp\n#>    <chr>                       <chr> <chr> <dbl>   <dbl>\n#>  1 Africa Eastern and Southern ZH    AFE    2021 1.08e12\n#>  2 Africa Eastern and Southern ZH    AFE    2020 9.27e11\n#>  3 Africa Eastern and Southern ZH    AFE    2019 1.00e12\n#>  4 Africa Eastern and Southern ZH    AFE    2018 1.01e12\n#>  5 Africa Eastern and Southern ZH    AFE    2017 1.02e12\n#>  6 Africa Eastern and Southern ZH    AFE    2016 8.83e11\n#>  7 Africa Eastern and Southern ZH    AFE    2015 9.25e11\n#>  8 Africa Eastern and Southern ZH    AFE    2014 1.00e12\n#>  9 Africa Eastern and Southern ZH    AFE    2013 9.83e11\n#> 10 Africa Eastern and Southern ZH    AFE    2012 9.73e11\n#> # ℹ 16,482 more rows"},{"path":"worldbank.html","id":"ダウンロード例-1-3","chapter":"8 World Bank","heading":"8.2.2.3 ダウンロード例 1-3","text":"今度は、extra = TRUE として、読み込みましょう。先ほど、読み込んである、wdi_cache を使います。右上の三角印を使って、どのような詳細情報が付加されたか見て見ましょう。どんなことがわかりますか。","code":"\ndf_gdp3 <- WDI(country = \"all\", indicator = c(gdp = \"NY.GDP.MKTP.CD\"), \n               extra=TRUE, cache=wdi_cache)\ndf_gdp3#> Rows: 16492 Columns: 13\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (4): year, gdp, longitude, latitude\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 16,492 × 13\n#>    country     iso2c iso3c  year      gdp status lastupdated\n#>    <chr>       <chr> <chr> <dbl>    <dbl> <lgl>  <date>     \n#>  1 Afghanistan AF    AFG    2021  1.48e10 NA     2022-12-22 \n#>  2 Afghanistan AF    AFG    2020  2.01e10 NA     2022-12-22 \n#>  3 Afghanistan AF    AFG    2019  1.89e10 NA     2022-12-22 \n#>  4 Afghanistan AF    AFG    2018  1.84e10 NA     2022-12-22 \n#>  5 Afghanistan AF    AFG    2017  1.89e10 NA     2022-12-22 \n#>  6 Afghanistan AF    AFG    2016  1.80e10 NA     2022-12-22 \n#>  7 Afghanistan AF    AFG    2015  2.00e10 NA     2022-12-22 \n#>  8 Afghanistan AF    AFG    2014  2.06e10 NA     2022-12-22 \n#>  9 Afghanistan AF    AFG    2013  2.06e10 NA     2022-12-22 \n#> 10 Afghanistan AF    AFG    2012  2.02e10 NA     2022-12-22 \n#> # ℹ 16,482 more rows\n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>"},{"path":"worldbank.html","id":"ダウンロード例-1-4","chapter":"8 World Bank","heading":"8.2.2.4 ダウンロード例 1-4","text":"国名を指定します。WDI では、iso2c コードを使って、国名を指定します。上で見たように、Envoronment から、wdi_cache を選択すると、国名と、iso2c コード両方を見ることができました。iso2c や、iso3c は、よく使われるので、web 検索でも簡単にみつけることができます。最初に紹介した例ですから、どの国かはわかりますね、","code":"\ndf_gdp4 <- WDI(country = c(\"CN\",\"GB\",\"JP\",\"IN\",\"US\",\"DE\"), \n               indicator = c(gdp = \"NY.GDP.MKTP.CD\"), extra=TRUE, cache=wdi_cache)\ndf_gdp4#> Rows: 372 Columns: 13\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (4): year, gdp, longitude, latitude\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 372 × 13\n#>    country iso2c iso3c  year     gdp status lastupdated\n#>    <chr>   <chr> <chr> <dbl>   <dbl> <lgl>  <date>     \n#>  1 China   CN    CHN    2021 1.77e13 NA     2022-12-22 \n#>  2 China   CN    CHN    2020 1.47e13 NA     2022-12-22 \n#>  3 China   CN    CHN    2019 1.43e13 NA     2022-12-22 \n#>  4 China   CN    CHN    2018 1.39e13 NA     2022-12-22 \n#>  5 China   CN    CHN    2017 1.23e13 NA     2022-12-22 \n#>  6 China   CN    CHN    2016 1.12e13 NA     2022-12-22 \n#>  7 China   CN    CHN    2015 1.11e13 NA     2022-12-22 \n#>  8 China   CN    CHN    2014 1.05e13 NA     2022-12-22 \n#>  9 China   CN    CHN    2013 9.57e12 NA     2022-12-22 \n#> 10 China   CN    CHN    2012 8.53e12 NA     2022-12-22 \n#> # ℹ 362 more rows\n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>"},{"path":"worldbank.html","id":"ダウンロード例-2-1","chapter":"8 World Bank","heading":"8.2.2.5 ダウンロード例 2-1","text":"二つの、指標コードを使って、同時に読み込むこともできます。そのときは、c() (combine) を使います。NY.GDP.DEFL.KD.ZG: Inflation, GDP deflator (annual %)CPTOTNSXN: CPI Price, nominalNA (available) つまり、データがないものが多いことがわかります。もう少し、データをよく見て見ましょう。どんなことが分かりましたか。右上の窓枠の、Environment でも df_gdp21 を見てみましょう。","code":"\ndf_gdp21 <- WDI(country = \"all\", \n                indicator = c(gdp_deflator = \"NY.GDP.DEFL.KD.ZG\", \n                              cpi_price = \"CPTOTNSXN\"), \n                extra=TRUE, cache=wdi_cache)\ndf_gdp21#> Rows: 23972 Columns: 14\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (5): year, gdp_deflator, cpi_price, longitude, lati...\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 23,972 × 14\n#>    country iso2c iso3c  year status lastupdated gdp_deflator\n#>    <chr>   <chr> <chr> <dbl> <lgl>  <date>             <dbl>\n#>  1 Advanc… AME   <NA>   1987 NA     2020-07-27            NA\n#>  2 Advanc… AME   <NA>   1988 NA     2020-07-27            NA\n#>  3 Advanc… AME   <NA>   1989 NA     2020-07-27            NA\n#>  4 Advanc… AME   <NA>   1990 NA     2020-07-27            NA\n#>  5 Advanc… AME   <NA>   1991 NA     2020-07-27            NA\n#>  6 Advanc… AME   <NA>   1992 NA     2020-07-27            NA\n#>  7 Advanc… AME   <NA>   1993 NA     2020-07-27            NA\n#>  8 Advanc… AME   <NA>   1994 NA     2020-07-27            NA\n#>  9 Advanc… AME   <NA>   1995 NA     2020-07-27            NA\n#> 10 Advanc… AME   <NA>   1996 NA     2020-07-27            NA\n#> # ℹ 23,962 more rows\n#> # ℹ 7 more variables: cpi_price <dbl>, region <chr>,\n#> #   capital <chr>, longitude <dbl>, latitude <dbl>,\n#> #   income <chr>, lending <chr>\nstr(df_gdp21)\n#> spc_tbl_ [23,972 × 14] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n#>  $ country     : chr [1:23972] \"Advanced Economies\" \"Advanced Economies\" \"Advanced Economies\" \"Advanced Economies\" ...\n#>  $ iso2c       : chr [1:23972] \"AME\" \"AME\" \"AME\" \"AME\" ...\n#>  $ iso3c       : chr [1:23972] NA NA NA NA ...\n#>  $ year        : num [1:23972] 1987 1988 1989 1990 1991 ...\n#>  $ status      : logi [1:23972] NA NA NA NA NA NA ...\n#>  $ lastupdated : Date[1:23972], format: \"2020-07-27\" ...\n#>  $ gdp_deflator: num [1:23972] NA NA NA NA NA NA NA NA NA NA ...\n#>  $ cpi_price   : num [1:23972] 58.7 60.5 63 66 69.1 ...\n#>  $ region      : chr [1:23972] NA NA NA NA ...\n#>  $ capital     : chr [1:23972] NA NA NA NA ...\n#>  $ longitude   : num [1:23972] NA NA NA NA NA NA NA NA NA NA ...\n#>  $ latitude    : num [1:23972] NA NA NA NA NA NA NA NA NA NA ...\n#>  $ income      : chr [1:23972] NA NA NA NA ...\n#>  $ lending     : chr [1:23972] NA NA NA NA ...\n#>  - attr(*, \"spec\")=\n#>   .. cols(\n#>   ..   country = col_character(),\n#>   ..   iso2c = col_character(),\n#>   ..   iso3c = col_character(),\n#>   ..   year = col_double(),\n#>   ..   status = col_logical(),\n#>   ..   lastupdated = col_date(format = \"\"),\n#>   ..   gdp_deflator = col_double(),\n#>   ..   cpi_price = col_double(),\n#>   ..   region = col_character(),\n#>   ..   capital = col_character(),\n#>   ..   longitude = col_double(),\n#>   ..   latitude = col_double(),\n#>   ..   income = col_character(),\n#>   ..   lending = col_character()\n#>   .. )\n#>  - attr(*, \"problems\")=<externalptr>\nsummary(df_gdp21)\n#>    country             iso2c              iso3c          \n#>  Length:23972       Length:23972       Length:23972      \n#>  Class :character   Class :character   Class :character  \n#>  Mode  :character   Mode  :character   Mode  :character  \n#>                                                          \n#>                                                          \n#>                                                          \n#>                                                          \n#>       year       status         lastupdated        \n#>  Min.   :1960   Mode:logical   Min.   :2020-07-27  \n#>  1st Qu.:1982   NA's:23972     1st Qu.:2020-07-27  \n#>  Median :1996                  Median :2022-12-22  \n#>  Mean   :1995                  Mean   :2022-03-23  \n#>  3rd Qu.:2009                  3rd Qu.:2022-12-22  \n#>  Max.   :2021                  Max.   :2022-12-22  \n#>                                                    \n#>   gdp_deflator         cpi_price         region         \n#>  Min.   :  -98.704   Min.   :  0.00   Length:23972      \n#>  1st Qu.:    2.317   1st Qu.: 55.95   Class :character  \n#>  Median :    5.273   Median : 83.28   Mode  :character  \n#>  Mean   :   25.308   Mean   : 84.18                     \n#>  3rd Qu.:   10.411   3rd Qu.:108.75                     \n#>  Max.   :26765.858   Max.   :551.25                     \n#>  NA's   :11616       NA's   :18410                      \n#>    capital            longitude          latitude      \n#>  Length:23972       Min.   :-175.22   Min.   :-41.286  \n#>  Class :character   1st Qu.: -15.18   1st Qu.:  4.174  \n#>  Mode  :character   Median :  19.26   Median : 17.300  \n#>                     Mean   :  19.14   Mean   : 18.889  \n#>                     3rd Qu.:  50.53   3rd Qu.: 40.050  \n#>                     Max.   : 179.09   Max.   : 64.184  \n#>                     NA's   :10890     NA's   :10890    \n#>     income            lending         \n#>  Length:23972       Length:23972      \n#>  Class :character   Class :character  \n#>  Mode  :character   Mode  :character  \n#>                                       \n#>                                       \n#>                                       \n#> "},{"path":"worldbank.html","id":"可視化-visualization","chapter":"8 World Bank","heading":"8.3 可視化 Visualization","text":"グラフ（Chart）を描いて視覚化します。ここでは、年ごとの変化をみる、折れ線グラフだけを描いて見ます。","code":""},{"path":"worldbank.html","id":"グラフ-1","chapter":"8 World Bank","heading":"8.3.1 グラフ 1","text":"x = year, y = gdp の、x=, y= は省略してあります。col=country は、国ごとに、グループにして、色分けをします。col は、color としても colour としても、問題ありません。\n`Warning として、missing values があると出ています。どこかは、分かりませんが、図を書くときですから、y に対応する、gdp の値がないものと思われます。","code":"\ndf_gdp4 %>% ggplot(aes(year, gdp, col=country)) + geom_line()\n#> Warning: Removed 10 rows containing missing values\n#> (`geom_line()`)."},{"path":"worldbank.html","id":"グラフ-2","chapter":"8 World Bank","heading":"8.3.2 グラフ 2","text":"drop_na(gdp) で、gdp の値が、NA であるものを削除します。また、labs で、図にタイトルをつけます。","code":"\ndf_gdp4 %>% drop_na(gdp) %>% \n  ggplot(aes(year, gdp, col=country)) + geom_line() +\n  labs(title = \"WDI - NY.GDP.MKTP.CD: gdp\")"},{"path":"worldbank.html","id":"テンプレート-templates","chapter":"8 World Bank","heading":"8.3.3 テンプレート Templates","text":"下に、テンプレートをつけます。コピーして、指標コードや、略称、国などを、それぞれ置き換えて、試して見てください。少し、複雑な変形をしていますが、少しずつ説明します。","code":""},{"path":"worldbank.html","id":"一つの国についての一つの指標wdiとその略称から折線グラフを作成","chapter":"8 World Bank","heading":"8.3.3.1 一つの国についての、一つの指標（WDI）と、その略称から、折線グラフを作成","text":"Line Plot one indicator abbreviation one country","code":"\nchosen_indicator <- \"SL.UEM.TOTL.NE.ZS\"\nshort_name <- \"unemployment\"\nchosen_country <- \"United States\"\nWDI(country = \"all\", indicator = c(short_name = chosen_indicator), extra=TRUE, cache=wdi_cache) %>%\n  filter(country == chosen_country) %>% \n  ggplot(aes(year, short_name)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator, \": \", short_name, \" - \", chosen_country),\n       y = short_name)"},{"path":"worldbank.html","id":"一つの国についての一つの指標wdiから折線グラフを作成","chapter":"8 World Bank","heading":"8.3.3.2 一つの国についての、一つの指標（WDI）から、折線グラフを作成","text":"Line Plot one indicator one country","code":"\nchosen_indicator <- \"SL.UEM.TOTL.NE.ZS\"\nchosen_country <- \"United States\"\nWDI(country = \"all\", indicator = c(chosen_indicator = chosen_indicator), \n    extra=TRUE, cache=wdi_cache) %>%\n  filter(country == chosen_country) %>% \n  ggplot(aes(year, chosen_indicator)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator, \" - \", chosen_country), \n       y = chosen_indicator)"},{"path":"worldbank.html","id":"いくつかの国についての一つの指標wdiとその略称から折線グラフを作成","chapter":"8 World Bank","heading":"8.3.3.3 いくつかの国についての、一つの指標（WDI）と、その略称から、折線グラフを作成","text":"Line Plot one indicator abbreviation several countries","code":"\nchosen_indicator <- \"SL.UEM.TOTL.NE.ZS\"\nshort_name <- \"unemployment\"\nchosen_countries <- c(\"United States\",\"United Kingdom\", \"Japan\")\nWDI(country = \"all\", indicator = c(short_name = chosen_indicator), extra=TRUE, cache=wdi_cache) %>% drop_na(short_name) %>% \n  filter(country %in% chosen_countries) %>% \n  ggplot(aes(year, short_name, col = country)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator, \": \", short_name), y = short_name)"},{"path":"worldbank.html","id":"一つの国についての二つの指標wdiとその略称から折線グラフを作成","chapter":"8 World Bank","heading":"8.3.3.4 一つの国についての、二つの指標（WDI）と、その略称から、折線グラフを作成","text":"Line Plot two indicators abbreviation one country","code":"\nchosen_indicator_1 <- \"NY.GDP.DEFL.KD.ZG\"\nshort_name_1 <- \"gdp_deflator\"\nchosen_indicator_2 <- \"CPTOTSAXNZGY\"\nshort_name_2 <- \"cpi_price\"\nchosen_country <- \"United States\"\nWDI(country = \"all\", indicator = c(short_name_1 = chosen_indicator_1, short_name_2 = chosen_indicator_2), extra=TRUE, cache=wdi_cache) %>% \n  filter(country == chosen_country) %>% \n  pivot_longer(c(short_name_1, short_name_2), names_to = \"class\", values_to = \"value\") %>% drop_na(value) %>%\n  ggplot(aes(year, value, col = class)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator_1, \": \", short_name_1, \"\\n\", chosen_indicator_2, \": \", short_name_2, \" - \", chosen_country)) +\n  scale_color_manual(labels = c(short_name_1, short_name_2), values = scales::hue_pal()(2))\nchosen_indicator_1 <- \"SL.TLF.CACT.MA.NE.ZS\"\nshort_name_1 <- \"male\"\nchosen_indicator_2 <- \"SL.TLF.CACT.FE.NE.ZS\"\nshort_name_2 <- \"female\"\nchosen_country <- \"United States\"\nWDI(country = \"all\", indicator = c(short_name_1 = chosen_indicator_1, short_name_2 = chosen_indicator_2), extra=TRUE, cache=wdi_cache) %>% \n  filter(country == chosen_country) %>% \n  pivot_longer(c(short_name_1, short_name_2), names_to = \"class\", values_to = \"value\") %>% drop_na(value) %>%\n  ggplot(aes(year, value, col = class)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator_1, \": \", short_name_1, \"\\n\", chosen_indicator_2, \": \", short_name_2, \" - \", chosen_country)) +\n  scale_color_manual(labels = c(short_name_1, short_name_2), values = scales::hue_pal()(2))"},{"path":"worldbank.html","id":"いくつかの国についての二つの指標wdiとその略称から折線グラフを作成","chapter":"8 World Bank","heading":"8.3.3.5 いくつかの国についての、二つの指標（WDI）と、その略称から、折線グラフを作成","text":"Line Plot two indicators abbreviation several countries","code":"\nchosen_indicator_1 <- \"NY.GDP.DEFL.KD.ZG\"\nshort_name_1 <- \"gdp_deflator\"\nchosen_indicator_2 <- \"CPTOTSAXNZGY\"\nshort_name_2 <- \"cpi_price\"\nchosen_countries <- c(\"United States\", \"France\", \"Japan\")\nWDI(country = \"all\", indicator = c(short_name_1 = chosen_indicator_1, short_name_2 = chosen_indicator_2), extra=TRUE, cache=wdi_cache) %>% \n  filter(country %in% chosen_countries) %>% \n  pivot_longer(c(short_name_1, short_name_2), names_to = \"class\", values_to = \"value\") %>% drop_na(value) %>%\n  ggplot(aes(year, value, linetype = class, col = country)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator_1, \": \", short_name_1, \"\\n\", chosen_indicator_2, \": \", short_name_2)) +\n  scale_linetype_manual(labels = c(short_name_1, short_name_2), values = c(\"solid\", \"dashed\"))\nchosen_indicator_1 <- \"SL.TLF.CACT.MA.NE.ZS\"\nshort_name_1 <- \"male\"\nchosen_indicator_2 <- \"SL.TLF.CACT.FE.NE.ZS\"\nshort_name_2 <- \"female\"\nchosen_countries <- c(\"United States\", \"France\", \"Japan\")\nWDI(country = \"all\", indicator = c(short_name_1 = chosen_indicator_1, short_name_2 = chosen_indicator_2), extra=TRUE, cache=wdi_cache) %>% \n  filter(country %in% chosen_countries) %>% \n  pivot_longer(c(short_name_1, short_name_2), names_to = \"class\", values_to = \"value\") %>% drop_na(value) %>%\n  ggplot(aes(year, value, linetype = class, col = country)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator_1, \": \", short_name_1, \"\\n\", chosen_indicator_2, \": \", short_name_2)) +\n  scale_linetype_manual(labels = c(short_name_1, short_name_2), values = c(\"solid\", \"dashed\"))"},{"path":"worldbank.html","id":"課題-assignment","chapter":"8 World Bank","heading":"8.4 課題　Assignment","text":"上のテンプレートをコピーして、下に貼り付け、指標 indicator と、略称 short_name と、いくつかの国名 chosen_countries を、入れ替えて、試してみてください。","code":""},{"path":"intro2eda.html","id":"intro2eda","chapter":"9 探索的データ解析","heading":"9 探索的データ解析","text":"","code":""},{"path":"intro2eda.html","id":"探索的データ解析-edaとは","chapter":"9 探索的データ解析","heading":"9.1 探索的データ解析 (EDA)とは","text":"以下は、Posit Primers: Visualise Data から探索的データ解析 (EDA) は、データを理解するための反復的なサイクルです。EDAでは、以下のことを行います。データに関する問いを作成するデータに関する問いを作成するデータの可視化、変形・整形、モデリングによって、問いの答えを探索する。データの可視化、変形・整形、モデリングによって、問いの答えを探索する。学んだことを使って、問いをより洗練されたものとする。学んだことを使って、問いをより洗練されたものとする。EDAは、あらゆるデータ分析において重要な役割を担います。EDA によって、課題解決のいとぐちを発見することもありますし、他の課題との関係性を発見する場合もあります。EDAを使用してデータの問題や品質を確認したり、データが信頼できるものであるかを見極める問いを作成できる場合もあります。","code":""},{"path":"intro2eda.html","id":"探索的データ解析-eda-の一例","chapter":"9 探索的データ解析","heading":"9.2 探索的データ解析 (EDA) の一例","text":"WDI の一つの指標を使って、流れを見てみましょう。","code":""},{"path":"intro2eda.html","id":"データの取得と読み込み---data-import","chapter":"9 探索的データ解析","heading":"9.2.1 データの取得と読み込み - Data Import","text":"NY.GDP.PCAP.CD: GDP per capita (current US$)","code":"\ndf_wdi_gdppcap <- WDI(country = \"all\", indicator = c(gdp_pcap = \"NY.GDP.PCAP.CD\"))\nwrite_csv(df_wdi_gdppcap, \"./data/df_wdi_gdppcap.csv\")\ndf_wdi_gdppcap\n#> # A tibble: 16,492 × 5\n#>    country                     iso2c iso3c  year gdp_pcap\n#>    <chr>                       <chr> <chr> <dbl>    <dbl>\n#>  1 Africa Eastern and Southern ZH    AFE    2021    1550.\n#>  2 Africa Eastern and Southern ZH    AFE    2020    1364.\n#>  3 Africa Eastern and Southern ZH    AFE    2019    1512.\n#>  4 Africa Eastern and Southern ZH    AFE    2018    1565.\n#>  5 Africa Eastern and Southern ZH    AFE    2017    1629.\n#>  6 Africa Eastern and Southern ZH    AFE    2016    1444.\n#>  7 Africa Eastern and Southern ZH    AFE    2015    1539.\n#>  8 Africa Eastern and Southern ZH    AFE    2014    1719.\n#>  9 Africa Eastern and Southern ZH    AFE    2013    1730.\n#> 10 Africa Eastern and Southern ZH    AFE    2012    1759.\n#> # ℹ 16,482 more rows"},{"path":"intro2eda.html","id":"データ変形整形---data-transformation","chapter":"9 探索的データ解析","heading":"9.2.2 データ変形・整形 - Data Transformation","text":"","code":""},{"path":"intro2eda.html","id":"列を-select","chapter":"9 探索的データ解析","heading":"9.2.2.1 列を select","text":"どの変数について分析するかを選ぶ。","code":"\ndf_wdi_gdppcap_small <- df_wdi_gdppcap %>% \n  select(country, year, gdp_pcap)\ndf_wdi_gdppcap_small\n#> # A tibble: 16,492 × 3\n#>    country                      year gdp_pcap\n#>    <chr>                       <dbl>    <dbl>\n#>  1 Africa Eastern and Southern  2021    1550.\n#>  2 Africa Eastern and Southern  2020    1364.\n#>  3 Africa Eastern and Southern  2019    1512.\n#>  4 Africa Eastern and Southern  2018    1565.\n#>  5 Africa Eastern and Southern  2017    1629.\n#>  6 Africa Eastern and Southern  2016    1444.\n#>  7 Africa Eastern and Southern  2015    1539.\n#>  8 Africa Eastern and Southern  2014    1719.\n#>  9 Africa Eastern and Southern  2013    1730.\n#> 10 Africa Eastern and Southern  2012    1759.\n#> # ℹ 16,482 more rows"},{"path":"intro2eda.html","id":"行を-filter","chapter":"9 探索的データ解析","heading":"9.2.2.2 行を filter","text":"いくつかの国に、フォーカスして調べる。列（変数）と、行（国）の選択を続けて、実行すると次のようになる。\n一つ一つ変形したデータ（オブジェクト）に名前をつけて、保存する必要がないので、パイプ（%>%）の活用は有用である。","code":"\ndf_wdi_gdppcap_short <- df_wdi_gdppcap %>% \n  filter(country %in% c(\"Japan\", \"Germany\", \"United States\"))\ndf_wdi_gdppcap_short\n#> # A tibble: 186 × 5\n#>    country iso2c iso3c  year gdp_pcap\n#>    <chr>   <chr> <chr> <dbl>    <dbl>\n#>  1 Germany DE    DEU    2021   51204.\n#>  2 Germany DE    DEU    2020   46773.\n#>  3 Germany DE    DEU    2019   46794.\n#>  4 Germany DE    DEU    2018   47939.\n#>  5 Germany DE    DEU    2017   44653.\n#>  6 Germany DE    DEU    2016   42136.\n#>  7 Germany DE    DEU    2015   41103.\n#>  8 Germany DE    DEU    2014   48024.\n#>  9 Germany DE    DEU    2013   46299.\n#> 10 Germany DE    DEU    2012   43856.\n#> # ℹ 176 more rows\ndf_wdi_gdppcap_small_short <- df_wdi_gdppcap %>% select(country, year, gdp_pcap) %>%\n  filter(country %in% c(\"Japan\", \"Germany\", \"United States\"))\ndf_wdi_gdppcap_small_short\n#> # A tibble: 186 × 3\n#>    country  year gdp_pcap\n#>    <chr>   <dbl>    <dbl>\n#>  1 Germany  2021   51204.\n#>  2 Germany  2020   46773.\n#>  3 Germany  2019   46794.\n#>  4 Germany  2018   47939.\n#>  5 Germany  2017   44653.\n#>  6 Germany  2016   42136.\n#>  7 Germany  2015   41103.\n#>  8 Germany  2014   48024.\n#>  9 Germany  2013   46299.\n#> 10 Germany  2012   43856.\n#> # ℹ 176 more rows"},{"path":"intro2eda.html","id":"可視化-data-visualization","chapter":"9 探索的データ解析","heading":"9.2.3 可視化 Data Visualization","text":"次は、よく生じる、誤りの例で、ノコギリの歯（sawtoothed）のようなギザギザ・グラフと呼ばれます。なぜこのようなことが起きているかわかりますか。同じ年に、多くのデータがあるので、折れ線グラフを適切に書くことができませんでした。一般的には、散布図をまず、書いてみるのも一つです。国別に、異なる色を使うことで、折れ線グラフを書くことも可能です。折線グラフと、散布図を同時に描くこともかのうです。点を、曲線で近似する方法はいくつも知られているが、ある幅で、近似していく、LOESS が初期値となっている。method='loess' を省略しても、同じ近似がなされる。span という値を調節することで、ことなる幅での近似曲線を書くことも可能である。初期値は、0.75。","code":"\ndf_wdi_gdppcap_small_short %>%\n  ggplot(aes(x = year, y = gdp_pcap)) + geom_line()\n#> Warning: Removed 1 row containing missing values\n#> (`geom_line()`).\ndf_wdi_gdppcap_small_short %>% filter(country %in% c(\"Japan\")) %>%\n  ggplot(aes(x = year, y = gdp_pcap)) + geom_line()\ndf_wdi_gdppcap_small_short %>%\n  ggplot(aes(x = year, y = gdp_pcap)) + geom_point()\n#> Warning: Removed 10 rows containing missing values\n#> (`geom_point()`).\ndf_wdi_gdppcap_small_short %>% drop_na(gdp_pcap) %>%\n  ggplot(aes(x = year, y = gdp_pcap, col = country)) + geom_line()\ndf_wdi_gdppcap_small_short %>% drop_na(gdp_pcap) %>%\n  ggplot(aes(x = year, y = gdp_pcap, col = country)) + geom_line() +\n  geom_point()\ndf_wdi_gdppcap_small_short %>% drop_na(gdp_pcap) %>%\n  ggplot(aes(x = year, y = gdp_pcap)) + \n  geom_point(aes(color = country)) + \n  geom_smooth(method = 'loess', formula = 'y ~ x')"},{"path":"intro2eda.html","id":"データモデリング-data-modeling","chapter":"9 探索的データ解析","heading":"9.2.4 データモデリング Data Modeling","text":"上の例では、曲線ではなく、直線で近似することも考えられる。簡単な線形回帰モデルでの、回帰直線の y-切片や、傾きは、次のコードで与えられ、p-value や、R squared の値も求められる。この例では、年とともに、増加の傾向があること。そして、線形モデルが$$、90% 程度説明していると表現される。すなわち、は、良い、近似であることがわかる。","code":"\ndf_wdi_gdppcap_small_short %>% drop_na(gdp_pcap) %>%\n  ggplot(aes(x = year, y = gdp_pcap)) + \n  geom_point(aes(color = country)) + \n  geom_smooth(method = 'lm', formula = 'y ~ x')\ndf_wdi_gdppcap_small_short %>% lm(gdp_pcap ~ year, .) %>% summary()\n#> \n#> Call:\n#> lm(formula = gdp_pcap ~ year, data = .)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -14156.8  -3200.5   -507.4   3237.7  16779.2 \n#> \n#> Coefficients:\n#>               Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept) -1903497.5    48007.9  -39.65   <2e-16 ***\n#> year             968.3       24.1   40.18   <2e-16 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 5514 on 174 degrees of freedom\n#>   (10 observations deleted due to missingness)\n#> Multiple R-squared:  0.9027, Adjusted R-squared:  0.9021 \n#> F-statistic:  1614 on 1 and 174 DF,  p-value: < 2.2e-16"},{"path":"example1.html","id":"example1","chapter":"10 Example 1","heading":"10 Example 1","text":"","code":""},{"path":"japanese.html","id":"japanese","chapter":"A 日本語の扱いについて","heading":"A 日本語の扱いについて","text":"","code":""},{"path":"japanese.html","id":"日本語中国語韓国語","chapter":"A 日本語の扱いについて","heading":"A.1 日本語・中国語・韓国語","text":"文字化けが、起こることが多く、対応が、一定せず、特に、図の表示において、Windows や、macOS や、Linux などの、OS ごとに、フォントが違ったり、それを、図のタイトルなどに、使ったりが、難しかったのですが、どうやら、現在は、どの場合も、次の設定で、解決しているようです。下の例を確認してください。特に、フォントについては、好みも関係しますから、難しいですが、ここでは、どのプラットフォーム（OS）でも、共通に扱えることを中心に書きます。","code":"\n# showtext を、インストールしていない場合は、一回だけ、右上の三角をクリックして実行\ninstall.packages('showtext')"},{"path":"japanese.html","id":"パッケージをロード","chapter":"A 日本語の扱いについて","heading":"A.1.1 パッケージをロード","text":"library によって、Package をロード（いつでも使えるように）します。","code":"\nlibrary(tidyverse)\nlibrary(showtext) \nshowtext_auto()"},{"path":"japanese.html","id":"base-r-でタイトルに日本語","chapter":"A 日本語の扱いについて","heading":"A.2 Base R でタイトルに日本語","text":"","code":"\nplot(cars, main=\"散布図\")"},{"path":"japanese.html","id":"列名やデータに日本語","chapter":"A 日本語の扱いについて","heading":"A.3 列名や、データに日本語","text":"","code":"\ndf_iris <- iris\ncolnames(df_iris) <- c(\"萼長\",\"萼幅\",\"葉長\",\"葉幅\",\"Species\" )\ntab <- data.frame(Species = c(\"setosa\", \"versicolor\", \"virginica\"), \n                  \"種別\" = c(\"ヒオウギアヤメ\", \"ブルーフラッグ\", \"バージニカ\"))\ndf_iris <- df_iris %>% left_join(tab, by=c(\"Species\" = \"Species\")) %>% select(-5)\ndf_iris %>% slice(1:2)\n#>   萼長 萼幅 葉長 葉幅           種別\n#> 1  5.1  3.5  1.4  0.2 ヒオウギアヤメ\n#> 2  4.9  3.0  1.4  0.2 ヒオウギアヤメ"},{"path":"japanese.html","id":"kable-で表示","chapter":"A 日本語の扱いについて","heading":"A.4 kable で表示","text":"","code":"\nknitr::kable(df_iris[1:6, ])"},{"path":"japanese.html","id":"ggplot-でグラフを作成","chapter":"A 日本語の扱いについて","heading":"A.5 ggplot でグラフを作成","text":"","code":"\nggplot(df_iris, aes(x = `葉長`, y = `葉幅`, col = `種別`)) +\n  geom_point() + labs(title = \"散布図\", x = \"葉長\", y = \"葉幅\")"},{"path":"japanese.html","id":"備考-1","chapter":"A 日本語の扱いについて","heading":"A.6 備考：","text":"実は、一番難しいのが、PDF の作成だと思いますが、一応、上のものも、PDF を作成することが可能です。\n下のリンクのファイルを、いろいろな、形式で、出力してみてください。R Notebook と、PDF に出力したもののリンクを付けておきます。R Notebook\n右上の Code ボタンから、Rmd ファイルも取得できます。\n右上の Code ボタンから、Rmd ファイルも取得できます。R Notebook RMD\nRmd の中身がテキストで表示されますから、コピーして、新規作成した、RNotebook ファイルに貼り付けることも可能です。\nRmd の中身がテキストで表示されますから、コピーして、新規作成した、RNotebook ファイルに貼り付けることも可能です。PDF\n通常のPDFも、やはり PDF 形式の、beamer presentation も作成できます。\n通常のPDFも、やはり PDF 形式の、beamer presentation も作成できます。詳細は、これらのファイルに記載されていますから、参考にしてください。","code":""},{"path":"japanese.html","id":"参考日本語の表示について","chapter":"A 日本語の扱いについて","heading":"A.7 参考：日本語の表示について","text":"日本語が適切に表示されない！？簡単ではなく、未解決の部分が何かなどを含め、わたしも十分理解できているか不明であるが、理解できていると思われる範囲で、備忘録のように記します。R を使うという場合に限っても、R Studio IDE を使う場合、RStudio Cloud を使う場合、Google colab を使う場合、他のプラットフォームで使う場合で違ってくると思われますが、上にあげた、三種類のプラットフォームで確かめられるものについて書いていく。上に書いた以外に、R Studio IDE を、Windows 上で使う場合と、Mac 上で使う場合（Mac のシステムは Unix 系であるが、さまざまな Linux ）でも、状況が異なるかもしれません。そこで、場合分けをして書いていくほうが安全ですが、それは、極力避け、どれにでも適用可能な方法を模索しながら書いていこうと思います。個人的に、日常的に分断を避ける努力をすることが大切だと思っていることも背景にある。さらに、ソフトウェア開発者は、むろん、そのような差異を理解して、どの環境でも、可能なように設計することを心がけていると思われますし、そのようなものが、R Project の正規のパッケージとして採用されていくべきだとも考えていますので、多少、理想も入っているが、これを基本として書いていこうと思います。十分なチェックができていないものもあるので、不具合などは、ぜひ、お知らせ願いたい。この文章も少しずつ、改善していければと思う。通常、日本語、中国語、韓国語などが適切に表示できない場合は、文字のエンコーディング（Encoding: どのような情報として記録されているか）と、フォントの問題、さらに、システムがこれらをどう処理しているかの問題があると思われます。しかし、R の利用者として考えると、文字化けが起きたり、適切に文字が表示されないのは、以下の三つに分けられるようです。データファイルなどを読み込んだときに適切に表示されない図の中のタイトルなどが、適切に表示されないR Markdown の出力において、適切に表示されない","code":""},{"path":"japanese.html","id":"データファイルの読み込み","chapter":"A 日本語の扱いについて","heading":"A.7.1 データファイルの読み込み","text":"tidyverse に含まれる readr には、guess_encoding が含まれており、一般的には、たとえば、\nread_csv(“./data/file_name.csv”) とすると、一番可能性の高いエンコーディングで読み込まれるようになっています。\nread_csv(“./data/file_name.csv”) とすると、一番可能性の高いエンコーディングで読み込まれるようになっています。使い方：guess_encoding(file, n_max = 10000, threshold = 0.2) とあり、10000行で推測されたエンコーディング、または、確率を計算することを 初期設定値（Default）にしてます。Help によると、すべての行をチェックする場合は、n_max = -1 とすることが書かれています。これで問題がない場合が多いです。他の、readr 関数も同様です。しかし、これは、あくまでも、CSV などのテキストファイルについてです。なお、read_csv などにも、guess_max = min(1000, n_max) もありますが、これは、column type を決めるためのものである。read.csv() など、base R では、fileEncoding = ““, encoding =”unknown” がオプションに含まれていたので、指定して読み込むことが通常でした。","code":""},{"path":"japanese.html","id":"図の中のテキスト","chapter":"A 日本語の扱いについて","heading":"A.7.2 図の中のテキスト","text":"基本的には、日本語を表示できるフォントがインストールされていて、図の表示の前にlibrary(showtext); showtext_auto() となっていれば、これ以降の図は、問題なく、表示されるはずです。通常使っている、コンピュータ以外で、使うときに、フォントが入っていない場合などは、tinytex の命令を使って、tinytex::tlmgr_install(\"ipaex\") とすれば、PDF を作成するときも、IPA フォント（International Phonetic Alphabet）を使えます。二種類以上のフォントを使い分けたいときは、名前をつけて、それを family = name で指定する。\nshowtext: Using Fonts Easily R Graphs 参照。\nshowtext: Using Fonts Easily R Graphs 参照。","code":""},{"path":"japanese.html","id":"r-markdown-の出力","chapter":"A 日本語の扱いについて","heading":"A.7.3 R Markdown の出力","text":"PDF 作成には、システムを使っているので、日本語を扱えるように、tex-engine や、document class や、mainfont を設定する必要があるが、R Markdown ファイルの YAML に、以下を加えれば問題がないようである。","code":"header-includes:\n  - \\usepackage{xeCJK}\n  - \\setCJKmainfont{ipaexm.ttf}\n  - \\setCJKsansfont{ipaexg.ttf}\n  - \\setCJKmonofont{ipaexg.ttf}"},{"path":"japanese.html","id":"bookdown","chapter":"A 日本語の扱いについて","heading":"A.7.4 bookdown","text":"bookdown を使って、電子書籍を出版する場合には、bookdown （リンク） を参照してください。日本語におけるテンプレートは、こちら にあります。まずは、ページの下にある、README を読んでください。","code":""},{"path":"japanese.html","id":"参考としたもの","chapter":"A 日本語の扱いについて","heading":"A.7.5 参考としたもの","text":"","code":""},{"path":"japanese.html","id":"showtext-using-fonts-more-easily-in-r-graphs","chapter":"A 日本語の扱いについて","heading":"A.7.5.1 showtext: Using Fonts More Easily in R Graphs","text":"https://CRAN.R-project.org/package=showtext\nhttps://cran.r-project.org/web/packages/showtext/readme/README.html\nshowtext: Using Fonts Easily R Graphs:\nhttps://cran.r-project.org/web/packages/showtext/vignettes/introduction.html\nhttps://fonts.google.com\n\nhttps://cran.r-project.org/web/packages/showtext/readme/README.htmlshowtext: Using Fonts Easily R Graphs:\nhttps://cran.r-project.org/web/packages/showtext/vignettes/introduction.html\nhttps://fonts.google.com\nhttps://cran.r-project.org/web/packages/showtext/vignettes/introduction.htmlhttps://fonts.google.com","code":""},{"path":"japanese.html","id":"sysfonts-loading-fonts-into-r","chapter":"A 日本語の扱いについて","heading":"A.7.5.2 sysfonts: Loading Fonts into R","text":"https://CRAN.R-project.org/package=sysfonts\nhttps://cran.r-project.org/web/packages/sysfonts/sysfonts.pdf\nhttps://cran.r-project.org/web/packages/sysfonts/sysfonts.pdf","code":""},{"path":"japanese.html","id":"foods4all-examples-of-graphs","chapter":"A 日本語の扱いについて","heading":"A.7.5.3 foods4all: Examples of Graphs","text":"https://foods4all.github.io/examples/examples_of_graphs.html\n77.2 Japanese Environments 日本語環境（昔の記事：Last Updated: 2020-04-22）\n77.2 Japanese Environments 日本語環境（昔の記事：Last Updated: 2020-04-22）","code":""},{"path":"tools.html","id":"tools","chapter":"B IT ツール","heading":"B IT ツール","text":"いくつかの便利なツールについて紹介します。","code":""},{"path":"tools.html","id":"git-と-github","chapter":"B IT ツール","heading":"B.1 Git と GitHub","text":"Git は バージョン管理システムで、GitHub はそれを、活用し、かつ他のメンバーと協力して開発など、さまざまな活動をするためのサイトです。公開が基本となっています。非公開にすることも可能ですが、公開することで、世界中のひとたちと協力していくことが可能になりますので、その利点も学んでいただければと思います。","code":""},{"path":"tools.html","id":"概要","chapter":"B IT ツール","heading":"B.1.1 概要","text":"RStudio で R を使っている場合、Git-GitHub-RStudio の連携で使うことをお勧めします。しかし、これらは、三つとも、まったく異なるものですから、簡単な概要を書いておくことにします。","code":""},{"path":"tools.html","id":"git","chapter":"B IT ツール","heading":"B.1.1.1 Git","text":"これは、ファイルのバージョン（更新履歴）の管理システムで、単独で機能します。他の、プログラムなどに関係しない、他の文書ファイルであっても、バージョンを管理する場合に活用できます。特に、テキスト・ファイルの場合には、どこがどう改訂されているかを確認することもできます。また、基本的には、Unix の Shell プログラムで動作させるのが一般的です。Mac は、Unix システムの上に構築されているため、最初から、ユーティリティ（Utility）> ターミナル（Terminal）で、Shell コマンドが利用可能になっていますが、Windows の場合には、bash と呼ばれる Shell プログラムをインストールすることをお勧めします。Windows システムについてよくご存知の方は、他の方法を使っていただいて構いませんが、Git のインストールの時に、Git bash を選択して、簡単に インストールできますし、Unix システムの基本を理解するチャンスでもあり、Mac とも同じ環境で説明できますから、ここでは、そちらを使います。Shell コマンドは、R Studio の中のターミナルを使って、利用することも可能です。（注：Windows のコマンド・プロンプト、または、パワー・シェルをお使いの方は、利用環境が変化する可能性がありますから、そのまま使われる方が良いかもしれません。）基本的なコマンドとしては、以下のものがあります。いまは、このようなものがある程度に、眺めておいてください。git init: 特定のディレクトリ（フォルダ）で バージョン管理を始める時に使います。git status: 現在の状況を確認するときに使います。git diff file_name: ファイルへの変更を確認します。git log: 過去の commit による履歴を確認する時に使います。git add file_name: ステージングという中間的な場所に登録します。git commit -m \"log message \": ステージングにあるものを、確定させます。引用符で囲まれた短いコメントを加えます。50文字が上限です。git help: Help のリストが表示されます。\n例：git help init などと入力すると、説明を見ることができます。\n例：git help init などと入力すると、説明を見ることができます。","code":""},{"path":"tools.html","id":"git-hub","chapter":"B IT ツール","heading":"B.1.1.2 Git Hub","text":"Git でバージョン管理されているディレクトリ（フォルダ）の状態を示す、クラウドサービスです。更新されている、状態を確認するとともに、変更履歴なども確認できます。また、Git Hub サービスを利用して、ファイルを公開、共有することも可能です。Pages サイトを利用することで、ホームページとして HTML ファイルなどを公開することもできるため、レポートを公開したり、この電子書籍のように、bookdown パッケージを利用して作成したものを、インターネット上に公開することも可能です。お気付きかと思いますが、この電子書籍も、リンクされている、他の文書も、URL（アドレス）をみると、GitHub になっていますし、パッケージや、データなども、GitHub へのリンクが示されている割合が、非常に高いと思います。最初に、Git で管理されている、ディレクトリ（フォルダ）（これを、ローカル・リポジトリと言います）と、GitHub 内のリポジトリ（リモート・リポジトリまはたアップストリーム・リポジトリと言います。ここでは、リモート・リポジトリと呼ぶことにします）を結びつけるステップが必要です。","code":""},{"path":"tools.html","id":"rstudio-連携","chapter":"B IT ツール","heading":"B.1.1.3 RStudio 連携","text":"コマンドライン（シェル）で行う作業や、ローカル・リポジトリを、リモート・リポジトリに結びつける作業を、RStudio の中で行うことが可能です。","code":""},{"path":"tools.html","id":"はじめかた","chapter":"B IT ツール","heading":"B.1.2 はじめかた","text":"Git のインストールWindows と Mac で異なりますので注意が必要です。Mac については、Mac と書いてあるところを読んでください。Windows の場合は、git-scm にアクセスしてダウンロード、インストールしてください。セットアップ（Setup）で、２箇所、注意点があります、それ以外は、すべて、初期設定のままで変更は必要ありません。\nChoosing default editor used Git: 設定で、エディタ（Editor）を設定しますが、vi, vim に慣れていない方は、nano を選択することをお勧めします。（nano13 は、メニューが下に出るので、それを見て操作することが可能なエディターです。）\nAdjusting Path Environment: Windows の コマンドライン・ツール（command line prompt) を使っていない方は、Git Bash のインストールを選択してください。さらに、Git optional Unix tools Windows Command Prompt を選択することをお勧めしますが、上で書いたように、Windows の コマンド・プロンプトになれておられる方で、それを使い続けたいかたは、Use Git Git Bash を選択されるのが良いかもしれません。\n最後に、RStudio の設定（Tools > Global Option）で、Terminal　から、Git Bash を選択14し、Tools から、New Terminal を選択15します。\nChoosing default editor used Git: 設定で、エディタ（Editor）を設定しますが、vi, vim に慣れていない方は、nano を選択することをお勧めします。（nano13 は、メニューが下に出るので、それを見て操作することが可能なエディターです。）Adjusting Path Environment: Windows の コマンドライン・ツール（command line prompt) を使っていない方は、Git Bash のインストールを選択してください。さらに、Git optional Unix tools Windows Command Prompt を選択することをお勧めしますが、上で書いたように、Windows の コマンド・プロンプトになれておられる方で、それを使い続けたいかたは、Use Git Git Bash を選択されるのが良いかもしれません。最後に、RStudio の設定（Tools > Global Option）で、Terminal　から、Git Bash を選択14し、Tools から、New Terminal を選択15します。Mac は、最初から、Install されていると思います。ユーティリティ（Utility）> ターミナル（Terminal）を開いて16、git --version とすると、インストールされているバージョンが表示されると思います。バージョンがでない場合には、Install するかと聞かれます。このときに、Git だけをインストールすることも、Xcode という開発環境を同時にインストールすることも可能です。（インストールするように指示が出なければ、App Store からも、インストールできます。もし、そのあとで、git などのコマンドで xcrun: error などとエラーが出たら、xcode-select --install としてください。）インストールが終了したら、もう一度、git --version と Terminal に入力して、結果を確認してください。GitHub のアカウント取得GitHub サイト に、アカウントを作成します。アカウント名は、短く、分かりやすく、覚えやすいものをよく考えて決めてください。Email Address だけで、無償で作成できます。RStudio の 左下の窓枠のTerminal タブ17から、GitHub アカウントに連携する設定を行います。\n下の２行を、１行ずつ、コピーして、Terminal に入力してください。RStudio の、Tools > Global Opton の、Git/SVN タブを開き、Git Executable とあるところに、Git 実行プログラムのある場所を入れます。Windows の場合は、C:/Program Files/Git/bin/git.exe だと思いますが、Browse ボタンから確認してください。Mac の場合は、/usr/bin/git になるかと思いますが、Browse ボタンから確認してください。その下に、Create RSA key とありますから、それを押し、Create ボタンを押しててください18。すると、View RSA key から、暗号キーも確認できます。（この作業は、Terminal から、ssh-keygen -t rsa として作成することも可能です。この作業で、~/.ssh/ 内に、SSH キーが記述されたファイルが作成されます。）その下に、Create RSA key とありますから、それを押し、Create ボタンを押しててください18。すると、View RSA key から、暗号キーも確認できます。（この作業は、Terminal から、ssh-keygen -t rsa として作成することも可能です。この作業で、~/.ssh/ 内に、SSH キーが記述されたファイルが作成されます。）GitHub アカウントで公開鍵を利用できるようにします。まず、RStudio の方で作成した、RSA key （Tools の、Global Option の Git/SVN）の下にある view を押すと見ることができ、上に、書いてあるように、そこに出てきたものを、コピーします。次に、GitHubにログインし、右上のアイコンの右の三角から、設定（Setting）を選択し、SSH公開鍵（SSH GPG Keys）を選択します。新しい公開鍵を追加（New SSH Key）を選択すると、SSH キーを貼り付けることができます。（リポジトリの左上にある、アカウント名をクリックし現れるダッシュボードの左上の大きなアイコンをクリックしても「アカウント設定」が現れ、SSH GPG Keysを見つけることができると思います。）GitHub アカウントで公開鍵を利用できるようにします。まず、RStudio の方で作成した、RSA key （Tools の、Global Option の Git/SVN）の下にある view を押すと見ることができ、上に、書いてあるように、そこに出てきたものを、コピーします。次に、GitHubにログインし、右上のアイコンの右の三角から、設定（Setting）を選択し、SSH公開鍵（SSH GPG Keys）を選択します。新しい公開鍵を追加（New SSH Key）を選択すると、SSH キーを貼り付けることができます。（リポジトリの左上にある、アカウント名をクリックし現れるダッシュボードの左上の大きなアイコンをクリックしても「アカウント設定」が現れ、SSH GPG Keysを見つけることができると思います。）（なお、RStudio ではなく、Terminal からコピーするときは、Unix では、pbcopy < ~/.ssh/id_rsa.pub などとします。Windows の場合は、pbcopy が使えない可能性があるので、そのときは、Terminal から、Git Bash を使い、use < ~/.ssh/id_rsa.pub とします。Terminal に慣れておられない方には、上に紹介した、RStudio からコピーする方が簡便かと思います。）これで設定終了ですので、R Studio を再起動させてください。","code":"git config --global user.name \"Your Name\" # GitHub の User Name\ngit config --global user.email \"your@email.com\" # GitHub に登録したメールアドレス"},{"path":"tools.html","id":"github-にあるリモートリポジトリremote-repoから始める場合","chapter":"B IT ツール","heading":"B.1.3 GitHub にあるリモート・リポジトリ（Remote Repo）から始める場合","text":"GitHub にログインして、既存のリポジトリを開きます。Code の、Clone から、リンク先のアドレスを入手。https と SSH を選べますが、SSH を選び、コピーします。RStudio から、New Project とし、Version Control を選択し、ディレクトリーを決めたら、上でコピーした、ものを、貼り付けて、Project を作成します。この手続きで、リモート・リポジトリのファイルがすべて、RStudio のプロジェクトに入ります。実はこの手続きで、公開されている、他のリポジトリも取り込むことができます。ただし、編集して、改訂していくには、自分のリポジトリに、繋ぐことになります。そのときは、次の項目を見てください。","code":""},{"path":"tools.html","id":"自分のコンピュータのリポジトリlocal-repoから始める場合","chapter":"B IT ツール","heading":"B.1.4 自分のコンピュータのリポジトリ（Local Repo）から始める場合","text":"RStudio から新しい、プロジェクト（Project） を作成 test0 としておきましょう。GitHub に、新しい、レポジトリを作成して繋げる自分の GitHub アカウントに、新しい、レポジトリをプロジェクトと同じ名前 test0 で作成します。同じ名前でなくてもかまわないのですが、関連がしやすいので、同じ名前がお勧めです。Quick Setup というページが表示されますから、その、下の Set Desktop の右から、https と SSH を選べますが、SSH を選び、コピーします。プロジェクトの中の 左下の窓枠の、Terminal から次を実行します。再起動すると、プロジェクトの右上の窓枠に、Git と表示されていると思います。開いて、いくつかファイル名があれば、これを選択し、Commit ボタンを押し、短い message を書いて、Commit とし、そのあとで、Push ボタンを押してください。 HEAD -> main と表示されれば、OK です。","code":"echo \"# Project test0\" >> README.md # REAME の表題を書きます。\ngit init\ngit add README.md\ngit commit -m \"First commit. README.md\"\ngit branch -M main\ngit remote add origin `git@github.com:icu-hsuzuki/test0.git`\n# わたしのアカウントの場合には、コピーしたものを貼り付けると、上のようになります。\ngit push -u origin main"},{"path":"tools.html","id":"github-pages-について","chapter":"B IT ツール","heading":"B.1.5 GitHub Pages について","text":"GitHub は、Web 上のサービスですが、たとえ、リポジトリーの中に、HTML ファイルなどが存在しても、ブラウザーで表示させることはできません。公開する方法として、わたしは、以下のようにしています。公開しブラウザーで読めるようにしたいファイルを、docs という ディレクトリに入れます。Setting を選択し、左の帯から、Pages を選び、Branch を、main、/docs として、Save します。すると、docs に入っているファイルは、リンクを指定すれば、ブラウザーで、見ることができます。リンクは、まず、リポジトリーの右上の、の右のギアマークから、Use GitHub Pages website に、チェックを入れると、URL が表示されますから、その URL に続けて、ファイル名を加えたものが、そのファイルの、リンクとなります。","code":""},{"path":"tools.html","id":"bookdown-パッケージによる電子書籍の執筆","chapter":"B IT ツール","heading":"B.1.6 Bookdown パッケージによる、電子書籍の執筆","text":"bookdown を利用して、始める方法を簡単に記します。Git-GitHub-RStuio の設定は済んでいると仮定して書きます。また、Bookdown を利用するには、bookdown パッケージのインストールが必要です。RStudio の Tools から、Install Packages を選択して、インストールしてください。また、bs4_book スタイルを利用する場合は、RStudio などのバージョンによっては、bslib と downlit も、インストールする必要があるようです。以下では、R Studio で新しい、プロジェクトとして始める場合と、テンプレート・リポジトリ を使う方法を説明します。","code":""},{"path":"tools.html","id":"rstudio-での設定","chapter":"B IT ツール","heading":"B.1.6.1 RStudio での設定","text":"新しい book プロジェクトを始めます、標準設定の book と、bs4_book を選択できます。このディレクトリ（フォルダ。ローカル・リポジトリと呼びます）の名前をリモート・リポジトリの名前と同じにして、作成します19。Files の、Rename 機能を使って _book ディレクトリ（フォルダ）の名前を、docs に変更します。_bookdown.yml を編集し次の行を加えます（私は２行目に入れています）。output_dir: docs\nGitHub Pages の機能を使って、公開するための変更です。@GitHub: 新いリポジトリー（リモート・リポジトリと言います）を作成します。ローカル・リポジトリと同じ名前にし、簡単な説明を加えます。左下の窓枠から、Terminal タブを選択します。 以下は例です。git remote add origin のところは、適当に変更してください。RStudio を一旦終了し、もう一度、そのプロジェクトを立ち上げると、右上の窓枠に、Git タブが表示されるはずです。Build から、Build Book ボタンを利用すれば、作成されます。Git タブから: Commit “first build” とし、 Push をします。@GitHub: Settings から、Pages > main > docs と変更すると、公開されます。Code に戻り、の右のギアマークから、","code":"echo \"# ds-book\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin git@github.com:icu-hsuzuki/ds4aj.git # 変更\ngit push -u origin main"},{"path":"tools.html","id":"他の-pc-での作業","chapter":"B IT ツール","heading":"B.1.6.1.1 他の PC での作業","text":"Login GitHub accountCopy SSH address Code>CloneCreate new project using Version Control:Git SSH address setting directory nameEdit README.md test Git Commit Push","code":""},{"path":"tools.html","id":"テンプレートを利用する方法","chapter":"B IT ツール","heading":"B.1.6.2 テンプレートを利用する方法","text":"","code":""},{"path":"tools.html","id":"bookdown-demo","chapter":"B IT ツール","heading":"B.1.6.2.1 bookdown-demo","text":"bookdown の電子書籍（bookdown: Authoring Books Technical Documents R Markdown） の、はじめてみよう（Get started）から、GitHub リポジトリー rstudio/bookdown-demo にリンクがついています。自分の、GitHub アカウントに、ログインします。rstudio/bookdown-demo にアクセスし、Use template から、create new repository を選択します。自分のアカウントの中に、コピーされたリポジトリーがつくられます。上で説明した「GitHub にあるリモート・リポジトリ（Remote Repo）から始める場合」を利用してください。よくできているテンプレートです。しかし、このままでは、公開されません。bookdown: Authoring Books Technical Documents R Markdown には、いくつかの公開方法が書かれていますから、参照してください。","code":""},{"path":"tools.html","id":"jtr13bookdown-template","chapter":"B IT ツール","heading":"B.1.6.2.2 jtr13/bookdown-template","text":"YouTube ビデオ 5分間で、bookdown の本を作成する方法（create bookdown book 5 minutes） で紹介されているものです。自分の、GitHub アカウントに、ログインします。jtr13/bookdown-template にアクセスし、Use template から、create new repository を選択します。自分のアカウントの中に、コピーされたリポジトリーがつくられます。上で説明した「GitHub にあるリモート・リポジトリ（Remote Repo）から始める場合」を利用してください。ビデオの中では、簡単に、GitHub Pages（GitHub のホームページサービス）に、公開する方法が説明されています。最も、大切な部分は、テンプレートがコピーされた、自分のリポジトリの Settings から、Pages を選び、Branch を main > docs とする部分です。このようにすることで、公開されます。上の、「GitHub Pages」で説明していることと同じです。","code":""},{"path":"tools.html","id":"日本語テンプレート","chapter":"B IT ツール","heading":"B.1.6.2.3 日本語テンプレート","text":"bs4_book スタイルでの、簡単な、日本語テンプレートを作成しました。自分の、GitHub アカウントに、ログインします。icu-hsuzuki/bs4_book_template にアクセスし、Use template から、create new repository を選択します。自分のアカウントの中に、コピーされたリポジトリーがつくられます。上で説明した「GitHub にあるリモート・リポジトリ（Remote Repo）から始める場合」を利用してください。まだ、不十分ですが、少しずつ、改訂していきます。\n使い方は、リポジトリの README に、注意点などは、最後の章 Bookdown に書いておく予定です。","code":""},{"path":"tools.html","id":"大きなファイルに関すること","chapter":"B IT ツール","heading":"B.1.7 大きなファイルに関すること","text":"100M 未満のファイルだけを利用するのがよいですが、それより大きいものを、GitHub に挙げようとして、問題が起こることがあります。その対処法を書いておきます。個人的には、大きなデータや、本などを、Build して、100M 以上の、非常に大きな、TeX 関連のファイルができることがありました。備忘録も含めて、書いておきます。","code":""},{"path":"tools.html","id":"大きなファイルの取り除きかた","chapter":"B IT ツール","heading":"B.1.7.1 大きなファイルの取り除きかた","text":"下のサイトからの引用です。非常に分かりやすく書かれています。Terminal で作業を行いますが、いま、Add した場合と、いくつか、前のステップで、Add した場合で、対応の方法が異なります。Tutorial: Removing Large Files Git\nScenario 1: Large File Just Added Recent Commit\ngit rm –cached big_file_name\ngit commit –amend -C HEAD\n\nScenario 2: Large File Committed Prior Recent Commit\nLocating Last “Good” Commit: git log –oneline\nInitiate Rebase Last “Good” Commit Current Commit: git rebase -8464da4\nopen file Git editor (case, Vim), looks something like :\npick -> edit\n\ngit rm –cached csv_building_damage_assessment.csv\ngit commit –amend -C HEAD\n\nScenario 1: Large File Just Added Recent Commit\ngit rm –cached big_file_name\ngit commit –amend -C HEAD\ngit rm –cached big_file_namegit commit –amend -C HEADScenario 2: Large File Committed Prior Recent Commit\nLocating Last “Good” Commit: git log –oneline\nInitiate Rebase Last “Good” Commit Current Commit: git rebase -8464da4\nopen file Git editor (case, Vim), looks something like :\npick -> edit\n\ngit rm –cached csv_building_damage_assessment.csv\ngit commit –amend -C HEAD\nLocating Last “Good” Commit: git log –onelineInitiate Rebase Last “Good” Commit Current Commit: git rebase -8464da4This open file Git editor (case, Vim), looks something like :\npick -> edit\npick -> editgit rm –cached csv_building_damage_assessment.csvgit commit –amend -C HEAD","code":""},{"path":"tools.html","id":"複数のコンピュータから利用する方法","chapter":"B IT ツール","heading":"B.1.8 複数のコンピュータから利用する方法","text":"わたしも、いくつかのコンピュータから、同じGitHub アカウントにアクセスして作業しています。同じSSHキーを、複数のコンピュータで利用することも可能です。特に、コンピュータの更新時に、移行する場合は、元の環境をそのまま使うことも可能で便利です。ただし、基本的には、それぞれのコンピュータで別々のSSHキーを使用するのがお勧めです。問題が発生した時に、個別のコンピュータの課題として解決することができます。（たとえば、RSA 形式で作成した）複数の SSH キーを使用するときは、GitHub アカウントに公開鍵を追加する必要があります。GitHub アカウントに別の公開鍵を追加するには、GitHubにログインし、右上のアイコンの右の三角から、設定（Setting）を選択し、SSH公開鍵（SSH GPG Keys）を選択します。新しい公開鍵を追加（New SSH Key）を選択すると、SSH キーを貼り付けることができます。（リポジトリの左上にある、アカウント名をクリックし現れるダッシュボードの左上の大きなアイコンをクリックしても「アカウント設定」が現れ、SSH GPG Keysを見つけることができると思います。）コピーを貼り付ける時には、RStudio の、Global Option の、Git/SVN タブから、View public key を見ると、コピーできるようになっています。Terminal からコピーするときは、Unix では、pbcopy < ~/.ssh/id_rsa.pub などとします。Windows の場合は、pbcopy が使えない可能性があるので、そのときは、Terminal から、Git Bash を使い、use < ~/.ssh/id_rsa.pub とします。Terminal に慣れておられない方には、上に紹介した、RStudio からコピーする方が簡便かと思います。SSH キーの最後には、コンピュータ名とコンピュータのアカウント名などが入っていると思います。この設定をすれば、どちらのマシンからでもSSH経由でGithubリポジトリにアクセスできるようになります。","code":""},{"path":"tools.html","id":"複数のアカウントを一つのコンピュータから利用する方法","chapter":"B IT ツール","heading":"B.1.9 複数のアカウントを一つのコンピュータから利用する方法","text":"わたしも複数のGitHub アカウントを利用しています。~/.ssh 内に 複数（例では三つ）、ssh-keygen -t rsa でファイル作成\nid_rsa , id_sub1_rsa, id_sub2_rsa\nid_rsa , id_sub1_rsa, id_sub2_rsa上の複数のコンピュータから利用する時に説明してあるように、SSH キーを GitHub に登録~/.ssh 内の config ファイル（~/.ssh/config）を編集　(nano などを利用)~/.gitconfig, ~/.gitconfig_sub1, ~/.gitconfig_sub2 を作成詳しくは、参考にしたサイトを参照してください。","code":""},{"path":"tools.html","id":"共同作業をする場合","chapter":"B IT ツール","heading":"B.1.10 共同作業をする場合","text":"以下では、ひとり管理者（とりまとめ役）がいて、その人がまずは、レポジトリーを作成し、何人かの編集者で、共同編集することを想定して、書きます。内容は本でなくても、プログラムでも、ノートでも構いませんが、イメージしやすくするため、本を編集することを想定して書いていきます。編集に関わる全員が、それぞれ、個人の、GitHub アカウントを作成します。編集に関わる全員が、それぞれ、個人の、GitHub アカウントを作成します。リポジトリを フォーク（Fork）： 共同編集する（本の）レポジトリ（オリジナル・レポジトリと呼ぶことにします20）にいき、フォークします。フォークすることで、編集者のリポジトリに、コピーが作成され、大元のリポジトリ（オリジナル・レポジトリ）の変更を依頼することができます。名前をつけますが、元のものと同じでも、フォークしたことがわかるようにしておいても良いでしょう。リポジトリを フォーク（Fork）： 共同編集する（本の）レポジトリ（オリジナル・レポジトリと呼ぶことにします20）にいき、フォークします。フォークすることで、編集者のリポジトリに、コピーが作成され、大元のリポジトリ（オリジナル・レポジトリ）の変更を依頼することができます。名前をつけますが、元のものと同じでも、フォークしたことがわかるようにしておいても良いでしょう。一回フォーク（Fork）したら、２度目以降は、オリジナル・レポジトリから、フォーク（Fork）する必要はありません。ただし、改訂されているかもしれないので、更新（Sync fork）する必要はあります。GitHub 上の、フォーク（Fork） した、自分のレポジトリを見ると、更新されている場合は、オリジナル・レポジトリーに、Sync することができますから、Sync し21、最新の状態にしておきます。よくみると、オリジナル・レポジトリーとの関係が読み取れるかと思います。（フォークした）リポジトリをクローン: 編集者のコンピュータにフォークして得られたリポジトリを、クローンし、自分のコンピュータ内に、ローカル・リポジトリを作成ます。（フォークした）リポジトリをクローン: 編集者のコンピュータにフォークして得られたリポジトリを、クローンし、自分のコンピュータ内に、ローカル・リポジトリを作成ます。RStudio の右上の、Git タブの右にある、New Branch に、新しい、Branch（編集用枝）を作成します。すると、その右に、Branch 名が記載されます。それが、現在の Branch 名です。その右の三角を押すと、main など、すべての Branch が見えるはずです。編集のための Branch が表示されている（アクティブ）になっていることを確認します22。RStudio の右上の、Git タブの右にある、New Branch に、新しい、Branch（編集用枝）を作成します。すると、その右に、Branch 名が記載されます。それが、現在の Branch 名です。その右の三角を押すと、main など、すべての Branch が見えるはずです。編集のための Branch が表示されている（アクティブ）になっていることを確認します22。編集: 編集者のコンピュータ（RStudio 上）で編集を行います。編集: 編集者のコンピュータ（RStudio 上）で編集を行います。編集結果をコミット : 編集者のコンピュータで編集した後に、簡単な説明を書いて、コミットします。編集結果をコミット : 編集者のコンピュータで編集した後に、簡単な説明を書いて、コミットします。編集結果をプッシュ : フォークした GitHub の自分のリポジトリに、プッシュします。編集結果をプッシュ : フォークした GitHub の自分のリポジトリに、プッシュします。実際にどうなるかをみるために、Build をする場合もあるかもしれませんが、すると、たくさんのファイルが書き換えられます。管理者も、一つ一つ丁寧に見るのは大変ですから、実際に、書き換えた、Rmd ファイルなどだけに、チェックを入れて、Commit + Push するのも良いでしょう。この時点で、RStudio 上の、Branch を main に戻しておくと良いでしょう23。プル依頼を作成 : フォークした自分の（リモート）リポジトリで、編集の内容を簡単に記述して、プルリクエスト（Pull Request）をします。編集して、プッシュした、Branch を選択し、オリジナル・レポジトリーと異なった状態であることを確認します。Pull Request を選択します。オリジナル・レポジトリーの管理者は、修正をしやすいように、修正の要点を書いておきます。ここまでで終了です。管理者にメールが届きます。このあと、編集者が何をするか、確認してください。管理者：編集結果の確認 : オリジナル・リポジトリの所有者は、編集結果を確認し、承認する場合は、main に、統合（マージ）します。統合（マージ）すると、Pull Request をした編集者に、メールが届きます。変更の同期: 編集者は、承認された、オリジナル・リポジトリを、フォークした自分のリポジトリに、同期（Sync Fork）させます。自分のコンピュータ上の、ローカル・リポジトリの　main branch も（アクティブな、Branch 名を確認して）Pull をして、更新しておくと良いでしょう。少し、複雑な、変更の場合には、注意が出ます。詳細は省略しますが、Terminal で、一つの選択肢の、git config pull.rebase true # rebase を入力して、それから、もう一度、Pull をすると良いでしょう。これによって、オリジナル・リポジトリと同じ状態を維持することができます。","code":""},{"path":"tools.html","id":"要点","chapter":"B IT ツール","heading":"B.1.10.1 要点","text":"フォークして作成したリポジトリ（リモートも、ローカルも）の、main branch は、オリジナル・レポジトリと同じ状態にしておく。編集は、編集用に、branch を作成して、その branch を、リモート・リポジトリにプッシュして、プル・リクエストを行う。プル・リクエストの結果が反映されたら、リモートも、ローカルも、同期しておく。プル・リクエストが反映される前に、また編集するときは、別の branch を作成して、また、プル・リクエストをするのがよいでしょう。管理者は、merge で、編集結果を反映するときに、注意を要しますから、管理者が編集結果を反映しやすいように、丁寧に、プル・リクエストのときの説明をしておくのがよいと思います。","code":""},{"path":"tools.html","id":"参考にしたサイト","chapter":"B IT ツール","heading":"B.1.11 参考にしたサイト","text":"","code":""},{"path":"tools.html","id":"git---github---rstudio-関連","chapter":"B IT ツール","heading":"B.1.11.1 Git - GitHub - RStudio 関連","text":"git – everything local\n、Documentation など\n、Documentation などGitHub Docs: Hellow World\n基本的なことがコンパクトにまとまっている GitHub のサイトです。日本語もサポートしています。\n基本的なことがコンパクトにまとまっている GitHub のサイトです。日本語もサポートしています。Introduction Data Science, Rafael . Irizarry\nGit GitHub\nedX の、データサイエンスのコースの教科書に入っています。よく、まとまっていると思います。原語は英語ですが、Google などの翻訳機能を使っても、十分理解することができると思います。Git と GitHub の概要から、Bookdown パッケージによる、電子書籍の執筆の前までは、基本的に、この教科書を参考にしていますが、それぞれのステップでの、スクリーンショットもたくさん掲載されており、確認がしやすいようになっています。\nGit GitHubedX の、データサイエンスのコースの教科書に入っています。よく、まとまっていると思います。原語は英語ですが、Google などの翻訳機能を使っても、十分理解することができると思います。Git と GitHub の概要から、Bookdown パッケージによる、電子書籍の執筆の前までは、基本的に、この教科書を参考にしていますが、それぞれのステップでの、スクリーンショットもたくさん掲載されており、確認がしやすいようになっています。Git-GitHub-RStudio: 個人的メモ","code":""},{"path":"tools.html","id":"bookdown-関連","chapter":"B IT ツール","heading":"B.1.11.2 Bookdown 関連","text":"bookdown book: https://bookdown.org/yihui/bookdown/bookdown book: https://bookdown.org/yihui/bookdown/bookdown package reference site: https://pkgs.rstudio.com/bookdownThe bookdown package reference site: https://pkgs.rstudio.com/bookdownHow create bookdown book 5 minutes: https://www.youtube.com/watch?v=m5D-yoH416YHow create bookdown book 5 minutes: https://www.youtube.com/watch?v=m5D-yoH416Y","code":""},{"path":"tools.html","id":"複数アカウント複数のキー関連","chapter":"B IT ツール","heading":"B.1.11.3 複数アカウント・複数のキー関連","text":"Using github account multiple PCs複数のGitHubアカウントを使い分けたい時の設定方法とTipsAdding new SSH key GitHub account","code":""},{"path":"bookdown-original.html","id":"bookdown-original","chapter":"C Bookdown","heading":"C Bookdown","text":"","code":""},{"path":"bookdown-original.html","id":"about","chapter":"C Bookdown","heading":"C.1 About","text":"sample book written Markdown. can use anything Pandoc’s Markdown supports; example, math equation \\(^2 + b^2 = c^2\\).","code":""},{"path":"bookdown-original.html","id":"usage","chapter":"C Bookdown","heading":"C.1.1 Usage","text":"bookdown chapter .Rmd file, .Rmd file can contain one (one) chapter. chapter must start first-level heading: # good chapter, can contain one (one) first-level heading.Use second-level higher headings within chapters like: ## short section ### even shorter section.index.Rmd file required, also first book chapter. homepage render book.","code":""},{"path":"bookdown-original.html","id":"render-book","chapter":"C Bookdown","heading":"C.1.2 Render book","text":"can render HTML version example book without changing anything:Find Build pane RStudio IDE, andFind Build pane RStudio IDE, andClick Build Book, select output format, select “formats” ’d like use multiple formats book source files.Click Build Book, select output format, select “formats” ’d like use multiple formats book source files.build book R console:render example PDF bookdown::pdf_book, ’ll need install XeLaTeX. recommended install TinyTeX (includes XeLaTeX): https://yihui.org/tinytex/.","code":"\nbookdown::render_book()"},{"path":"bookdown-original.html","id":"preview-book","chapter":"C Bookdown","heading":"C.1.3 Preview book","text":"work, may start local server live preview HTML book. preview update edit book save individual .Rmd files. can start server work session using RStudio add-“Preview book”, R console:","code":"\nbookdown::serve_book()"},{"path":"bookdown-original.html","id":"hello-bookdown","chapter":"C Bookdown","heading":"C.2 Hello bookdown","text":"chapters start first-level heading followed chapter title, like line . one first-level heading (#) per .Rmd file.","code":""},{"path":"bookdown-original.html","id":"a-section","chapter":"C Bookdown","heading":"C.2.1 A section","text":"chapter sections start second-level (##) higher heading followed section title, like sections . can many want within chapter.","code":""},{"path":"bookdown-original.html","id":"an-unnumbered-section","chapter":"C Bookdown","heading":"An unnumbered section","text":"Chapters sections numbered default. un-number heading, add {.unnumbered} shorter {-} end heading, like section.","code":""},{"path":"bookdown-original.html","id":"cross","chapter":"C Bookdown","heading":"C.3 Cross-references","text":"Cross-references make easier readers find link elements book.","code":""},{"path":"bookdown-original.html","id":"chapters-and-sub-chapters","chapter":"C Bookdown","heading":"C.3.1 Chapters and sub-chapters","text":"two steps cross-reference heading:Label heading: # Hello world {#nice-label}.\nLeave label like automated heading generated based heading title: example, # Hello world = # Hello world {#hello-world}.\nlabel un-numbered heading, use: # Hello world {-#nice-label} {# Hello world .unnumbered}.\nLeave label like automated heading generated based heading title: example, # Hello world = # Hello world {#hello-world}.label un-numbered heading, use: # Hello world {-#nice-label} {# Hello world .unnumbered}.Next, reference labeled heading anywhere text using \\@ref(nice-label); example, please see Chapter C.3.\nprefer text link instead numbered reference use: text want can go .\nprefer text link instead numbered reference use: text want can go .","code":""},{"path":"bookdown-original.html","id":"captioned-figures-and-tables","chapter":"C Bookdown","heading":"C.3.2 Captioned figures and tables","text":"Figures tables captions can also cross-referenced elsewhere book using \\@ref(fig:chunk-label) \\@ref(tab:chunk-label), respectively.See Figure C.1.\nFigure C.1: nice figure!\nDon’t miss Table C.1.Table C.1: nice table!","code":"\npar(mar = c(4, 4, .1, .1))\nplot(pressure, type = 'b', pch = 19)\nknitr::kable(\n  head(pressure, 10), caption = 'Here is a nice table!',\n  booktabs = TRUE\n)"},{"path":"bookdown-original.html","id":"parts","chapter":"C Bookdown","heading":"C.4 Parts","text":"can add parts organize one book chapters together. Parts can inserted top .Rmd file, first-level chapter heading file.Add numbered part: # (PART) Act one {-} (followed # chapter)Add unnumbered part: # (PART\\*) Act one {-} (followed # chapter)Add appendix special kind un-numbered part: # (APPENDIX) stuff {-} (followed # chapter). Chapters appendix prepended letters instead numbers.","code":""},{"path":"bookdown-original.html","id":"footnotes-and-citations","chapter":"C Bookdown","heading":"C.5 Footnotes and citations","text":"","code":""},{"path":"bookdown-original.html","id":"footnotes","chapter":"C Bookdown","heading":"C.5.1 Footnotes","text":"Footnotes put inside square brackets caret ^[]. Like one 24.","code":""},{"path":"bookdown-original.html","id":"citations","chapter":"C Bookdown","heading":"C.5.2 Citations","text":"Reference items bibliography file(s) using @key.example, using bookdown package25 (check last code chunk index.Rmd see citation key added) sample book, built top R Markdown knitr26 (citation added manually external file book.bib).\nNote .bib files need listed index.Rmd YAML bibliography key.bs4_book theme makes footnotes appear inline click . example book, added csl: chicago-fullnote-bibliography.csl index.Rmd YAML, include .csl file. download new style, recommend: https://www.zotero.org/styles/RStudio Visual Markdown Editor can also make easier insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations","code":""},{"path":"bookdown-original.html","id":"blocks","chapter":"C Bookdown","heading":"C.6 Blocks","text":"","code":""},{"path":"bookdown-original.html","id":"equations","chapter":"C Bookdown","heading":"C.6.1 Equations","text":"equation.\\[\\begin{equation}\n  f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k}\n  \\tag{C.1}\n\\end{equation}\\]may refer using \\@ref(eq:binom), like see Equation (C.1).","code":""},{"path":"bookdown-original.html","id":"theorems-and-proofs","chapter":"C Bookdown","heading":"C.6.2 Theorems and proofs","text":"Labeled theorems can referenced text using \\@ref(thm:tri), example, check smart theorem C.1.Theorem C.1  right triangle, \\(c\\) denotes length hypotenuse\n\\(\\) \\(b\\) denote lengths two sides, \n\\[^2 + b^2 = c^2\\]Read https://bookdown.org/yihui/bookdown/markdown-extensions--bookdown.html.","code":""},{"path":"bookdown-original.html","id":"callout-blocks","chapter":"C Bookdown","heading":"C.6.3 Callout blocks","text":"bs4_book theme also includes special callout blocks, like .rmdnote.can use markdown inside block.user define appearance blocks LaTeX output.may also use: .rmdcaution, .rmdimportant, .rmdtip, .rmdwarning block name.R Markdown Cookbook provides help use custom blocks design callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html","code":"\nhead(beaver1, n = 5)\n#>   day time  temp activ\n#> 1 346  840 36.33     0\n#> 2 346  850 36.34     0\n#> 3 346  900 36.35     0\n#> 4 346  910 36.42     0\n#> 5 346  920 36.55     0"},{"path":"bookdown-original.html","id":"sharing-your-book","chapter":"C Bookdown","heading":"C.7 Sharing your book","text":"","code":""},{"path":"bookdown-original.html","id":"publishing","chapter":"C Bookdown","heading":"C.7.1 Publishing","text":"HTML books can published online, see: https://bookdown.org/yihui/bookdown/publishing.html","code":""},{"path":"bookdown-original.html","id":"pages","chapter":"C Bookdown","heading":"C.7.2 404 pages","text":"default, users directed 404 page try access webpage found. ’d like customize 404 page instead using default, may add either _404.Rmd _404.md file project root use code /Markdown syntax.","code":""},{"path":"bookdown-original.html","id":"metadata-for-sharing","chapter":"C Bookdown","heading":"C.7.3 Metadata for sharing","text":"Bookdown HTML books provide HTML metadata social sharing platforms like Twitter, Facebook, LinkedIn, using information provide index.Rmd YAML. setup, set url book path cover-image file. book’s title description also used.bs4_book provides enhanced metadata social sharing, chapter shared unique description, auto-generated based content.Specify book’s source repository GitHub repo _output.yml file, allows users view chapter’s source file suggest edit. Read features output format :https://pkgs.rstudio.com/bookdown/reference/bs4_book.htmlOr use:","code":"\n?bookdown::bs4_book"},{"path":"bookdown-original.html","id":"references","chapter":"C Bookdown","heading":"References","text":"","code":""}]
