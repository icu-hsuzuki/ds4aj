[{"path":"index.html","id":"この文書について","chapter":"この文書について","heading":"この文書について","text":"データサイエンスを始めましょう。データサイエンスは、広い意味をもったことばで、一口に、学び始めると言っても、さまざまな始め方があると思います。本書では、そのひとつを提案するとともに、共に学んでいきたいと願って、書き始めました。いろいろな方々や、利用方法を想定して、導入のような内容や、本書の中心をなす、R でのプログラミングを利用しなくても、ダッシュボードなどを利用することにより、データをさまざまな角度から見る経験をすること、スクリプトや、テンプレートを使って、一部を置き換えることで、データサイエンスを経験すること、基本的な R でのプログラミングを学んで、自分で、簡単なプログラムを書いて、分析をすること、さらに、こんなときは、どうしたら良いかなど、少し詳しい説明などを含んだ部分などです。また、順次、例を提供する、ブログのようなものも書いていきたいと思います。この書を利用するために「データサイエンスを教えてみませんか」と、教える方のサポートも、書いていく予定です。みなさんも一緒にデータサイエンスを学んでみませんか。","code":""},{"path":"index.html","id":"著者について","chapter":"この文書について","heading":"著者について","text":"著者は、大学の学生の時以来、数学を学び、大学で教え、2019年春に退職。それ以来、少しずつ、データサイエンスを学んでいます。幸運にも、2019年9月の日本数学会教育委員会主催教育シンポジウムで、「文理共通して行う数理・データサイエンス教育」という題で、話す機会が与えられ、その後、あることが契機となり、2020年度から、毎年、冬学期（12月から2月）に、大学院一般向け（分野の指定なし）の授業、「研究者のためのデータ分析（Data Analysis Researchers）」を担当しています。複数の教員で担当しますが、基本的な部分は、わたしが教え、応用について、他の先生がおしえています。受講生は20人程度で、殆どが、外国人。それも、多国籍で、多くても一国から三人程度。英語で教えています。この授業の関係で親しくなった経済学の先生に依頼されて、いくつかのレベルの経済学の授業で、２・３時限、世界銀行の世界開発指標などを使った分析の入門を、特別講師として教えさせていただきました。このコースは日本語で教えました。2023年3月に京都大学数理解析研究所で開かれた数学教育の会で、話す機会が与えられ、大学などで全学生向けに提供する「数理・データサイエンス・AI」について講演し、生成系AIの進化も踏まえて、どのようなことを学ぶ機会とすれば良いかについても、考えました。「データサイエンスをはじめましょう」も、このような背景の下で書かれたものです。コースで利用したものや、講演記録ににご興味のある方は、このページの下にもリンクがある、著者のホームページを参照してください。","code":""},{"path":"index.html","id":"コンピュータ言語について","chapter":"この文書について","heading":"コンピュータ言語について","text":"データサイエンスには、コンピュータを使います。コンピュータに指示をして、データを使いやすく変形したり、計算をしてもらったり、グラフを書いてもらったりします。そのためにコンピュータとのやりとりをする言語が必要です。さまざまな言語（プログラミング言語とも言います）が、使われますが、一番、使われているのは、Python と、R です。「データサイエンスをはじめましょう」では、統計解析のために開発された R を使います。いずれは、python についても触れたいと思いますが、プログラミングの経験がない方も含めて、最初にデータサイエンスを学ぶには、R は最適だと考えています。特に、R Studio IDE（integrated development environment, 統合開発環境） で、R を簡単に使うことができます。さらに、簡単なものであれば、Posit Cloud で試したり、共有することも可能です。また、再現性（Reproducibility）や、なにを実行しているのかの説明を同時に記述すること（Literate Programming）は、非常に重要ですが、その記述も、R Markdown によって、可能になっています。これが、Excel や、Google Spread Sheet ではなく、R を推奨する理由でもあります。\nこの文書も、R Markdown の一つの形式の、bookdown を利用しています。最後に、Bookdown に関連して、膨大な数の、参考書も、無償で提供されており、オンラインで読むことができることも、R をお薦めする理由です。ただし、日本語のものは、まだ十分とは言えない状況です。この文書を書き始めたのも、すこしでも、お役に立つことができればとの、気持ちが背景にあります。もう一つ付け加えると、高校の教科書でも、一部、Python のスクリプトが使われ、大学で、全学生向けに、データサイエンスのコースを提供するときにも、Excel を使うか、Python を使うかが R と比較するとより一般的のように見えます。しかし、それは、教える側の都合が影響しているのではないでしょうか。急いでコースを提供するため、身近な Excel から始めることにしたり、データサイエンスなら、情報科学の教員がコースをデザインせざるを得ないことから、汎用性の高く、かつデータサイエンスでも、中心的な役割を果たす Python を選択すると言ったことです。しかし、すべての人が、データサイエンスを学ぶ必要があるならば、文系の先生、そして、純粋数学を生業としてきたわたしのようなものも含めて、教えることに関わることは、とても大切だと思います。R は、社会科学系の分野で、最近特に使われています。分野ごとには、SPSS や、Stata や、MATLAB などが使われいるかもしれませんが、これらは、有償で、大学では、使えたとしても、一般の学生が卒業後も、これらのソフトを使えることは稀です。また、研究においても、最近は、さまざまな分野で、R がより一般的になっているとも聞きます。百聞は一見にしかずで、例を見ていただくのがよいと思いますが、R では、非常に短い命令で、対話型で、すぐ結果が得られます。テンプレートを使って、一部だけ書き換えて使うことも可能で、その人のレベルにあった利用が可能だと思います。さらに、Shiny のような、ダッシュボード形式のものも、利用可能ですし、learnr のように、対話型の、練習問題を提供することも可能です。少しずつ紹介していきたいと思います。","code":""},{"path":"index.html","id":"言語について","chapter":"この文書について","heading":"言語について","text":"ご覧の通り、本書は、日本語で書かれています。用語は、英語、あるいは、英語を追記、または、英語をカタカナにしただけのものを使用する可能性が大きいですが、説明は、極力、日本語で書いていく予定です。しかし、基本的に、コード（プログラムの記述）には、日本語を使わないで書いていく予定です。とくに、初心者にとっては、日本語を含むコードの扱いは、負担になることが多いからです。最近は、コードの中で日本語を使用しても、ほとんど、問題は起きないように思います。そうであっても、世界の人の共通言語として、プログラム言語を学んでいくときには、日本語を使わないことは意義があると思います。世界中の人たちから、アイディアを学び、あるときは協力し、例を提供して、作業をしていくことが可能だからです。少し慣れてきて、日本語のデータなどを扱うときには、コードにも日本語を使う必要ができていますから、日本語の利用についても、追って説明していきます。APPENDIX を参照してください。最初は、みなさんも、変数（variable）や、オブジェクト（object）に名前をつけるときは、半角英数を使い、日本語は、使わないようにすることをお勧めします。","code":""},{"path":"index.html","id":"pdfepub-版について","chapter":"この文書について","heading":"PDF、ePub 版について","text":"実は、PDF 版と、ePub 版も作成しています。しかし、扱いが異なるので、ある程度完成するまでは、ほとんど更新しない予定です。いずれ、これらも、更新したものを公開できると良いのですが。試験公開版は、下のリンクにあります。PDF 版ePub 版","code":""},{"path":"index.html","id":"参考","chapter":"この文書について","heading":"参考","text":"この電子書籍以外にも、データ・サイエンスについて幾つかの文書をインターネット上に公開しています。わたしのホームページにリストしてありますので、ご興味のあるかたは、参考にしてください。データサイエンスを学びませんか・データサイエンス教育","code":""},{"path":"introduction.html","id":"introduction","chapter":"1 はじめに","heading":"1 はじめに","text":"","code":""},{"path":"introduction.html","id":"データサイエンスとは","chapter":"1 はじめに","heading":"1.1 データサイエンスとは","text":"データサイエンスとはどのようなものでしょうか。いくつかの定義を紹介しますが、新しい分野し、非常に広い範囲の人たちが、データサイエンスに関係していることから、明確に定義することは、難しいように思います。簡単に表現すると「データを活用するための科学」かなと、わたしは、考えています。皆さんが、これから、データサイエンスを学びながら、自分だったらどのように表現するか、考えてください。「データを活用するための科学」には、三つのことばが含まれています。「データ」「活用するため」「科学」。一つ一つ、厳密な定義は難しいですが、データは、これから、皆さんがたくさん出会いますので、それまで置いておきましょう。「活用するため」と書きましたが、課題をみつけたり、その解決のための意思決定の根拠をさがしたりということでしょうか。分野は、さまざまですから、表現もまちまちかもしれません。最後に「科学」これも、簡単ではありませんが、わたしは、二つのことが大切だと考えています。一つは、反証可能性（falsifiability1）です。もう一つは、再現可能性（reproducibility2）です。反証可能性は、自分はそう信じるというような主観ではなく、正しいかどうかチェックすることができるという意味です。再現可能性は大体理解できると思いますが、データから得られる事実を、他のひとが操作をしても、同じ結果が得られるということです。そのためには、その「操作」が明確になっており、合理性も確保されていなければいけませんね。これら二つの性質は、「活用するため」に、共通の客観的な基盤を保証するということだと思います。データサイエンスは、根拠を明確にした議論（evidence based, fact based）のために、欠かせないことで、多様な価値観の多様なひとたちが合意して課題に立ち向かっていくためには、必要不可欠なことだと思います。そのいみでも、これから、データサイエンスは、ますます、重要度がましていくと思います。もう少し、踏み込んで、データサイエンスについて書いてみましょう。実際に、どのような作業が重視されているのかも、含まれています。Data Science: データ (Data) を活用して課題を発見・探求し、適切な解決策を探る意思決定のための科学（Decision Science）で、 エンピリカル（Empirical Study）すなわち、理論ではなく、実証性を特徴とする。 データから得られる特徴を表示するとともに、数理モデルを適用し・機械学習などで評価し・アルゴリズムを策定する数理的思考を通して得られた結果を、可視化などによってコミュニケーションをおこない、共有し、他者の意見を聞き理解する努力をしながら、さらに課題について、あらたにデータを活用して考え、検証し、適切な解決策がもたらす新たな課題も予測しながら、調整をはかる。上に書いたのは、ひとつの表現ですが、AI3 にも表題の「データサイエンスとは」と聞いてみると、次のような答えをしてくれました。ChatGPT (2023.6.3)データサイエンス（Data Science）は、データを解析し、洞察を得るための科学的な手法やツールの開発と応用を含む、多様なスキルセットを組み合わせた領域です。データサイエンスは、統計学、機械学習、データマイニング、データ可視化などの技術や手法を利用して、大量のデータからパターンやトレンドを抽出し、意思決定に役立つ洞察を導き出すことを目指します。データサイエンスのプロセスは、データの収集、前処理、分析、モデリング、評価、展開などのステップで構成されます。最初に、関連するデータを収集し、必要な形式に整理するために前処理を行います。次に、統計的な手法や機械学習アルゴリズムを使用してデータを分析し、予測モデルやパターンを発見します。モデルのパフォーマンスを評価し、必要に応じて改善を行い、最終的に洞察をビジネスや科学の現場に適用することが目標です。データサイエンスは、さまざまな分野で活用されています。例えば、ビジネス分野では、マーケティングキャンペーンの最適化、顧客セグメンテーション、需要予測などに利用されます。医療分野では、病気の診断や治療計画の最適化、新薬の開発などに応用されます。また、交通や都市計画、環境保護、金融など、さまざまな領域でデータサイエンスの手法が活用されています。データサイエンスには、数学や統計学、プログラミング、データベース管理、機械学習、ビジュアル化などの幅広いスキルが必要です。また、データの解釈やビジネス理解、コミュニケーション能力も重要な要素です。データサイエンティストやデータアナリストは、これらのスキルを駆使して、データを活用し、意思決定のサポートや新たな知見の発見に貢献します。ちょっと日本語がぎこちない感じもするので、英語での問いと答えも書いておきましょう。datascience?Data science multidisciplinary field involves using scientific methods tools analyze data extract insights. encompasses wide range skills, including statistics, machine learning, data mining, data visualization, explore understand complex data sets.core, data science involves collecting, organizing, cleaning, processing large volumes data uncover patterns, trends, correlations. applies various statistical techniques algorithms gain meaningful insights make informed decisions. Data scientists employ exploratory data analysis, hypothesis testing, predictive modeling extract valuable information data generate actionable recommendations.Data science finds applications numerous industries domains. widely used business market research, customer segmentation, demand forecasting, personalized recommendations. healthcare, data science aids disease diagnosis, treatment optimization, drug discovery. areas data science applied include transportation urban planning, environmental conservation, finance, social sciences.excel data science, one needs solid foundation mathematics, statistics, programming, data manipulation. Proficiency programming languages Python R crucial data manipulation building models. Strong analytical skills, critical thinking, ability communicate findings effectively also essential data scientists.Data science rapidly evolving field, driven advancements technology increasing availability data. plays crucial role leveraging data assets gain insights make data-driven decisions various industries.学際的分野（multidisciplinary field）という言葉も使われています。かなりの広がりをもった分野です。","code":""},{"path":"introduction.html","id":"なぜデータサイエンスが最近注目されているのか","chapter":"1 はじめに","heading":"1.1.1 なぜ、データサイエンスが最近注目されているのか","text":"では、なぜ、最近、急に、データサイエンスが注目されるようになったのでしょうか。最初にも少し書きましたし、みなさんが、少しずつ学びながら、考えていただくのが一番よいと思いますが、いくつか理由があると思います。個人的には、インターネットの普及や、さまざまなセンサーの普及にも助けられて、膨大なデータが得られるようになり、さらに、コンピュータの進化により、大きなデータであっても、それらを、扱うことができるようになったこと。それによって、複雑な問題であっても、その解決と意思決定に関して、データを使って根拠を明確にした（evidence based）議論を支援することが可能になったことだと考えています。付け加えておかないといけないと考えていることがもう一つあります。それは、問題解決と書きましたが、課題と向き合うという表現でもよいと思います。これまでは、因果関係が単純な課題については、根拠をしめして、ある程度議論できましたが、実際の世の中の問題は、非常に多くの要素が相互に絡み合っており、それらを、調整すると、結果にも、さまざまな変化が生じるため、調整も非常に困難だと言うことも挙げられると思います。それだけ複雑な課題と向き合うには、データを丁寧にみることがが必要で、その中で、さまざまな指標に関して評価値が高いものを選択することが可能になって来たと言うことです。そのことが、もう一歩進んで、AI（Artificial Intelligence 人工知能）を支える技術に使われています。ここで使った、ChatGPT の GPT は、Generative Pre-trained Transformer の略ですが、LLM（Large Language Model）によって、自然なことばを生成できるような技術が実用段階に入っています。たとえば、「データサイエンスが最近注目されているのは…」とすると、この後に続く言葉として、評価値が高いものを、選択してれる。それを、さらに、調整して、応答とすることが可能になっているのです。少し長いですが、もう少し、踏み込んで説明していますので、ChatGPT の応答を下に挙げておきましょう。ChatGPT (2023.6.3)データサイエンスが最近注目されている理由は、以下の要素によるものです。ビッグデータの増加: 近年、デジタル技術の進歩により、膨大な量のデータが生成されるようになりました。ウェブサイトのアクセスログ、ソーシャルメディアの投稿、センサーデータ、トランザクションデータなど、多様なソースから大量のデータが利用可能です。データサイエンスは、これらのビッグデータを活用して洞察を得ることができるため、需要が高まっています。ビッグデータの増加: 近年、デジタル技術の進歩により、膨大な量のデータが生成されるようになりました。ウェブサイトのアクセスログ、ソーシャルメディアの投稿、センサーデータ、トランザクションデータなど、多様なソースから大量のデータが利用可能です。データサイエンスは、これらのビッグデータを活用して洞察を得ることができるため、需要が高まっています。技術の進歩: データサイエンスを支える技術の進歩も、その注目を高めています。クラウドコンピューティングの発展やオープンソースのツールとライブラリの普及により、データの収集、処理、分析が容易になりました。さらに、機械学習や深層学習のアルゴリズムの改善や高速化も進んでおり、より高度な予測モデルやパターンの抽出が可能になっています。技術の進歩: データサイエンスを支える技術の進歩も、その注目を高めています。クラウドコンピューティングの発展やオープンソースのツールとライブラリの普及により、データの収集、処理、分析が容易になりました。さらに、機械学習や深層学習のアルゴリズムの改善や高速化も進んでおり、より高度な予測モデルやパターンの抽出が可能になっています。ビジネス価値の認識: データは企業にとって貴重な資産であり、データを活用することで競争優位を得ることができます。データサイエンスを活用することで、マーケットのニーズやトレンドを理解し、効果的なマーケティング戦略を立てることができます。顧客行動の予測やセグメンテーションを行い、顧客満足度や収益性を向上させることも可能です。ビジネス価値の認識: データは企業にとって貴重な資産であり、データを活用することで競争優位を得ることができます。データサイエンスを活用することで、マーケットのニーズやトレンドを理解し、効果的なマーケティング戦略を立てることができます。顧客行動の予測やセグメンテーションを行い、顧客満足度や収益性を向上させることも可能です。知識と人材の需要: データサイエンスの分野での知識とスキルを持つ人材への需要が高まっています。企業や組織は、データサイエンスの専門家を雇用して、データの分析と活用を行いたいと考えています。また、データサイエンスは学問としても注目を浴びており、大学や研究機関ではデータサイエンスに関連するプログラムや研究が増えています。知識と人材の需要: データサイエンスの分野での知識とスキルを持つ人材への需要が高まっています。企業や組織は、データサイエンスの専門家を雇用して、データの分析と活用を行いたいと考えています。また、データサイエンスは学問としても注目を浴びており、大学や研究機関ではデータサイエンスに関連するプログラムや研究が増えています。これらの要素により、データサイエンスはビジネスや科学の分野で重要な役割を果たしており、その注目度が高まっています。以下に、その具体的な理由をいくつか挙げます。創新と競争力の追求: データサイエンスは新たなビジネスモデルや製品の開発に貢献します。データを活用して市場のトレンドや消費者のニーズを洞察し、それに基づいて新しいサービスや製品を開発することが可能です。企業はデータを駆使して競争力を高め、革新的なソリューションを提供することを求めています。創新と競争力の追求: データサイエンスは新たなビジネスモデルや製品の開発に貢献します。データを活用して市場のトレンドや消費者のニーズを洞察し、それに基づいて新しいサービスや製品を開発することが可能です。企業はデータを駆使して競争力を高め、革新的なソリューションを提供することを求めています。問題解決と意思決定の支援: データサイエンスは複雑な問題を解決し、意思決定をサポートする上で重要なツールとなっています。データの分析により、事実に基づいた洞察が得られ、ビジネス上の課題や機会を特定することができます。データサイエンスの手法はリスク評価や予測、最適化などにも応用され、効果的な戦略立案や意思決定を支援します。問題解決と意思決定の支援: データサイエンスは複雑な問題を解決し、意思決定をサポートする上で重要なツールとなっています。データの分析により、事実に基づいた洞察が得られ、ビジネス上の課題や機会を特定することができます。データサイエンスの手法はリスク評価や予測、最適化などにも応用され、効果的な戦略立案や意思決定を支援します。パーソナライズされた体験の提供: データサイエンスは顧客の行動や好みを理解し、パーソナライズされた体験を提供するための手段としても利用されます。顧客データや行動履歴を分析し、個別のニーズや関心に基づいたオファーや推奨を行うことで、顧客満足度や忠誠度を向上させることができます。パーソナライズされた体験の提供: データサイエンスは顧客の行動や好みを理解し、パーソナライズされた体験を提供するための手段としても利用されます。顧客データや行動履歴を分析し、個別のニーズや関心に基づいたオファーや推奨を行うことで、顧客満足度や忠誠度を向上させることができます。社会的なインパクトと公共政策への応用: データサイエンスは社会的な課題や公共政策の分析にも役立ちます。例えば、交通渋滞の予測や都市計画の最適化、犯罪予測や防犯対策の強化などにデータサイエンスが活用されています。データ駆動のアプローチは社会のさまざまな側面において効果的な解決策を提供する可能性があります。社会的なインパクトと公共政策への応用: データサイエンスは社会的な課題や公共政策の分析にも役立ちます。例えば、交通渋滞の予測や都市計画の最適化、犯罪予測や防犯対策の強化などにデータサイエンスが活用されています。データ駆動のアプローチは社会のさまざまな側面において効果的な解決策を提供する可能性があります。これらの要素により、データサイエンスはビジネスや科学の分野で重要な役割を果たしており、その注目度が高まっています。以下に、その具体的な理由をいくつか挙げます。自動化と効率化の追求: データサイエンスは、業務プロセスの自動化や効率化にも貢献します。データの分析と予測モデルの活用により、タスクの自動化や最適なリソースの割り当てが可能となります。これにより、人的な作業負荷を軽減し、生産性を向上させることができます。自動化と効率化の追求: データサイエンスは、業務プロセスの自動化や効率化にも貢献します。データの分析と予測モデルの活用により、タスクの自動化や最適なリソースの割り当てが可能となります。これにより、人的な作業負荷を軽減し、生産性を向上させることができます。組織内のデータ文化の普及: データサイエンスの注目度の高まりに伴い、企業や組織においてデータ文化の重要性が認識されています。データサイエンスの手法やアプローチを組織全体で活用し、データに基づいた意思決定や問題解決を行うことが求められています。組織内でのデータの収集、管理、分析の能力向上に取り組むことで、競争力を高めることができます。組織内のデータ文化の普及: データサイエンスの注目度の高まりに伴い、企業や組織においてデータ文化の重要性が認識されています。データサイエンスの手法やアプローチを組織全体で活用し、データに基づいた意思決定や問題解決を行うことが求められています。組織内でのデータの収集、管理、分析の能力向上に取り組むことで、競争力を高めることができます。専門化と職業の多様化: データサイエンスの注目度の高まりに伴い、関連する職業や専門化も増えています。データサイエンティスト、データアナリスト、機械学習エンジニアなどの役割が求められるようになりました。また、データサイエンスを支えるツールやプラットフォームの開発も進んでおり、それに関連する職業やスキルも増加しています。専門化と職業の多様化: データサイエンスの注目度の高まりに伴い、関連する職業や専門化も増えています。データサイエンティスト、データアナリスト、機械学習エンジニアなどの役割が求められるようになりました。また、データサイエンスを支えるツールやプラットフォームの開発も進んでおり、それに関連する職業やスキルも増加しています。総じて、データサイエンスの注目度が高まっている理由は、データの増加、技術の進歩、ビジネス価値の認識、創新と競争力の追求、問題解決と意思決定の支援、パーソナライズされた体験の提供、社会的なインパクトと公共政策への応用、自動化と効率化の追求、組織内のデータ文化の普及、専門化と職業の多様化など、さまざまな要素が重なっています。データサイエンスは、ビジネスや科学の領域でデータの価値を最大限に引き出すための力強いツールとなっており、今後もその重要性と注目度は高まっていくことが予想されます。","code":""},{"path":"introduction.html","id":"なぜ一人ひとりがデータサイエンスを学ぶ必要があるのでしょうか","chapter":"1 はじめに","heading":"1.1.2 なぜ、一人ひとりが、データサイエンスを、学ぶ必要があるのでしょうか","text":"専門家に任せてはいけないのでしょうか。個人的には、次のように考えています。非常に広い範囲の課題に関係している課題に、データサイエンスが使われるだけではなく、その背後にある、単純な、因果関係ではない、考え方を、理解する必要があることが挙げられると思います。さらに、わたしが特に大切だと考えているのは、個人のコンピュータでも、十分に利用可能であること、パブリックデータとか、オープンデータと言われる、誰でも利用できるデータが、使いやすい形で、提供されていると言うことです。ChatGPT (2023.6.3)一人ひとりがデータサイエンスを学ぶ必要がある理由は、以下のような点が挙げられます。データリテラシーの重要性: データは現代社会においてますます重要な役割を果たしています。データに基づく意思決定や問題解決は、個人の日常生活から組織や社会の活動まで広がっています。データサイエンスを学ぶことで、データを扱うスキルや知識を身につけることができます。データを理解し、適切に分析して活用する能力は、個人の能力向上や自己啓発にも繋がります。データリテラシーの重要性: データは現代社会においてますます重要な役割を果たしています。データに基づく意思決定や問題解決は、個人の日常生活から組織や社会の活動まで広がっています。データサイエンスを学ぶことで、データを扱うスキルや知識を身につけることができます。データを理解し、適切に分析して活用する能力は、個人の能力向上や自己啓発にも繋がります。個人の成長とキャリアの展望: データサイエンスは求人市場で高い需要があり、競争力のあるキャリアの一つとなっています。データサイエンスのスキルを持つことで、自身のキャリアの成長や就業機会の拡大が期待できます。データサイエンスの知識やスキルは、さまざまな職業や業界で役立つだけでなく、起業や独立の道も開ける可能性があります。個人の成長とキャリアの展望: データサイエンスは求人市場で高い需要があり、競争力のあるキャリアの一つとなっています。データサイエンスのスキルを持つことで、自身のキャリアの成長や就業機会の拡大が期待できます。データサイエンスの知識やスキルは、さまざまな職業や業界で役立つだけでなく、起業や独立の道も開ける可能性があります。自己啓発と問題解決能力の向上: データサイエンスは、問題解決や意思決定において非常に有用なツールです。データサイエンスを学ぶことで、情報を分析し洞察を得る力や、パターンを見つける力、予測や最適化の能力を養うことができます。これにより、個人の問題解決能力や意思決定力が向上し、より効果的な選択や行動ができるようになります。自己啓発と問題解決能力の向上: データサイエンスは、問題解決や意思決定において非常に有用なツールです。データサイエンスを学ぶことで、情報を分析し洞察を得る力や、パターンを見つける力、予測や最適化の能力を養うことができます。これにより、個人の問題解決能力や意思決定力が向上し、より効果的な選択や行動ができるようになります。専門家に任せることも重要ですが、一人ひとりがデータサイエンスの基本的な概念や手法を理解することは有益です。以下にその理由を説明します。データの信頼性と誤解の回避: データは私たちの日常生活やビジネスの意思決定に影響を与える重要な要素です。しかし、データの解釈や分析方法によっては誤解を招くこともあります。データサイエンスの知識を持つことで、データの信頼性を評価し、適切な解釈を行う能力が向上します。これにより、誤った結論や誤解に基づく意思決定を避けることができます。データの信頼性と誤解の回避: データは私たちの日常生活やビジネスの意思決定に影響を与える重要な要素です。しかし、データの解釈や分析方法によっては誤解を招くこともあります。データサイエンスの知識を持つことで、データの信頼性を評価し、適切な解釈を行う能力が向上します。これにより、誤った結論や誤解に基づく意思決定を避けることができます。自己管理とデータプライバシーの保護: 近年、個人のデータの重要性とプライバシーの問題が注目されています。データサイエンスを学ぶことで、自身のデータの管理方法やプライバシーの保護について理解し、適切な対策を取ることができます。データの収集や利用に対して主体的に関与し、自己管理の意識を持つことが重要です。自己管理とデータプライバシーの保護: 近年、個人のデータの重要性とプライバシーの問題が注目されています。データサイエンスを学ぶことで、自身のデータの管理方法やプライバシーの保護について理解し、適切な対策を取ることができます。データの収集や利用に対して主体的に関与し、自己管理の意識を持つことが重要です。クリティカルシンキングと問題解決能力の向上: データサイエンスの学習は、クリティカルシンキングや問題解決能力を向上させる助けとなります。データを扱い、分析するためには、情報を適切に評価し、論理的に考える必要があります。データサイエンスの学習は、証拠に基づく意思決定や論理的な議論のスキルを磨くのに役立ちます。クリティカルシンキングと問題解決能力の向上: データサイエンスの学習は、クリティカルシンキングや問題解決能力を向上させる助けとなります。データを扱い、分析するためには、情報を適切に評価し、論理的に考える必要があります。データサイエンスの学習は、証拠に基づく意思決定や論理的な議論のスキルを磨くのに役立ちます。データサイエンスの専門家に相談することは重要ですが、一人ひとりが基本的なデータサイエンスの知識やスキルを身につけることで、自己啓発や問題解決能力の向上、データの信頼性の評価、プライバシーの保護などが可能となります。データサイエンスの学習は、個人の成長やキャリアの展望にもプラスの影響を与えることが期待されます。","code":""},{"path":"introduction.html","id":"ai-の活用","chapter":"1 はじめに","heading":"1.1.3 AI の活用","text":"「データサイエンスをはじめましょう」では、AI も活用していきたいと思います。クリティカルシンキングのことも、書かれていますが、どうしても、人は、バイアスのかかった考えかたをしてしまいます。それは、経験も知識も限られていますし、単純な答えを受け入れたい傾向4ということもあるかもしれません。そのために、まず、仲間に聞いてみる。そして、AI に聞いてみる。それらを踏まえて、さらに、課題や、問いを精緻なものにしていく。それが、まず、第一に大切だと考えるからです。さらに、最近のAI は、人間の普通の言葉を理解して、コード（コンピュータに伝える言葉）を書くこともできるようになっています。そのような支援を有効に使うことで、プログラミングの訓練を受けていない人でも、データサイエンスを学ぶことができるようになって来ています。翻訳にも活用することが可能で、長い文章の要約もかなり上手にしてくれるようになっています。AI はまだ、発展途上で、ここに書いたことも、少し経つと、古くなってしまうことでしょう。しかし、少し長いスパンで考えると、AI 研究の目標値として、掲げられているのは、AGI (Artificial General Intelligence)、汎用人工知能。（人間が実現可能な）あらゆる知的作業を理解・学習・実行することができる人工知能ということです。しかし、課題も多くあります。課題について、AI に聞いてみると次のような回答をしてくれました。Q. 現在の General Artificial Intelligence の 課題をまとめてください。GPT4 (2023.8.8)現在の一般人工知能（General Artificial Intelligence, AGI）には、以下のような主要な課題があります。理解と推論の限界: 現在のAIは、人間のように世界を理解したり、複雑な推論を行う能力をまだ持っていません。これは、言語理解、感情理解、一般的な常識理解など、多くの問題領域に影響を与えます。理解と推論の限界: 現在のAIは、人間のように世界を理解したり、複雑な推論を行う能力をまだ持っていません。これは、言語理解、感情理解、一般的な常識理解など、多くの問題領域に影響を与えます。教育データのバイアス: AIは学習データからパターンを学びますが、そのデータが偏っている場合、AIも偏った結果を出す可能性があります。これは、AIが人間の先入観や社会的な偏見を反映する可能性を示しています。教育データのバイアス: AIは学習データからパターンを学びますが、そのデータが偏っている場合、AIも偏った結果を出す可能性があります。これは、AIが人間の先入観や社会的な偏見を反映する可能性を示しています。説明可能性と透明性の欠如: AIの決定過程はしばしば「ブラックボックス」とされ、その理由は明らかにされていません。これは、AIの決定がなぜ行われたのか、どのような情報に基づいて行われたのかを理解するのを難しくしています。説明可能性と透明性の欠如: AIの決定過程はしばしば「ブラックボックス」とされ、その理由は明らかにされていません。これは、AIの決定がなぜ行われたのか、どのような情報に基づいて行われたのかを理解するのを難しくしています。安全性とエチカルな問題: AIが自己学習や自己改良を行う能力が増すにつれて、その結果が予測不可能になる可能性があります。また、AIが人間の倫理観や法律を理解し、それに従うようにすることも大きな課題です。安全性とエチカルな問題: AIが自己学習や自己改良を行う能力が増すにつれて、その結果が予測不可能になる可能性があります。また、AIが人間の倫理観や法律を理解し、それに従うようにすることも大きな課題です。リソースの要求: 大規模なAIモデルの訓練は、大量の計算リソースと電力を必要とします。これは環境に対する影響や、AI開発の費用効率に関わる問題です。リソースの要求: 大規模なAIモデルの訓練は、大量の計算リソースと電力を必要とします。これは環境に対する影響や、AI開発の費用効率に関わる問題です。たしかに、どれも、難しそうな課題ですね。みなさんは、これから、どのように、AI を活用し、どのように、向き合われるのでしょうか。","code":""},{"path":"introduction.html","id":"データサイエンスを始めましょうの特徴","chapter":"1 はじめに","heading":"1.2 「データサイエンスを始めましょう」の特徴","text":"","code":""},{"path":"introduction.html","id":"学習者として想定しているのは","chapter":"1 はじめに","heading":"1.2.1 学習者として想定しているのは","text":"高等学校を卒業したひとたちを対象と想定して、書いていこうと思います。","code":""},{"path":"introduction.html","id":"オープンパブリックデータの活用","chapter":"1 はじめに","heading":"1.2.2 オープン・パブリックデータの活用","text":"データサイエンスは、広い分野ですが、ここでは、オープンデータとか、パブリックデータと言われるものを主として活用していきます。すでに、書いたように、それが可能になって来たこと。特に、世界に目をむけると、すばらしいサイトがたくさんあり、国際機関などが、膨大なデータを提供しているので、まずは、それを活用したいと思います。","code":""},{"path":"introduction.html","id":"世界のデータをみること","chapter":"1 はじめに","heading":"1.2.3 世界のデータをみること","text":"日本のデータも、使っていこうと思いますが、まずは、世界の中の課題をみることが必要だと思っています。扱いやすい、世界のデータがたくさんあるからも理由の一つです。むろん、日本の課題から目を逸らすわけではありません。世界の中の日本を意識し、さらに、日本の課題にも目を向けていきたいと思います。","code":""},{"path":"introduction.html","id":"目標としていること","chapter":"1 はじめに","heading":"1.2.4 目標としていること","text":"ここで扱う内容は限られていますが、データサイエンスの基本を身につけることで、ここで、取り上げる、オープンデータ、パブリックデータだけでなく、さまざまな課題にデータを通して、向き合うことができると考えています。ここまで学べばというゴールはありません。日常的に、データを通して、課題に向き合う習慣が身についていければと願っています。","code":""},{"path":"introduction.html","id":"学習方法について","chapter":"1 はじめに","heading":"1.3 学習方法について","text":"インターネット上で公開していますので、さまざまな方法で学んでいっていただきたいと思います。個人で学ぶことも可能で、実際に、それが可能なように、書いていく予定です。しかし、おすすめは、何人かのグループ、または、大学などで一緒に学んでいくことです。それは、データサイエンスの目的でもある、問いを持ち、課題に取り組んでいくためには、さまざまな視点からの意見や、考え方が必要だからです。違って見方をたいせつにする訓練にもなります。ひとつのグラフから、それぞれが違うことを発見することも多くあります。それを経験しながら、共に考えていく経験が貴重だと思うからです。さらに、データの背景にあることを、想像したり、情報を得るときに、グループの一員として、AI に加わってもらうことも、有効だと思います。できれば、複数の AI に質問をするのが良いでしょう。さまざまな課題に、向き合うときに、グループのメンバーや、AI は、多様な意見を言ってくれることと思います。データを元にした議論の訓練をすることで、根拠を明確にした説明をする訓練もすることができます。そのためにも、グループで学ぶことは有益です。コードも、AI は教えてくれますが、聞き方が適切ではないと、間違った回答が得られることもあります。それも、グループで議論することで、聞き方を変えていくことも可能かもしれません。人の前で、発表する練習も、一連の学びの中に加えることをお勧めします。ぜひ、みなさんにあった、学びの場を協力して作っていってください。","code":""},{"path":"introduction.html","id":"参考-1","chapter":"1 はじめに","heading":"1.4 参考","text":"対話型 AI - Chat Bot について\nAI の使い方や例について、書いてあります。参考にしてください。\nAI の使い方や例について、書いてあります。参考にしてください。Data Analysis Researchers 2022\nオープンデータを用いた、データ分析の授業のデジタルブック\nオープンデータを用いた、データ分析の授業のデジタルブック","code":""},{"path":"what2learn.html","id":"what2learn","chapter":"2 学ぶ内容　","heading":"2 学ぶ内容　","text":"","code":""},{"path":"what2learn.html","id":"データサイエンス入門","chapter":"2 学ぶ内容　","heading":"2.1 データサイエンス入門","text":"具体的なデータを利用して、データサインエスとは、どのようなものかをみていきながら、ここで学ぶことの概要を紹介します。オープン・パブリックデータとしては、世界銀行のデータを使います。さまざまなデータが公開され、簡単に取得できるようになっている現状も紹介します。コードの詳細には、こだわらず、データサイエンスの実際について、雰囲気を感じていただければと思います。","code":""},{"path":"what2learn.html","id":"第一部-パブリックデータ","chapter":"2 学ぶ内容　","heading":"2.2 第一部　パブリックデータ","text":"世界のさまざまな、パブリックデータの紹介をし、ダッシュボードと呼ばれる機能を活用して、データをみることをします。世界銀行の世界開発指標（WDI）、国際連合（UN Data）、OECD、日本のデータ（e-Stat）を外観します。ここでは、R は使わず、サイトが提供するデータを探したり、サイト内でグラフを作成したり、データを取得するには、どのような方法があるかなどを紹介したいと思います。これらの機関内の機能を、ホームページ閲覧ソフト（Google Chrome, Edge, Safari など）を使うだけで、かなりの情報が得られることを、経験していただければと思います。","code":""},{"path":"what2learn.html","id":"第二部-基本","chapter":"2 学ぶ内容　","heading":"2.3 第二部　基本","text":"R の基本を学びます。R は、もともと、統計解析ソフトとして、開発されたもので、さまざまな分野の研究者によって利用され、また、それぞれの分野に必要な機能を、パッケージという形で開発して発展してきた言語です。非常に多くのひとたちが、開発に加わったために、痒いところに手が届く、多くの機能を、パッケージによって使うことができるようになりました。しかし、他方、統一性は十分ではなく、少し複雑な作業を実行するための、プログラミング言語としての機能も十分ではないという欠点も生じました。わたしの理解では、それを一気に解決したのが、Hadley Wickham 等、その後、RStudio そして、現在の、Posit に引き継がれた、tidyverse というパッケージ群の開発です。他の研究者も、tidyverse の開発思想を受け継ぎ、発展させる形で、開発をしています。そこで、R の起動とともに、最初に読み込まれる、Base R など、基本パッケージに、tidyverse を加えたものを基本として、極力、これらだけで、基本を学んでいきたいと思います。実際には、他のさまざまな便利なパッケージを使うことも、有用ですが、それは、後に回して、tidyverse を中心に学んでいきます。tidyverse により、R は、プログラミング言語としても、一つの優秀な言語となったと思います。コーディングや、プログラミングと言われる、一つ一つのステップを構築し、それを繋げていくことを、学んでいきたいと思います。もう一つ追加しておくのは、R Markdown の活用です。この「データサイエンスをはじめましょう」も、R Markdown の一つの形式、bookdown を使って書いています。データサイエンスを学ぶ上で、わたしが必要かつ不可欠と考えているのが、再現性（Reproducibility）と、なにを実行しているのかの説明を同時に記述すること（Literate Programming）です。 コードとともに、その結果を、その下に出力し、かつ、そのコードの説明も加え、さらに、それによって、何がわかるかも、同時に書いていくことは、データサイエンスの核となすもので、それによって、データサイエンスの目的を達成することができると考えているからです。データサイエンスでは、最後のコミュニケーションまでがひとつのまとまりです。他の人に聞いてもらうために発表したり、読んでもらうために、レポートを作成することも、一連の流れに加えることが必須だと思います。指導してくださる方がいるときは、そのレポートをみてもらって、評価してもらったり、アドバイスを受けたりすることは不可欠でしょう。それには、そのレポートに、コードとともに結果も書かれており、さらに、それは、何のためで、そこから、何が得られるのかが書かれていることも必要です。R Markdown の活用も、ともに学んでいきたいと思います。","code":""},{"path":"what2learn.html","id":"第三部-国際機関などのデータの活用","chapter":"2 学ぶ内容　","heading":"2.4 第三部　国際機関などのデータの活用","text":"R を使って、第一部で概観したデータを実際に分析する手法を学びます。国際機関などの公的機関では、さまざまなデータを提供していますが、それぞれに特徴があり、データの形式や、データ取得の方法が異なります。それらを、少しずつ説明しながら、それぞれのデータを、すでに学んだことを応用しながら、分析する実際を経験していきたいと思います。世界銀行の、世界開発指標（World Development Indicators）が、一番整っているので、まずは、世界開発指標から学びますが、世界銀行の他のデータや、国際連合のデータ、他の国際連合の機関が提供しているデータや、経済開発協力機構（OECD）や、World Data、Euro Stat などと共に、日本のデータである、e-Stat の使い方も学びたいと思います。国際機関だけではなく、他にも、オープン・パブリックデータを提供しているところがたくさんあります。少しずつその利用方法も含めて、紹介していきたいと思います。","code":""},{"path":"what2learn.html","id":"第四部-探索的データ分析-exploratory-data-analysis","chapter":"2 学ぶ内容　","heading":"2.5 第四部　探索的データ分析 Exploratory Data Analysis","text":"データを分析していくには、基本的なステップがありますが、その一つ一つのステップについて、より詳しく学びます。これまでに、紹介できなかったいくつかの手法についても、紹介していきたいと思います。","code":""},{"path":"what2learn.html","id":"第五部-分析例","chapter":"2 学ぶ内容　","heading":"2.6 第五部　分析例","text":"実際の分析例を加えていきたいと思います。","code":""},{"path":"what2learn.html","id":"付録","chapter":"2 学ぶ内容　","heading":"2.7 付録","text":"技術的なコメントなど、幾つかのトピックについて書いていきます。だいたい、このような構成を考えています。","code":""},{"path":"first-example.html","id":"first-example","chapter":"3 はじめてのデータサイエンス","heading":"3 はじめてのデータサイエンス","text":"","code":""},{"path":"first-example.html","id":"データサイエンスの実際","chapter":"3 はじめてのデータサイエンス","heading":"3.1 データサイエンスの実際","text":"データから情報を得るときには、大体次のような手順をとります。準備 Setupデータを取得 Import dataデータ構造の確認 View data必要に応じて整形 Transform data視覚化 Visualize dataデータを理解 Understand dataレポートなどにまとめる Communicate data下の図は R Data Science に掲載されている図です。よく、表現されていると思います。詳細は、少しずつ説明します。はじめにに書きましたが、基本的には、問いをもちデータを取得し、視覚化などを通して、データを理解し、さらに問いを深めるサイクルが、データサイエンスの核だと思います。R を使った分析の一つの例を、見て行きます。一つ一つのコード（コンピュータ・プログラム）の簡単な説明は、加えますが、あまりそれに捉われず、「データサイエンスとは何か？」を考えながら、雰囲気を味わってください。","code":""},{"path":"first-example.html","id":"r-のパッケージを活用","chapter":"3 はじめてのデータサイエンス","heading":"3.2 R のパッケージを活用","text":"","code":""},{"path":"first-example.html","id":"準備-setup","chapter":"3 はじめてのデータサイエンス","heading":"3.2.1 準備 Setup","text":"世界銀行（World Bank）の、世界開発指標（WDI: World Development Indicators）の一つの、GDP（Gross Domestic Product 国内総生産）のデータから始めます。GDP にも何種類かの尺度がありますが、次のものを見てみます。NY.GDP.MKTP.CD: GDP (current US$)5NY.GDP.MKTP.CD は、データコードと言われるもので、世界開発指標（WDI）には、一つづつ決まっています。World Development Indicators のサイトの下にある、Data Themes（テーマ）からテーマを選択し、下にスクロールすると、Code をみることができます。ちなみに、ここで利用する NY.GDP.MKTP.CD: GDP (current US$) は、テーマの Economy（経済）の、一番上にあります。経済用語の英語はよく知らないという方は、ブラウザー（Edge, Google Chrome, Safari など）の翻訳機能を使うのも良いでしょう。ただ、そのページの対話型の機能（interactive function）を利用するときは、翻訳機能をOFF にする必要がある場合もありますので、注意してください。エラーメッセージを調べるときなどに、英語のほうが情報がたくさん得られますから、言語を、英語に変更しておきます。R には、WDI のデータを取得する R のツール（パッケージ）WDI がありますから、それを使います。また、データを取り扱うための基本的なツール（パッケージ）tidyverse を使いますので、次のコードで、これらを読み込みます。\\#\\> 以下は、コードを実行すると、表示される情報（出力）です。以下同様です。データを保存する場所を作成しておくことをお勧めします。保存しておくときは、このディレクトリを使います。","code":"\nSys.setenv(LANG = \"en\") # 言語を英語に\nlibrary(tidyverse)      # tidyverse パッケージを読み込みます\n#> ── Attaching core tidyverse packages ──── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nlibrary(WDI)            # WDI パッケージを読み込みます\ndir.create(\"./data\")"},{"path":"first-example.html","id":"データ取得-import-data","chapter":"3 はじめてのデータサイエンス","heading":"3.2.2 データ取得 Import data","text":"データを取得します。少し時間がかかります。取得したデータに、df_gdp などと、わかりやすい名前をつけます。df は data frame の略で、R で標準的なデータの形式です。このコードで、全ての国の GDP を取得できます。GDP の値は、NY.GDP.MKTP.CD という名前の列にありますが、覚えやすいように、gdp という名前に変更しておきます。extra = TRUE とすることによって、それぞれの国についての情報などが追加されます。","code":"\ndf_gdp <- WDI(country = \"all\", \n              indicator = c(gdp = \"NY.GDP.MKTP.CD\"), \n              extra = TRUE)"},{"path":"first-example.html","id":"データ構造の確認","chapter":"3 はじめてのデータサイエンス","heading":"3.2.3 データ構造の確認","text":"最初の数行だけを見るには、head(df_dgp) とします。データの構造を見るときには、str(df_gdp) もよく使われます。今度は、列が縦に並んで表示されます。概要 (summary(df_gdp)) からもある程度わかります。国のリストをみてみましょう。とても長いリストの中には、地域名も含まれています。今回は下のように、|>（パイプと呼びます） で繋げてコードを書きました。最初は、データ、その中の、異なる国を選択して、書き出してくださいというものです。これは、と同じです。どんどん、かっこの中に入れ子になって複雑になるので、一つ一つのステップを、順に書いたものが、最初のものになります。なども可能です。かっこの中に最初に入るものが直前のもの、ここでは、データになっています。","code":"\nhead(df_gdp)\n#> # A tibble: 6 × 13\n#>   country     iso2c iso3c  year       gdp status lastupdated\n#>   <chr>       <chr> <chr> <dbl>     <dbl> <lgl>  <date>     \n#> 1 Afghanistan AF    AFG    2015   2.00e10 NA     2022-12-22 \n#> 2 Afghanistan AF    AFG    2011   1.82e10 NA     2022-12-22 \n#> 3 Afghanistan AF    AFG    2014   2.06e10 NA     2022-12-22 \n#> 4 Afghanistan AF    AFG    2013   2.06e10 NA     2022-12-22 \n#> 5 Afghanistan AF    AFG    2012   2.02e10 NA     2022-12-22 \n#> 6 Afghanistan AF    AFG    2007   9.72e 9 NA     2022-12-22 \n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>\nstr(df_gdp)\n#> spc_tbl_ [16,492 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n#>  $ country    : chr [1:16492] \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" ...\n#>  $ iso2c      : chr [1:16492] \"AF\" \"AF\" \"AF\" \"AF\" ...\n#>  $ iso3c      : chr [1:16492] \"AFG\" \"AFG\" \"AFG\" \"AFG\" ...\n#>  $ year       : num [1:16492] 2015 2011 2014 2013 2012 ...\n#>  $ gdp        : num [1:16492] 2.00e+10 1.82e+10 2.06e+10 2.06e+10 2.02e+10 ...\n#>  $ status     : logi [1:16492] NA NA NA NA NA NA ...\n#>  $ lastupdated: Date[1:16492], format: \"2022-12-22\" ...\n#>  $ region     : chr [1:16492] \"South Asia\" \"South Asia\" \"South Asia\" \"South Asia\" ...\n#>  $ capital    : chr [1:16492] \"Kabul\" \"Kabul\" \"Kabul\" \"Kabul\" ...\n#>  $ longitude  : num [1:16492] 69.2 69.2 69.2 69.2 69.2 ...\n#>  $ latitude   : num [1:16492] 34.5 34.5 34.5 34.5 34.5 ...\n#>  $ income     : chr [1:16492] \"Low income\" \"Low income\" \"Low income\" \"Low income\" ...\n#>  $ lending    : chr [1:16492] \"IDA\" \"IDA\" \"IDA\" \"IDA\" ...\n#>  - attr(*, \"spec\")=\n#>   .. cols(\n#>   ..   country = col_character(),\n#>   ..   iso2c = col_character(),\n#>   ..   iso3c = col_character(),\n#>   ..   year = col_double(),\n#>   ..   gdp = col_double(),\n#>   ..   status = col_logical(),\n#>   ..   lastupdated = col_date(format = \"\"),\n#>   ..   region = col_character(),\n#>   ..   capital = col_character(),\n#>   ..   longitude = col_double(),\n#>   ..   latitude = col_double(),\n#>   ..   income = col_character(),\n#>   ..   lending = col_character()\n#>   .. )\n#>  - attr(*, \"problems\")=<externalptr>\nsummary(df_gdp) \n#>    country             iso2c              iso3c          \n#>  Length:16492       Length:16492       Length:16492      \n#>  Class :character   Class :character   Class :character  \n#>  Mode  :character   Mode  :character   Mode  :character  \n#>                                                          \n#>                                                          \n#>                                                          \n#>                                                          \n#>       year           gdp             status       \n#>  Min.   :1960   Min.   :8.824e+06   Mode:logical  \n#>  1st Qu.:1975   1st Qu.:2.441e+09   NA's:16492    \n#>  Median :1990   Median :1.784e+10                 \n#>  Mean   :1990   Mean   :1.162e+12                 \n#>  3rd Qu.:2006   3rd Qu.:2.158e+11                 \n#>  Max.   :2021   Max.   :9.651e+13                 \n#>                 NA's   :3343                      \n#>   lastupdated            region            capital         \n#>  Min.   :2022-12-22   Length:16492       Length:16492      \n#>  1st Qu.:2022-12-22   Class :character   Class :character  \n#>  Median :2022-12-22   Mode  :character   Mode  :character  \n#>  Mean   :2022-12-22                                        \n#>  3rd Qu.:2022-12-22                                        \n#>  Max.   :2022-12-22                                        \n#>                                                            \n#>    longitude          latitude          income         \n#>  Min.   :-175.22   Min.   :-41.286   Length:16492      \n#>  1st Qu.: -15.18   1st Qu.:  4.174   Class :character  \n#>  Median :  19.54   Median : 17.277   Mode  :character  \n#>  Mean   :  19.16   Mean   : 18.740                     \n#>  3rd Qu.:  50.53   3rd Qu.: 39.715                     \n#>  Max.   : 179.09   Max.   : 64.184                     \n#>  NA's   :3472      NA's   :3472                        \n#>    lending         \n#>  Length:16492      \n#>  Class :character  \n#>  Mode  :character  \n#>                    \n#>                    \n#>                    \n#> \ndf_gdp |> distinct(country) |> pull()\n#>   [1] \"Afghanistan\"                                         \n#>   [2] \"Africa Eastern and Southern\"                         \n#>   [3] \"Africa Western and Central\"                          \n#>   [4] \"Albania\"                                             \n#>   [5] \"Algeria\"                                             \n#>   [6] \"American Samoa\"                                      \n#>   [7] \"Andorra\"                                             \n#>   [8] \"Angola\"                                              \n#>   [9] \"Antigua and Barbuda\"                                 \n#>  [10] \"Arab World\"                                          \n#>  [11] \"Argentina\"                                           \n#>  [12] \"Armenia\"                                             \n#>  [13] \"Aruba\"                                               \n#>  [14] \"Australia\"                                           \n#>  [15] \"Austria\"                                             \n#>  [16] \"Azerbaijan\"                                          \n#>  [17] \"Bahamas, The\"                                        \n#>  [18] \"Bahrain\"                                             \n#>  [19] \"Bangladesh\"                                          \n#>  [20] \"Barbados\"                                            \n#>  [21] \"Belarus\"                                             \n#>  [22] \"Belgium\"                                             \n#>  [23] \"Belize\"                                              \n#>  [24] \"Benin\"                                               \n#>  [25] \"Bermuda\"                                             \n#>  [26] \"Bhutan\"                                              \n#>  [27] \"Bolivia\"                                             \n#>  [28] \"Bosnia and Herzegovina\"                              \n#>  [29] \"Botswana\"                                            \n#>  [30] \"Brazil\"                                              \n#>  [31] \"British Virgin Islands\"                              \n#>  [32] \"Brunei Darussalam\"                                   \n#>  [33] \"Bulgaria\"                                            \n#>  [34] \"Burkina Faso\"                                        \n#>  [35] \"Burundi\"                                             \n#>  [36] \"Cabo Verde\"                                          \n#>  [37] \"Cambodia\"                                            \n#>  [38] \"Cameroon\"                                            \n#>  [39] \"Canada\"                                              \n#>  [40] \"Caribbean small states\"                              \n#>  [41] \"Cayman Islands\"                                      \n#>  [42] \"Central African Republic\"                            \n#>  [43] \"Central Europe and the Baltics\"                      \n#>  [44] \"Chad\"                                                \n#>  [45] \"Channel Islands\"                                     \n#>  [46] \"Chile\"                                               \n#>  [47] \"China\"                                               \n#>  [48] \"Colombia\"                                            \n#>  [49] \"Comoros\"                                             \n#>  [50] \"Congo, Dem. Rep.\"                                    \n#>  [51] \"Congo, Rep.\"                                         \n#>  [52] \"Costa Rica\"                                          \n#>  [53] \"Cote d'Ivoire\"                                       \n#>  [54] \"Croatia\"                                             \n#>  [55] \"Cuba\"                                                \n#>  [56] \"Curacao\"                                             \n#>  [57] \"Cyprus\"                                              \n#>  [58] \"Czechia\"                                             \n#>  [59] \"Denmark\"                                             \n#>  [60] \"Djibouti\"                                            \n#>  [61] \"Dominica\"                                            \n#>  [62] \"Dominican Republic\"                                  \n#>  [63] \"Early-demographic dividend\"                          \n#>  [64] \"East Asia & Pacific\"                                 \n#>  [65] \"East Asia & Pacific (excluding high income)\"         \n#>  [66] \"East Asia & Pacific (IDA & IBRD countries)\"          \n#>  [67] \"Ecuador\"                                             \n#>  [68] \"Egypt, Arab Rep.\"                                    \n#>  [69] \"El Salvador\"                                         \n#>  [70] \"Equatorial Guinea\"                                   \n#>  [71] \"Eritrea\"                                             \n#>  [72] \"Estonia\"                                             \n#>  [73] \"Eswatini\"                                            \n#>  [74] \"Ethiopia\"                                            \n#>  [75] \"Euro area\"                                           \n#>  [76] \"Europe & Central Asia\"                               \n#>  [77] \"Europe & Central Asia (excluding high income)\"       \n#>  [78] \"Europe & Central Asia (IDA & IBRD countries)\"        \n#>  [79] \"European Union\"                                      \n#>  [80] \"Faroe Islands\"                                       \n#>  [81] \"Fiji\"                                                \n#>  [82] \"Finland\"                                             \n#>  [83] \"Fragile and conflict affected situations\"            \n#>  [84] \"France\"                                              \n#>  [85] \"French Polynesia\"                                    \n#>  [86] \"Gabon\"                                               \n#>  [87] \"Gambia, The\"                                         \n#>  [88] \"Georgia\"                                             \n#>  [89] \"Germany\"                                             \n#>  [90] \"Ghana\"                                               \n#>  [91] \"Gibraltar\"                                           \n#>  [92] \"Greece\"                                              \n#>  [93] \"Greenland\"                                           \n#>  [94] \"Grenada\"                                             \n#>  [95] \"Guam\"                                                \n#>  [96] \"Guatemala\"                                           \n#>  [97] \"Guinea\"                                              \n#>  [98] \"Guinea-Bissau\"                                       \n#>  [99] \"Guyana\"                                              \n#> [100] \"Haiti\"                                               \n#> [101] \"Heavily indebted poor countries (HIPC)\"              \n#> [102] \"High income\"                                         \n#> [103] \"Honduras\"                                            \n#> [104] \"Hong Kong SAR, China\"                                \n#> [105] \"Hungary\"                                             \n#> [106] \"IBRD only\"                                           \n#> [107] \"Iceland\"                                             \n#> [108] \"IDA & IBRD total\"                                    \n#> [109] \"IDA blend\"                                           \n#> [110] \"IDA only\"                                            \n#> [111] \"IDA total\"                                           \n#> [112] \"India\"                                               \n#> [113] \"Indonesia\"                                           \n#> [114] \"Iran, Islamic Rep.\"                                  \n#> [115] \"Iraq\"                                                \n#> [116] \"Ireland\"                                             \n#> [117] \"Isle of Man\"                                         \n#> [118] \"Israel\"                                              \n#> [119] \"Italy\"                                               \n#> [120] \"Jamaica\"                                             \n#> [121] \"Japan\"                                               \n#> [122] \"Jordan\"                                              \n#> [123] \"Kazakhstan\"                                          \n#> [124] \"Kenya\"                                               \n#> [125] \"Kiribati\"                                            \n#> [126] \"Korea, Dem. People's Rep.\"                           \n#> [127] \"Korea, Rep.\"                                         \n#> [128] \"Kosovo\"                                              \n#> [129] \"Kuwait\"                                              \n#> [130] \"Kyrgyz Republic\"                                     \n#> [131] \"Lao PDR\"                                             \n#> [132] \"Late-demographic dividend\"                           \n#> [133] \"Latin America & Caribbean\"                           \n#> [134] \"Latin America & Caribbean (excluding high income)\"   \n#> [135] \"Latin America & the Caribbean (IDA & IBRD countries)\"\n#> [136] \"Latvia\"                                              \n#> [137] \"Least developed countries: UN classification\"        \n#> [138] \"Lebanon\"                                             \n#> [139] \"Lesotho\"                                             \n#> [140] \"Liberia\"                                             \n#> [141] \"Libya\"                                               \n#> [142] \"Liechtenstein\"                                       \n#> [143] \"Lithuania\"                                           \n#> [144] \"Low & middle income\"                                 \n#> [145] \"Low income\"                                          \n#> [146] \"Lower middle income\"                                 \n#> [147] \"Luxembourg\"                                          \n#> [148] \"Macao SAR, China\"                                    \n#> [149] \"Madagascar\"                                          \n#> [150] \"Malawi\"                                              \n#> [151] \"Malaysia\"                                            \n#> [152] \"Maldives\"                                            \n#> [153] \"Mali\"                                                \n#> [154] \"Malta\"                                               \n#> [155] \"Marshall Islands\"                                    \n#> [156] \"Mauritania\"                                          \n#> [157] \"Mauritius\"                                           \n#> [158] \"Mexico\"                                              \n#> [159] \"Micronesia, Fed. Sts.\"                               \n#> [160] \"Middle East & North Africa\"                          \n#> [161] \"Middle East & North Africa (excluding high income)\"  \n#> [162] \"Middle East & North Africa (IDA & IBRD countries)\"   \n#> [163] \"Middle income\"                                       \n#> [164] \"Moldova\"                                             \n#> [165] \"Monaco\"                                              \n#> [166] \"Mongolia\"                                            \n#> [167] \"Montenegro\"                                          \n#> [168] \"Morocco\"                                             \n#> [169] \"Mozambique\"                                          \n#> [170] \"Myanmar\"                                             \n#> [171] \"Namibia\"                                             \n#> [172] \"Nauru\"                                               \n#> [173] \"Nepal\"                                               \n#> [174] \"Netherlands\"                                         \n#> [175] \"New Caledonia\"                                       \n#> [176] \"New Zealand\"                                         \n#> [177] \"Nicaragua\"                                           \n#> [178] \"Niger\"                                               \n#> [179] \"Nigeria\"                                             \n#> [180] \"North America\"                                       \n#> [181] \"North Macedonia\"                                     \n#> [182] \"Northern Mariana Islands\"                            \n#> [183] \"Norway\"                                              \n#> [184] \"Not classified\"                                      \n#> [185] \"OECD members\"                                        \n#> [186] \"Oman\"                                                \n#> [187] \"Other small states\"                                  \n#> [188] \"Pacific island small states\"                         \n#> [189] \"Pakistan\"                                            \n#> [190] \"Palau\"                                               \n#> [191] \"Panama\"                                              \n#> [192] \"Papua New Guinea\"                                    \n#> [193] \"Paraguay\"                                            \n#> [194] \"Peru\"                                                \n#> [195] \"Philippines\"                                         \n#> [196] \"Poland\"                                              \n#> [197] \"Portugal\"                                            \n#> [198] \"Post-demographic dividend\"                           \n#> [199] \"Pre-demographic dividend\"                            \n#> [200] \"Puerto Rico\"                                         \n#> [201] \"Qatar\"                                               \n#> [202] \"Romania\"                                             \n#> [203] \"Russian Federation\"                                  \n#> [204] \"Rwanda\"                                              \n#> [205] \"Samoa\"                                               \n#> [206] \"San Marino\"                                          \n#> [207] \"Sao Tome and Principe\"                               \n#> [208] \"Saudi Arabia\"                                        \n#> [209] \"Senegal\"                                             \n#> [210] \"Serbia\"                                              \n#> [211] \"Seychelles\"                                          \n#> [212] \"Sierra Leone\"                                        \n#> [213] \"Singapore\"                                           \n#> [214] \"Sint Maarten (Dutch part)\"                           \n#> [215] \"Slovak Republic\"                                     \n#> [216] \"Slovenia\"                                            \n#> [217] \"Small states\"                                        \n#> [218] \"Solomon Islands\"                                     \n#> [219] \"Somalia\"                                             \n#> [220] \"South Africa\"                                        \n#> [221] \"South Asia\"                                          \n#> [222] \"South Asia (IDA & IBRD)\"                             \n#> [223] \"South Sudan\"                                         \n#> [224] \"Spain\"                                               \n#> [225] \"Sri Lanka\"                                           \n#> [226] \"St. Kitts and Nevis\"                                 \n#> [227] \"St. Lucia\"                                           \n#> [228] \"St. Martin (French part)\"                            \n#> [229] \"St. Vincent and the Grenadines\"                      \n#> [230] \"Sub-Saharan Africa\"                                  \n#> [231] \"Sub-Saharan Africa (excluding high income)\"          \n#> [232] \"Sub-Saharan Africa (IDA & IBRD countries)\"           \n#> [233] \"Sudan\"                                               \n#> [234] \"Suriname\"                                            \n#> [235] \"Sweden\"                                              \n#> [236] \"Switzerland\"                                         \n#> [237] \"Syrian Arab Republic\"                                \n#> [238] \"Tajikistan\"                                          \n#> [239] \"Tanzania\"                                            \n#> [240] \"Thailand\"                                            \n#> [241] \"Timor-Leste\"                                         \n#> [242] \"Togo\"                                                \n#> [243] \"Tonga\"                                               \n#> [244] \"Trinidad and Tobago\"                                 \n#> [245] \"Tunisia\"                                             \n#> [246] \"Turkiye\"                                             \n#> [247] \"Turkmenistan\"                                        \n#> [248] \"Turks and Caicos Islands\"                            \n#> [249] \"Tuvalu\"                                              \n#> [250] \"Uganda\"                                              \n#> [251] \"Ukraine\"                                             \n#> [252] \"United Arab Emirates\"                                \n#> [253] \"United Kingdom\"                                      \n#> [254] \"United States\"                                       \n#> [255] \"Upper middle income\"                                 \n#> [256] \"Uruguay\"                                             \n#> [257] \"Uzbekistan\"                                          \n#> [258] \"Vanuatu\"                                             \n#> [259] \"Venezuela, RB\"                                       \n#> [260] \"Vietnam\"                                             \n#> [261] \"Virgin Islands (U.S.)\"                               \n#> [262] \"West Bank and Gaza\"                                  \n#> [263] \"World\"                                               \n#> [264] \"Yemen, Rep.\"                                         \n#> [265] \"Zambia\"                                              \n#> [266] \"Zimbabwe\"df_gdp |> distinct(country) |> pull()pull(distinct(df_gdp, country))df_gdp |> head()\ndf_gdp |> str()"},{"path":"first-example.html","id":"必要に応じて整形-transform-data","chapter":"3 はじめてのデータサイエンス","heading":"3.2.4 必要に応じて整形 Transform data","text":"変数が多いので、日本の部分だけ filter を使って選択します。country が Japan と一致する場合のみを選択するときは、== を使います。数値ではないので、引用符をつけます。半角を使ってください。２行目の、gdp の、4.940878e+12 は、Scientific notation と言われるもので、 \\[4.940878 \\times 10^{12} = 4,940,887,800,000\\] を意味します。e+3 は千（thousand）、e+6 は百万（million）、e+9 は、10億（billion）、e+12 は、兆（trillion）ですから、日本の、2021 年の GDP は、約5兆ドルとなります。","code":"\ndf_gdp |> filter(country == \"Japan\")\n#> # A tibble: 62 × 13\n#>    country iso2c iso3c  year     gdp status lastupdated\n#>    <chr>   <chr> <chr> <dbl>   <dbl> <lgl>  <date>     \n#>  1 Japan   JP    JPN    2021 4.94e12 NA     2022-12-22 \n#>  2 Japan   JP    JPN    2020 5.04e12 NA     2022-12-22 \n#>  3 Japan   JP    JPN    2019 5.12e12 NA     2022-12-22 \n#>  4 Japan   JP    JPN    2018 5.04e12 NA     2022-12-22 \n#>  5 Japan   JP    JPN    2017 4.93e12 NA     2022-12-22 \n#>  6 Japan   JP    JPN    2016 5.00e12 NA     2022-12-22 \n#>  7 Japan   JP    JPN    2015 4.44e12 NA     2022-12-22 \n#>  8 Japan   JP    JPN    2014 4.90e12 NA     2022-12-22 \n#>  9 Japan   JP    JPN    2013 5.21e12 NA     2022-12-22 \n#> 10 Japan   JP    JPN    2012 6.27e12 NA     2022-12-22 \n#> # ℹ 52 more rows\n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>\ndf_gdp |> filter(country == \"Japan\") |> head(2)\n#> # A tibble: 2 × 13\n#>   country iso2c iso3c  year     gdp status lastupdated\n#>   <chr>   <chr> <chr> <dbl>   <dbl> <lgl>  <date>     \n#> 1 Japan   JP    JPN    2021 4.94e12 NA     2022-12-22 \n#> 2 Japan   JP    JPN    2020 5.04e12 NA     2022-12-22 \n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>"},{"path":"first-example.html","id":"視覚化-data-visualization","chapter":"3 はじめてのデータサイエンス","heading":"3.2.5 視覚化 data visualization","text":"","code":""},{"path":"first-example.html","id":"fig-1.-日本のgdp-の経年変化を折線グラフline-graph","chapter":"3 はじめてのデータサイエンス","heading":"3.2.5.1 Fig 1. 日本のGDP の経年変化を折線グラフ（line graph）","text":"日本を選択したときに、それに名前をつけておいて、それを使うこともできますが、名前がどんどん増えるので、それに続けて、コードを書いていく方法をとっています。ggplot(aes(x = year, y = gdp)) + geom_line()の部分が、グラフを描く部分で、「x 軸を、year、y 軸を、gdp として、それを、折線グラフで描いてください」というコードです。Warning: [38;5;238mRemoved 1 row containing missing valuesと表示されています。値がない年があることを言っています。2022年のデータがないことがわかっていますから、最初から削除してこくことも可能です。","code":"\ndf_gdp |> filter(country == \"Japan\") |>\n  ggplot(aes(x = year, y = gdp)) + geom_line()df_gdp |> filter(country == \"Japan\") |>\n  ggplot(aes(x = year, y = gdp)) + geom_line()"},{"path":"first-example.html","id":"データの理解-understand-data","chapter":"3 はじめてのデータサイエンス","heading":"3.2.6 データの理解 Understand data","text":"視覚化によって見えてくることがいくつもありますね。どんなことがわかりますか。気づいたこと（observation）をあげてみましょう。コードを描くことではなく、この部分が、データサイエンスの核の部分です。気づいたことを列挙してみましょう。","code":""},{"path":"first-example.html","id":"さまざまな視覚化","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7 さまざまな視覚化","text":"","code":""},{"path":"first-example.html","id":"fig-2.-各年ごとのデータの数","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.1 Fig 2. 各年ごとのデータの数","text":"summary(df_gdp) で、データ自体は、1960年から2022年までのようですが、日本も、2022年のデータはありませんでしたから、年によって、どの程度データがあるか、調べてみます。バー・グラフを使いますが、gdp の値が、欠損値（NA: available）のデータを削除してから、グラフを描きます。","code":"\ndf_gdp |> drop_na(gdp) |> ggplot(aes(x = year)) + geom_bar()df_gdp |> drop_na(gdp) |> ggplot(aes(x = year)) + geom_bar()"},{"path":"first-example.html","id":"年のgdpの降順での表示１","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.2 2021年のGDPの降順での表示（１）","text":"最新の2021年のデータはすべてあるわけではなさそうですが、gdp の値が大きい順に並べてみましょう。","code":"\ndf_gdp |> filter(year == 2021) |> drop_na(gdp) |> arrange(desc(gdp))\n#> # A tibble: 245 × 13\n#>    country      iso2c iso3c  year     gdp status lastupdated\n#>    <chr>        <chr> <chr> <dbl>   <dbl> <lgl>  <date>     \n#>  1 World        1W    WLD    2021 9.65e13 NA     2022-12-22 \n#>  2 High income  XD    <NA>   2021 5.98e13 NA     2022-12-22 \n#>  3 OECD members OE    OED    2021 5.83e13 NA     2022-12-22 \n#>  4 Post-demogr… V4    PST    2021 5.50e13 NA     2022-12-22 \n#>  5 IDA & IBRD … ZT    IBT    2021 3.80e13 NA     2022-12-22 \n#>  6 Low & middl… XO    LMY    2021 3.64e13 NA     2022-12-22 \n#>  7 Middle inco… XP    MIC    2021 3.58e13 NA     2022-12-22 \n#>  8 IBRD only    XF    IBD    2021 3.55e13 NA     2022-12-22 \n#>  9 East Asia &… Z4    EAS    2021 3.09e13 NA     2022-12-22 \n#> 10 Upper middl… XT    <NA>   2021 2.71e13 NA     2022-12-22 \n#> # ℹ 235 more rows\n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>"},{"path":"first-example.html","id":"年のgdpの降順での表示２","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.3 2021年のGDPの降順での表示（２）","text":"最初に、World と表示され、グループや、カテゴリーのデータもあるようですから、それを、まず、削除することが必要です。region の列を見ると、World などは、Aggregates となっているので、そのようなものを削除すればよさそうです。数値の大きい順に並べたいので、desc 降順（descending order）にします。これは、グラフではありませんが、これも一つの視覚化とも考えられないことはありません。上位７カ国は、United States, China, Japan, Germany, India, United Kingdom, France であることがわかりました。8番目は、Italy でここまでが、GDP が 2兆ドルを越している国となります。","code":"\ndf_gdp |> filter(year == 2021, region != \"Aggregates\") |> \n  drop_na(gdp) |> arrange(desc(gdp))\n#> # A tibble: 196 × 13\n#>    country      iso2c iso3c  year     gdp status lastupdated\n#>    <chr>        <chr> <chr> <dbl>   <dbl> <lgl>  <date>     \n#>  1 United Stat… US    USA    2021 2.33e13 NA     2022-12-22 \n#>  2 China        CN    CHN    2021 1.77e13 NA     2022-12-22 \n#>  3 Japan        JP    JPN    2021 4.94e12 NA     2022-12-22 \n#>  4 Germany      DE    DEU    2021 4.26e12 NA     2022-12-22 \n#>  5 India        IN    IND    2021 3.18e12 NA     2022-12-22 \n#>  6 United King… GB    GBR    2021 3.13e12 NA     2022-12-22 \n#>  7 France       FR    FRA    2021 2.96e12 NA     2022-12-22 \n#>  8 Italy        IT    ITA    2021 2.11e12 NA     2022-12-22 \n#>  9 Canada       CA    CAN    2021 1.99e12 NA     2022-12-22 \n#> 10 Korea, Rep.  KR    KOR    2021 1.81e12 NA     2022-12-22 \n#> # ℹ 186 more rows\n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>"},{"path":"first-example.html","id":"fig-3.-2021年時のgdp上位7カ国のgdp経年変化","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.4 Fig 3. 2021年時のGDP上位7カ国のGDP経年変化","text":"ここでは、最初に、filter を使って、7カ国のデータを選択しています。 そのときには、%% として、国名を、combine するといういみで、c() とひとまとめにします。数字ではなく、文字なので、引用符で囲んでいます。この場合は、single quote でも構いませんが、半角を使ってください。このグラフからは、どのようなことがわかりますか。気づいたことを書いてみましょう。もう少し、このようなグラフをみてみたいというような、メモも大切です。","code":"\ndf_gdp |> filter(iso2c %in% c(\"US\", \"CN\", \"JP\", \"DE\", \"IN\", \"GB\", \"FR\")) |>\n  ggplot(aes(x = year, y = gdp, col = iso2c)) + geom_line()\n#> Warning: Removed 10 rows containing missing values\n#> (`geom_line()`).df_gdp |> filter(iso2c %in% c(\"US\", \"CN\", \"JP\", \"DE\", \"IN\", \"GB\", \"FR\")) |>\n  ggplot(aes(x = year, y = gdp, col = iso2c)) + geom_line()"},{"path":"first-example.html","id":"fig-4.-世界のgdp-における割合１","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.5 Fig 4. 世界のGDP における割合（１）","text":"まず、下の部分が新しいですが、ここでは、年毎にグループにして、その上で、新しい dgp_ratio という名前の列を追加し、その gdp の値を、gdp 合計で割っています。すなわち、世界の、GDP における割合が計算されています。下の部分では、geom_area を使って、fill=iso2c により、iso2c ごとに、違う色を塗って、position = “stack” により、積み上げ型の、グラフを描き、境目がわかりやすいように、0.3 の太さの黒の線を描いてください。また、y 軸は、小数点以下を省いたパーセント表示に変えてください。というコードです。","code":"\ndf_gdp |> \n  filter(region != \"Aggregates\") |> drop_na(gdp) |> \n  group_by(year) |> mutate(gdp_ratio = gdp/sum(gdp)) |> ungroup() |>\n  filter(iso2c %in% c(\"US\", \"CN\", \"JP\", \"DE\", \"IN\", \"GB\", \"FR\"))  |>\n  ggplot(aes(x = year, y = gdp_ratio, fill = iso2c)) + geom_area() +\n  geom_line(col = \"black\", position = \"stack\", linewidth = 0.3) + \n  scale_y_continuous(labels = scales::percent_format(accuracy = 1))  group_by(year) |> mutate(gdp_ratio = gdp/sum(gdp)) |> ungroup() |>  ggplot(aes(x = year, y = gdp_ratio, fill = iso2c)) + geom_area() +\n  geom_line(col = \"black\", position = \"stack\", linewidth = 0.3) + \n  scale_y_continuous(labels = scales::percent_format(accuracy = 1))"},{"path":"first-example.html","id":"fig-4.-世界のgdp-における割合２","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.6 Fig 4. 世界のGDP における割合（２）","text":"これは、上から、iso2c の アルファベットの順番になっていますが、積み上げの順序を変更することもできます。これらは、世界全体の GPT における割合です。どのようなことがわかりますか。主要国で、60%〜70% を占めていることがわかります。それぞれの国や、幾つかの国の影響力も、ある程度みることができるように見えます。気づいたこと、疑問に思ったことなどを、書き出してみてください。GDP が大きな国と、小さな国があるのはわかりますが、それは、どのように分布しているのでしょうか。","code":"\ndf_gdp |> \n  filter(region != \"Aggregates\") |> drop_na(gdp) |> \n  group_by(year) |> mutate(gdp_ratio = gdp/sum(gdp)) |> ungroup() |>\n  filter(iso2c %in% c(\"US\", \"CN\", \"JP\", \"DE\", \"IN\", \"GB\", \"FR\"))  |>\n  mutate(iso2co = factor(iso2c, levels = c(\"IN\", \"CN\", \"FR\", \"GB\", \"DE\", \"JP\", \"US\"))) |>\n  ggplot(aes(x = year, y = gdp_ratio, fill = iso2co)) + geom_area() +\n  geom_line(col = \"black\", position = \"stack\", linewidth = 0.3) + \n  scale_y_continuous(labels = scales::percent_format(accuracy = 1))"},{"path":"first-example.html","id":"fig-5.-2021年の世界の国のgdpの分布１","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.7 Fig 5. 2021年の世界の国のGDPの分布（１）","text":"小さいところに集中していることがわかりますが、scale_x_log10() を加え、対数軸をとってみます。\\(log10(1000) = 3\\), \\(log10(1000000) = 6\\), \\(log10(1000000000) = 9\\) などになります。","code":"\ndf_gdp |> drop_na(gdp) |> \n  filter(year == 2021) |> filter(region != \"Aggregates\") |>\n  ggplot(aes(gdp)) + geom_histogram()\n#> `stat_bin()` using `bins = 30`. Pick better value with\n#> `binwidth`."},{"path":"first-example.html","id":"fig-6.-2021年の世界の国のgdpの分布２","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.8 Fig 6. 2021年の世界の国のGDPの分布（２）","text":"幅を変更したり、分ける個数を変更するには binwidth = 0.5 や、bins = 20 を、geom_histogram() のかっこの中に入れます。","code":"\ndf_gdp |> drop_na(gdp) |> \n  filter(year == 2021) |> filter(region != \"Aggregates\") |>\n  ggplot(aes(gdp)) + geom_histogram() + scale_x_log10()\n#> `stat_bin()` using `bins = 30`. Pick better value with\n#> `binwidth`."},{"path":"first-example.html","id":"fig-7.-2021年の世界の国のgdpの分布３","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.9 Fig 7. 2021年の世界の国のGDPの分布（３）","text":"また、密度曲線に変えるには、geom_density を使います。","code":"\ndf_gdp |> drop_na(gdp) |> \n  filter(year == 2021) |> filter(region != \"Aggregates\") |>\n  ggplot(aes(gdp)) + geom_density() + scale_x_log10()"},{"path":"first-example.html","id":"fig-8.-2021年の世界の国のgdpの分布４","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.10 Fig 8. 2021年の世界の国のGDPの分布（４）","text":"これは、2021年のデータですが、density の変化を見てみます。alpha の値は透明度です。","code":"\ndf_gdp |> drop_na(gdp) |> \n  filter(year %in% c(1961, 1971, 1981, 1991, 2001, 2011, 2021)) |>\n  ggplot(aes(gdp, fill = factor(year))) + geom_density(alpha = 0.4) + scale_x_log10()"},{"path":"first-example.html","id":"fig-9.-2021年の世界の国のgdpの分布５","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.11 Fig 9. 2021年の世界の国のGDPの分布（５）","text":"少しみにくいので、分けてみます。","code":"\ndf_gdp |> drop_na(gdp) |> \n  filter(year %in% c(1971, 1981, 1991, 2001, 2011, 2021)) |>\n  ggplot(aes(gdp, fill = factor(year))) + \n  geom_density() + scale_x_log10() + facet_wrap(~year)"},{"path":"first-example.html","id":"fig-10.-地域ごとの-gdp-の分布","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.12 Fig 10. 地域ごとの GDP の分布","text":"いくつかのグループごとに分布をみてみることも可能です。それには、Boxplot が有効です。","code":"\ndf_gdp |> drop_na(gdp) |> filter(region != \"Aggregates\") |>\n  drop_na(region) |> filter(year %in% c(2021)) |>\n  ggplot(aes(gdp, region, fill = region)) + \n  geom_boxplot() + scale_x_log10() + labs(y = \"\") + \n  theme(legend.position = \"none\")"},{"path":"first-example.html","id":"fig-11.-収入の多寡による分類ごとの-gdp-分布","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.13 Fig 11. 収入の多寡による分類ごとの GDP 分布","text":"これからも、いろいろなことがわかりますね。","code":"\ndf_gdp |> drop_na(gdp) |> filter(region != \"Aggregates\") |>\n  drop_na(income) |> filter(year %in% c(2021)) |>\n  mutate(level = factor(income, c(\"High income\", \"Upper middle income\", \"Lower middle income\", \"Low income\"))) |>\n  ggplot(aes(gdp, level, fill = income)) + \n  geom_boxplot() + scale_x_log10() + labs(y = \"\") + \n  theme(legend.position = \"none\")"},{"path":"first-example.html","id":"世界地図の準備","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.14 世界地図の準備","text":"地図で、国の income level をみてみましょう。","code":"\nlibrary(maps)\ngdp_short <- df_gdp |> filter(year == 2021, region != \"Aggregates\") |>\n  select(iso2c, gdp, income)\nmap_world <- map_data('world')\nmap_gdp <- map_world |> \n  mutate(iso2c = iso.alpha(region, n=2)) |> \n  left_join(gdp_short, by = \"iso2c\") \nhead(map_gdp)\n#>        long      lat group order region subregion iso2c\n#> 1 -69.89912 12.45200     1     1  Aruba      <NA>    AW\n#> 2 -69.89571 12.42300     1     2  Aruba      <NA>    AW\n#> 3 -69.94219 12.43853     1     3  Aruba      <NA>    AW\n#> 4 -70.00415 12.50049     1     4  Aruba      <NA>    AW\n#> 5 -70.06612 12.54697     1     5  Aruba      <NA>    AW\n#> 6 -70.05088 12.59707     1     6  Aruba      <NA>    AW\n#>          gdp      income\n#> 1 3126019399 High income\n#> 2 3126019399 High income\n#> 3 3126019399 High income\n#> 4 3126019399 High income\n#> 5 3126019399 High income\n#> 6 3126019399 High income"},{"path":"first-example.html","id":"fig-12.-income-level-による色分け地図","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.15 Fig 12. Income Level による色分け地図","text":"","code":"\nmap_gdp |> mutate(income_level = factor(income, levels = c(\"High income\", \"Upper middle income\", \"Lower middle income\", \"Low income\", \"Not classified\", NA))) |>\n  ggplot() +\n  geom_map(aes(long, lat, map_id = region, fill = income_level), map = map_world, col = \"black\", size = 0.1) \n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2\n#> 3.4.0.\n#> ℹ Please use `linewidth` instead.\n#> This warning is displayed once every 8 hours.\n#> Call `lifecycle::last_lifecycle_warnings()` to see where\n#> this warning was generated.\n#> Warning in geom_map(aes(long, lat, map_id = region, fill =\n#> income_level), : Ignoring unknown aesthetics: x and y"},{"path":"first-example.html","id":"fig-13.-gdp-による色分け地図","chapter":"3 はじめてのデータサイエンス","heading":"3.2.7.16 Fig 13. GDP による色分け地図","text":"","code":"\nmap_gdp |>\n  ggplot() +\n  geom_map(aes(x=long, y=lat, map_id = region, fill = gdp), map = map_world, col = \"black\", size = 0.1) \n#> Warning in geom_map(aes(x = long, y = lat, map_id = region,\n#> fill = gdp), : Ignoring unknown aesthetics: x and y"},{"path":"first-example.html","id":"練習","chapter":"3 はじめてのデータサイエンス","heading":"3.3 練習","text":"それぞれのグラフから、わかったこと、問いなどを列挙してみましょう。Fig 1 の　Japan の部分を他の国や、グループ（World など）に変えてみてください。何がわかりますか。Fig 3 の iso2c で選択する、国を変更してください。何がわかりますか。Fig 4 または Fig 5 の iso2c の部分を他の国に変更してください。何がわかりますか。Fig 5 または Fig 6 の、区間の幅や、数を 変更してみてください。何がわかりますか。Fig 7, Fig 8, Fig 9 の年を変更してみてください。何がわかりますか。Fig 12, Fig 13 の年を変更してみてください。何がわかりますか。","code":""},{"path":"first-example.html","id":"プロジェクト","chapter":"3 はじめてのデータサイエンス","heading":"3.4 プロジェクト","text":"他のデータで、同様のことをしてみましょう。最初に、gdp = \"NY.GDP.MKTP.CD\" としましたが、GNI per capita, Atlas method (current US$): NY.GNP.PCAP.CD に変えてみましょう。World Development Indicators のサイトの下にある、Data Themes（テーマ）から自分が調べたいテーマを選び、そのテーマから、データコードを取得して、同様の分析をしてみてください。データがあまりない場合もありますので、ある程度データが多いものを選択することをお勧めします。","code":"\ndf_gnppcap <- WDI(country = \"all\", \n              indicator = c(gnppcap = \"NY.GNP.PCAP.CD\"), \n              extra = TRUE)"},{"path":"first-example.html","id":"まとめ","chapter":"3 はじめてのデータサイエンス","heading":"3.5 まとめ","text":"今回は、経済指標である、GDP を使いました。データサイエンスについて少しずつ、学んでいきます。コードの説明は、簡単にしかしていませんから、理解するのは難しいと思いますが、いくつかのことは、ご理解いただけると思います。それほど、長くはない、コードで、データを見ていく。R は対話型（interactive）のプログラミング言語と言われています。それほど、長くはない、コードで、データを見ていく。R は対話型（interactive）のプログラミング言語と言われています。コードに続けて、結果が表示されるので、コードと出力の対応が見やすい。また、コメントや説明も併記することができる。これは、RMarkdown という形式の中で、コードを書いていることによるものです。RMarkdown は、再現性（reproducibility）と、プログラム・コードの内容をコンピュータにわかるようにでなく、人間にもわかるように記述する（Literate Programming）を実現しています。コードに続けて、結果が表示されるので、コードと出力の対応が見やすい。また、コメントや説明も併記することができる。これは、RMarkdown という形式の中で、コードを書いていることによるものです。RMarkdown は、再現性（reproducibility）と、プログラム・コードの内容をコンピュータにわかるようにでなく、人間にもわかるように記述する（Literate Programming）を実現しています。視覚化（Visualization）によって、わかることが色々とある。また、視覚化の方法もたくさんあり、いろいろな見方をすることで、データについての理解が深まっていく。視覚化（Visualization）によって、わかることが色々とある。また、視覚化の方法もたくさんあり、いろいろな見方をすることで、データについての理解が深まっていく。視覚化を通して、データを理解すること、問いを持ち、他の視覚化などを用いて、さらに、理解を深めることがたいせつ。視覚化を通して、データを理解すること、問いを持ち、他の視覚化などを用いて、さらに、理解を深めることがたいせつ。理解したことを元にして、さらに、そのデータ、または、他のデータを使って、新たな発見をしていく。理解したことを元にして、さらに、そのデータ、または、他のデータを使って、新たな発見をしていく。統計的な指標も用いますが、それらによって、新しい知識を生み出すとも表現しますが、そのような営み全体が、データサイエンスの核をなす部分だと思います。","code":""},{"path":"wdi-site.html","id":"wdi-site","chapter":"4 世界開発指標とオープンデータ","heading":"4 世界開発指標とオープンデータ","text":"最初の例として紹介した、はじめてのデータサイエンスでは、世界銀行（World Bank）の 世界開発指標（WDI）のひとつである、GDP（Gross Domestic Product 国内総生産）のデータを使いました。「データサイエンスをはじめましょう」では、世界開発指標をこれからも、頻繁に活用しますので、世界開発指標が、どのようなものか確認しておきましょう。また、世界開発指標に代表されるオープンデータによって誰でも世界の課題を知り、向き合うことができるようになっています。そのオープンデータは、どのようなものなのかも、見ていきたいと思います。","code":""},{"path":"wdi-site.html","id":"世界開発指標wdi","chapter":"4 世界開発指標とオープンデータ","heading":"4.1 世界開発指標（WDI）","text":"世界開発指標は、貧困撲滅と開発援助とに取り組んでいる金融機関である世界銀行が提供している、オープンデータの一つで、世界銀行は、他にも、たくさんのデータを提供しています。世界開発指標は、英語では、World Development Indicators（WDI）と呼びますので、以下、省略形の WDI を使います。","code":""},{"path":"wdi-site.html","id":"概要","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.1 概要","text":"まず、簡単に概要を述べておきましょう。World Development Indicators (WDI) は、世界銀行が開発に関する各国間比較可能なデータの集大成である1400の時系列指標（World Bank’s premier compilation cross-country comparable data development; 1400 time series indicators）からなっており、それらは、テーマ別にも分類されています。また、さまざまな形式（CSV, Excel など）で、データを検索し、ダウンロードできるように整理されており、さらに、API （Application Program Interface：アプリケーションのプログラムを使ってデータを利用するための仕様）も整備されており、「データサイエンスをはじめましょう」で利用する コンピュータ言語 R でも、簡単に、検索やデータのダウンロードが可能なパッケージが提供されています。","code":""},{"path":"wdi-site.html","id":"三つの入り口","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.2 三つの入り口","text":"世界開発指標（WDI） （World Development Indicators）世界銀行オープンデータ （World Bank Open Data）世界開発指標（WDI）の統計表 （World Development Indicators Statistical Tables）三つのサイトのリンクを書きました。一つ一つみていきましょう。まず、英語を読むことが苦手な場合は、ブラウザー（Google Chrome, Edge, Safari などのホームページ閲覧ソフト）の自動翻訳機能を使うのも良いでしょう。しかし、自動翻訳機能を利用していると、リンク先に飛べなかったり、いくつかの機能が使えないこともありますので、正常に機能しないときは、自動翻訳機能を一旦 にして利用してください。","code":""},{"path":"wdi-site.html","id":"世界開発指標wdi-1","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.3 世界開発指標（WDI）","text":"まずは、このサイトがお薦めです。上の方に以下のように書かれています。World Development Indicators compilation relevant, high-quality, internationally comparable statistics global development fight poverty. database contains 1,400 time series indicators 217 economies 40 country groups, data many indicators going back 50 years.世界開発指標は、世界的な開発と、貧困との闘いに関連する、高品質で、国際的に比較可能な統計をまとめたものです。データベースには、217の経済と40以上の国グループの1,400の時系列指標が含まれており、多くの指標のデータは50年以上前にさかのぼることができます。この文章の下には、テーマ別のアイコンがあり、そこから、それぞれのテーマについてみていくことができるようになっています。さらにその下には、最近のニュースやお薦めの記事などが掲載されています。","code":""},{"path":"wdi-site.html","id":"テーマさまざまなトピック課題","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.3.1 テーマ（さまざまなトピック・課題）","text":"貧困と不平等（Poverty Inequality）：貧困、繁栄、消費、所得分配人々（People）：人口動態、教育、労働、健康、ジェンダー環境（Environment）：農業、気候変動、エネルギー、生物多様性、水、衛生経済（Economy）：成長、経済構造、所得と貯蓄、貿易、労働生産性国家と市場（States Markets）：ビジネス、株式市場、軍事、通信、輸送、テクノロジーグローバルリンク（Global Links）：債務、貿易、援助への依存、難民、観光、移住","code":""},{"path":"wdi-site.html","id":"それぞれのテーマについて","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.3.2 それぞれのテーマについて","text":"一つテーマを選んで中身をみてみましょう。テーマを選んで、中身をみてみると、一番上に、最近のトピックなどが書かれ、次に、そのテーマについての概要や課題が書かれています。データの集め方や、どのように標準化するかなどについての説明もあります。その下に、注目の指標（Featured Indicators）として、主要な WDI の指標のリストがあり、さらにその下には、データについての説明などが書かれています。","code":""},{"path":"wdi-site.html","id":"注目の指標featured-indicators","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.3.3 注目の指標（Featured Indicators）","text":"この指標も、いくつかのグループに分けられていますが、それぞれの指標には、以下のような情報があります。Indicator 指標の名称\nマウスを当てると、より詳しい概要をみることができます。\nIndicator 指標の名称マウスを当てると、より詳しい概要をみることができます。Code 指標コード\nR の WDI パッケージなど、API を利用して、データを取得するときに必要なコードです。\nこのコードをクリックすると、World（世界）に関する、この指標のデータをグラフが表示されます。世界に対応するデーががない場合もあります。\nCode 指標コードR の WDI パッケージなど、API を利用して、データを取得するときに必要なコードです。R の WDI パッケージなど、API を利用して、データを取得するときに必要なコードです。このコードをクリックすると、World（世界）に関する、この指標のデータをグラフが表示されます。世界に対応するデーががない場合もあります。このコードをクリックすると、World（世界）に関する、この指標のデータをグラフが表示されます。世界に対応するデーががない場合もあります。Time coverage どの程度の期間のデータがあるかの概要\n1960年から10年刻みでデータがどの程度あるかを確認することができます。\nTime coverage どの程度の期間のデータがあるかの概要1960年から10年刻みでデータがどの程度あるかを確認することができます。Region coverage 地域ごとのデータの収集状況の概要\nラテンアメリカ、南アジア、サハラ砂漠以南のアフリカ、ヨーロッパと中央アジア、中東と北アフリカ、東アジアと太平洋諸国、北アメリカごとに、データがどの程度揃っているかを確認することができます。\nRegion coverage 地域ごとのデータの収集状況の概要ラテンアメリカ、南アジア、サハラ砂漠以南のアフリカ、ヨーロッパと中央アジア、中東と北アフリカ、東アジアと太平洋諸国、北アメリカごとに、データがどの程度揃っているかを確認することができます。Get data データの取得\nAPI、XLS、CSV、DataBank とあり、データを、取得するための情報や、Excel、コンマで区切られてテキストデータが取得可能で、また、DataBank では、World Bank のデータの、表や、グラフ、地図、各データの情報などを調べることができます。この DataBank の利用については、別の項で説明します。\nGet data データの取得API、XLS、CSV、DataBank とあり、データを、取得するための情報や、Excel、コンマで区切られてテキストデータが取得可能で、また、DataBank では、World Bank のデータの、表や、グラフ、地図、各データの情報などを調べることができます。この DataBank の利用については、別の項で説明します。","code":""},{"path":"wdi-site.html","id":"備考","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.3.4 備考","text":"はじめてのデータサイエンスで利用した、GDP の指標は、テーマから経済（Economy）を選択すると、Featured Indicator （注目の指標）の一番上にあります。まずは、GDP について、上に書いた、Indicator、Code、Time Coverage、Region Coverage、GetData を確認してみることをお勧めします。このサイトにあるのは、基本的な指標だけです。すべての指標についての情報を得るときには、この次とその次の項目を見てください。しかし、全体では、1400も指標があり、何をみたらよいか、かえって混乱してしまうかもしれません。まずは、このような基本的なデータで、使い方を把握してから、興味のあるデータを調べるのが良いと思います。また、基本的な指標を調べると、その指標のページから関連した指標についても調べることができます。WDI は、すべての年、すべての国についてのデータがあるわけではありません。前もって、期間や、地域ごとにどの程度データがあるかを見ておくことはとても有効です。それぞれの指標についての概要や特定の国についての情報は、次の項目から見ることも可能です。このページに掲載されている指標で興味をもったものについて、指標の名称や指標コードをコピー・ペーストなどで、記録しておくことをお勧めします。","code":""},{"path":"wdi-site.html","id":"世界銀行オープンデータ","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.4 世界銀行オープンデータ","text":"世界銀行のオープンデータ全体にアクセスできるサイトです。その下には、いくつかのグラフや、最近のニュースやトピックが書かれており、さらにその下には、Resources（さらに…）といくつかの項目があります。Open Data Catalog、Data Bank、などと共に、World Development Indicators もあります。このWorld Development Indicators (WDI) を選択すると、最初に紹介したサイトに飛ぶことができます。また、Data Bank を選択すると、WDI の説明に登場した、ダッシュボートに飛ぶことができ、WDI だけでなく、他のデータについても、調べることができます。上の検索窓の下に、Country（国）と Indicators（指標）と書いてあります。これらから、WDI について調べることができます。","code":""},{"path":"wdi-site.html","id":"国別サイト","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.4.1 国別サイト","text":"Country（国別）のサイトを選択すると、国のリストが出てきます。J のところに、Japan（日本）がありますから、選択してみてください。日本のさまざまな指標と小さなグラフが出てきます。Indicator（指標）、Recent Values（直近の値）、Trend（傾向）が表示されます。指標をクリックすると、大きなグラフが出てきます。その指標のサイトですから、そこで、その指標についての他の国の状況などを確認することができます。そこでは、選択した指標と似た指標が選択できたり、もっと詳しいことをしらべるデータバンク（Data Bank）へのリンクもあります。このサイトから、データをダウンロードすることもできるようになっています。また、国別サイトの右の方には、地域や、経済的状況などによって、グループに分けてある帯もあります。その一番下には、World （世界）もありますから、世界全体について見てみたり、６段階の収入（GNI per Capita：一人当たりの国民総生産）の階級に分けた階級ごとの値を見ることもできるようになっています。","code":""},{"path":"wdi-site.html","id":"指標別サイト","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.4.2 指標別サイト","text":"Indicators（指標）を選択すると、トピックに分けて、指標が並んでいます。よく見ると、一番上に、Featured Indicators（特徴的な指標） と、Indicators（すべての指標） とあり、最初に開いているのは、特徴的な指標の方であることがわかります。すべての指標（Indicators）の方を開けると、よりたくさんの指標を見ることができます。トピックは、以下のものに分かれています。Agriculture & Rural Development 農業と農村開発Aid Effectiveness 援助の有効性Climate Change 気候変動Economy & Growth 経済と成長Education 教育Energy & Mining エネルギーと鉱業Environment 環境External Debt 対外債務Financial Sector 金融セクターGender 性別Health 健康Infrastructure インフラPoverty 貧困Private Sector 民間部門Public Sector 公共部門Science & Technology 科学技術Social Development 社会開発Social Protection & Labor 社会的保護と労働Trade 貿易Urban Development 都市開発それぞれの指標を選択すると、グラフが表示される画面が出てきます。それは、上で国別のところから選択したものと同じです。はじめてのデータサイエンスで、GDP を調べるときには、Economy Growth のトピックにある、GDP (current US$) のWDI コード NY.GDP.MKTP.CD を指定して、データを取得しました。この、Indicator Code （WDI コード）は、Details (詳細) を見ると、その指標の概要とともに、書いてあります。 そのデータコードは、そのページの上の URL にも表示されています。WDI という R のパッケージを使って、データを読み込みました。そのときに必要だったのが、この Indicator Code （WDI コード）でした。あとで、詳しく調べてみたい指標がありましたら、その、WDIコード（Indicator Code）を、あとで、使えるように、メモなどに貼り付けて（Copy-Paste）おくことを、お勧めします。","code":""},{"path":"wdi-site.html","id":"世界開発指標wdiの統計表","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.5 世界開発指標（WDI）の統計表","text":"三つ目の入り口の説明をしましょう。英語名は、World Development Indicators Statistical Tables となっています。WDI の一番下の、Useful Resouces （資料）の中にもありますし、それぞれの、テーマの中にもリンクがあります。世界開発指標（WDI）の統計表 のリンクを開くと、WDI が7つのグループに分けられています。World View 世界の姿World View 世界の姿Poverty Shared Prosperity 貧困と富の分配Poverty Shared Prosperity 貧困と富の分配People 人々People 人々Environment 環境Environment 環境Economy 経済Economy 経済States Market 国と市場States Market 国と市場Global Links 世界の繋がりGlobal Links 世界の繋がりWDI のテーマとほぼ一致しています。それぞれのテーマを選択すると、その説明とともに、さらに項目に分かれており、そのデータを見たり、データを PDF または Excel 形式で、ダウンロードして利用できるようになっています。","code":""},{"path":"wdi-site.html","id":"課題","chapter":"4 世界開発指標とオープンデータ","heading":"4.1.6 課題","text":"世界開発指標（WDI）の、データで、調べてみたい データコードをいくつか見つけて、書き出してください。あとで利用しやすいように、データ名と、WDI コードをコピーして、メモ帳などに貼り付けておくと良いでしょう。さらに、そのコードに関する情報やリンクを、一緒に記録としておくと、あとで便利です。","code":""},{"path":"wdi-site.html","id":"オープンデータopen-data","chapter":"4 世界開発指標とオープンデータ","heading":"4.2 オープンデータ（Open Data）","text":"世界開発指標（WDI）のように、公開されているデータを、オープンデータと呼びます。世界銀行などの、国際機関や、国際的に活動する非営利団体、それぞれの国の公的機関が、膨大なデータを公開（オープンに）し、誰でも利用できるようになってきています。パブリックデータ（Public Data）とも呼ばれますが、正確な定義があるわけではなく、各機関によって、少しずつ考え方が違う面もあります。しかし、そのリーダーとでもいうべき、世界銀行は、オープンデータについて、厳密に定義をしています。世界銀行のオープンデータ（Open Data）の定義を見てみましょう。","code":""},{"path":"wdi-site.html","id":"オープンデータの定義open-data-defined","chapter":"4 世界開発指標とオープンデータ","heading":"4.2.1 オープンデータの定義（Open Data Defined）","text":"オープンデータという言葉は、厳密な意味を持っています。データまたはコンテンツは、出所が明示されオープンという性質が維持されれば、誰でも自由に利用、再利用、再配布できるものを言います。データは法的にオープンでなければなりません。つまり、パブリックドメインに置かれ、最小限の制限で自由に使用できなければなりません。データは法的にオープンでなければなりません。つまり、パブリックドメインに置かれ、最小限の制限で自由に使用できなければなりません。データは技術的にオープンでなければなりません。つまり、誰でも自由に使える一般的なソフトウェアツールを使ってデータにアクセスし、機械で読み取ることが可読な電子フォーマットで提供されていなければならなりません。パスワードやファイアウォールによる制限を受けずに、公共のサーバーで、だれでもアクセスできなければなりません。また、オープンデータを見つけやすくするために、さまざまな組織がオープンデータカタログを作成し管理してく必要があります。データは技術的にオープンでなければなりません。つまり、誰でも自由に使える一般的なソフトウェアツールを使ってデータにアクセスし、機械で読み取ることが可読な電子フォーマットで提供されていなければならなりません。パスワードやファイアウォールによる制限を受けずに、公共のサーバーで、だれでもアクセスできなければなりません。また、オープンデータを見つけやすくするために、さまざまな組織がオープンデータカタログを作成し管理してく必要があります。上の定義で使われている、一つ一つの言葉について、詳細は述べませんが、最初に、はじめてのデータサイエンスで、例を示し、この章で、WDI を例にとって説明してきましたので、みなさんも、基本的な部分は、ご理解いただいたと思います。","code":""},{"path":"wdi-site.html","id":"オープンデータの意義","chapter":"4 世界開発指標とオープンデータ","heading":"4.2.2 オープンデータの意義","text":"一旦、足を止めて、みなさんに考えていただきたいと思います。オープンデータは誰に対してオープン（公開）になっているのでしょうか。オープンデータは誰に対してオープン（公開）になっているのでしょうか。公的（Pablic）データというとき、公的とはどのような意味でしょうか。公的（Pablic）データというとき、公的とはどのような意味でしょうか。なぜ、膨大な公的データのオープン化が進み、たいせつにされているのでしょうか。なぜ、膨大な公的データのオープン化が進み、たいせつにされているのでしょうか。","code":""},{"path":"wdi-site.html","id":"オープンデータの利活用","chapter":"4 世界開発指標とオープンデータ","heading":"4.2.3 オープンデータの利活用","text":"さまざまな国際機関では、データを、Excel 形式や、CSV (Comma Separated Values）形式などで、提供する以外に、ダッシュボード形式で、グラフを生成するなどして、データを視覚化をある程度できるようにしています。さらに、コンピュータのアプリケーションでデータを直接取得できるように、API (Application Program Interface) を提供しています。世界開発指標（WDI）は、この章で説明してきたように、世界の状況やそれぞれの国についての、1400余のさまざまな指標についてのデータを、長期間にわたって（1960年ごろから）提供している基本的なデータベースで、最初に調べてみることをお勧めします。さまざまな課題を理解するためにも、たいせつだと思います。さらに、WDI は、この膨大な指標についてのデータすべてを統一した形式で提供しているという特徴があります。したがって、複数の指標についての関係を調べることなども、容易にです。実は、データサイエンスを始めると、違ったデータを一つにまとめて分析することは、技術的にそれなりにハードルがあります。それが、WDI では、ほとんどないのです。そのために、非常に使いやすいデータベースになっています。データを、ダウンロードして、読み込むことが必要になりますが、API が整備されていると、分析ソフト（「データサイエンスをはじめましょう」では R を中心的に使いますが）に直接、取り込むことができるので、Reproducibility （再現可能性）も担保できます。はじめてのデータサイエンスでも、すべてのコード（コンピュータプログラム）が書かれていたと思います。基本的には、これを、たとえば、コピー、ペーストすれば、皆さんのコンピュータでも同じ結果が得られるということです。これについては、まだ、みなさんは、実感が持てないかもしれませんね。これから、少しずつ、説明していきます。プログラミング言語 Rを使い始める前に、データに慣れることも大切だと思いますから、次には、さまざまな、オープンデータについて、簡単な説明と共に、付随している、ダッシュボードの利用の仕方も説明しながら、みていきたいと思います。","code":""},{"path":"notebook.html","id":"notebook","chapter":"5 データサイエンス ノートブック","heading":"5 データサイエンス ノートブック","text":"データサイエンスの記録について書きます。 また、そのために、必要なツールについても、少しだけ説明します。R で、R Markdown などを使って、データサイエンスをしていくことがお勧めですが、まず、データサイエンスに慣れるために、ダッシュボードを使ってデータを見ていくことを、第一部で紹介します。そのときにも、ノートを作成し、記録をとっていくことは、とても大切です。その説明を書きます。","code":""},{"path":"notebook.html","id":"再現性","chapter":"5 データサイエンス ノートブック","heading":"5.1 再現性","text":"","code":""},{"path":"notebook.html","id":"技術的なこと","chapter":"5 データサイエンス ノートブック","heading":"5.2 技術的なこと","text":"","code":""},{"path":"notebook.html","id":"ブラウザーの言語と翻訳機能","chapter":"5 データサイエンス ノートブック","heading":"5.2.1 ブラウザーの言語と翻訳機能","text":"","code":""},{"path":"notebook.html","id":"画像","chapter":"5 データサイエンス ノートブック","heading":"5.2.2 画像","text":"","code":""},{"path":"notebook.html","id":"html-要素","chapter":"5 データサイエンス ノートブック","heading":"5.2.3 HTML 要素","text":"リンクリンクiframe リンクiframe リンク","code":""},{"path":"notebook.html","id":"データファイル","chapter":"5 データサイエンス ノートブック","heading":"5.2.4 データファイル","text":"文字化け文字化け形式形式Excel と Google Spread SheetExcel と Google Spread Sheet","code":""},{"path":"publicdata-site.html","id":"publicdata-site","chapter":"6 オープンデータ","heading":"6 オープンデータ","text":"","code":""},{"path":"publicdata-site.html","id":"概要-1","chapter":"6 オープンデータ","heading":"6.1 概要","text":"すでに、オープンデータについて、説明をし、その例として、世界銀行の世界開発指標（World Development Indicators (WDI)）の説明をし、その一つである、GDP（Gross Domestic Product 国内総生産）を例にとって、はじめてのデータサイエンスというタイトルで、データサイエンスの実際について一つの例を見ました。第一部では、世界銀行や、経済協力開発機構（OECD）、国際連合（United Nations）などの、国際機関のオープンデータや、日本のデータとして、政府機関統計（e-Stat）の紹介をします。さらに、実際に、それぞれのサイトのオープンデータを、対話型（Interactive）の、ダッシュボード（dashboard）呼ばれている機能の使い方を紹介しながら、データ自身を見ていきます。さらに、実際のデータの取得（ダウンロード）にも触れ、それぞれの期間が提供する API（アプリケーションプログラムインターフェース）の活用についても、簡単に触れていきます。第二部で、R を使ったデータサイエンスについて学びますが、その例においても、いくつかのデータを用いる機会がありますので、その準備としての位置付けです。詳細は、第三部で説明します。R を使ったデータサイエンスを、早く学びたい方は、この第一部をスキップして、第二部から読んでくださって構いません。しかし、みなさんの中には、R を使うところまでできるかは自信がないけれど、実際のオープンデータを見て、データサイエンスではどのようなことを考えるのかを体験してみたいという方もおられると思い、第一部を書いています。同時に、実際に、オープンデータを活用して、ある課題について調べるときには、基本的なオープンデータについての知識は有用です。どこに、そのようなデータがあるかを見つけることがたいせつであるとともに、データサイエンスはなんと言っても、理論ではなく、実証的なものですから、実際のデータに触れながら、学んでいくのがたいせつだと考えているからです。こんなふうに、データがたくさん、公開されているのか、と、そんな感触を持っていただければと思います。","code":""},{"path":"publicdata-site.html","id":"さまざまな機関のオープンデータ","chapter":"6 オープンデータ","heading":"6.2 さまざまな機関のオープンデータ","text":"すでに少しだけ紹介した世界銀行以外にも、それぞれの機関がデータを提供しています。どれも、少しずつ使いやすくなってきています。少しずつ、いくつかのデータベースに、アクセスして、できれば、API の利用の仕方も、習得して、データを調べることに少しずつ慣れていっていただければと思います。下のリストは、私が個人的に、何度か使ったことのある、データベースです。「データサイエンスをはじめましょう」でも、少しずつ消化していきます。他にも、たくさんのデータベースがありますので、ぜひ、調べてみてください。国際連合　UNdata経済協力開発機構　OECD data、世界格差データベース（World Inequality Database）WID、欧州連合の統計局　Eurostat、データで見る私たちの世界　World Dataなども、同様の、ダッシュボードを備えており、データの提供もしている。\n日本では、e-Stat：政府統計の総合窓口 - 統計で見る日本ダッシュボード：対話型形式でのデータの視覚化","code":""},{"path":"publicdata-site.html","id":"持続的開発目標sdgs-データ","chapter":"6 オープンデータ","heading":"6.2.1 持続的開発目標（SDGs） データ","text":"世界銀行：https://databank.worldbank.org/source/sustainable-development-goals-(sdgs)国連：https://unstats.un.org/sdgs/dataportal/databaseデータで見る私たちの世界：World Data SGD Tracker: https://sdg-tracker.org/SDG Index: https://dashboards.sdgindex.org/map","code":""},{"path":"publicdata-site.html","id":"オープンデータについて","chapter":"6 オープンデータ","heading":"6.3 オープンデータについて","text":"オープンデータについては、すでに、世界銀行の定義をご紹介しました。パブリックデータをいう言葉も使われます。それらの違いなども含めて、AI に聞いてみましょう。Q. オープンデータ（Open Data）とか、パブリックデータ（Public Data）と言われるものは、どのようなものですか。定義のようなものと、いくつかの例、さらに、重要視されてきている背景を説明してください。GPT4. (2023.8.15)オープンデータ（Open Data）とは、誰でも自由に利用、再配布、再利用することができ、制限がない、または限定的な制限だけが存在するデータを指します。オープンデータは一般的には無償で提供され、機械可読形式（たとえばCSV、JSONなど）で利用可能であり、再利用のためのライセンスが明確にされています。一方、パブリックデータ（Public Data）は公共の手段で取得されたデータ、または公共の利益のために公開されるべきデータを指します。これは政府や公共機関、研究機関などが収集したデータで、しばしば公共の利益のために公開されます。オープンデータとパブリックデータの主な違いは、オープンデータが再利用と再配布の観点から「オープン」であることを強調するのに対し、パブリックデータは単に公開されているだけで、再利用や再配布については必ずしも明示されていないことです。例えば、以下のようなものがあります:気象データ: 天気予報、気温、風向、風速、降水量など気象データ: 天気予報、気温、風向、風速、降水量など交通データ: 交通渋滞、駐車場の利用状況、公共交通機関の運行状況など交通データ: 交通渋滞、駐車場の利用状況、公共交通機関の運行状況など統計データ: 人口、雇用、健康、教育などのデータ統計データ: 人口、雇用、健康、教育などのデータ環境データ: 汚染レベル、森林破壊、気候変動などのデータ環境データ: 汚染レベル、森林破壊、気候変動などのデータ地理データ: 地図、土地利用、地質学的情報など地理データ: 地図、土地利用、地質学的情報などオープンデータとパブリックデータが重要視されてきた背景には、以下の要素があります:透明性と説明責任: データが公開されることで、政府や企業の行動についての透明性が高まり、説明責任が強化されます。透明性と説明責任: データが公開されることで、政府や企業の行動についての透明性が高まり、説明責任が強化されます。イノベーションと経済的価値: データが自由に利用できることで、新たなビジネスモデルや製品、サービスの開発が促進され、経済的価値が創出されます。イノベーションと経済的価値: データが自由に利用できることで、新たなビジネスモデルや製品、サービスの開発が促進され、経済的価値が創出されます。市民参加: データへのアクセスが提供されることで、市民が社会的・政治的な決定プロセスに参加する機会が増えます。市民参加: データへのアクセスが提供されることで、市民が社会的・政治的な決定プロセスに参加する機会が増えます。社会的・環境的課題の解決: 大量のデータを解析することで、社会的・環境的な課題をより良く理解し、解決策を見つけることが可能になります。社会的・環境的課題の解決: 大量のデータを解析することで、社会的・環境的な課題をより良く理解し、解決策を見つけることが可能になります。以上のように、オープンデータとパブリックデータは、透明性、説明責任、イノベーション、市民参加、社会的・環境的課題の解決などの観点から重要性を増しています。","code":""},{"path":"publicdata-site.html","id":"オープンデータの未来","chapter":"6 オープンデータ","heading":"6.3.1 オープンデータの未来","text":"みなさんは、どのように考えますか。まだ、発展途上で、特に、パブリックデータについては、国によって、考え方も一定ではないように見受けられますが、これから、どのような世界を目指していくのか、データサイエンスは、どのような目的のために必要なのか。みなさんは、なんのために勉強しているのか、上の一つ一つの項目をもとに、周囲のみなさん、友人などと、ディスカッションをしながら、考えていただければと思います。","code":""},{"path":"publicdata-site.html","id":"ダッシュボード","chapter":"6 オープンデータ","heading":"6.4 ダッシュボード","text":"はじめて、オープンデータを利用するときには、対話型のダッシュボードは、助けとなります。ダッシュボードとはどのようなものか、AI に説明してもらいましょう。Q. データを対話的にみたり視覚化したりする、ダッシュボード（dashboard）について説明してください。ChatGPT (2023.08.15)ダッシュボード（dashboard）は、情報やデータを一元化し、対話的に表示・分析・視覚化できるインタラクティブなユーザーインターフェースです。主にビジネスや組織内で使用され、重要な指標や情報をリアルタイムに監視・分析するために利用されます。ダッシュボードは、さまざまなデータソースからの情報を収集し、それを一つの場所にまとめて表示します。これにより、膨大なデータを迅速に把握し、傾向やパターンを特定することが可能になります。例えば、売上データ、顧客の統計情報、ウェブ解析データ、ソーシャルメディアの指標など、さまざまなデータソースからの情報を一つのダッシュボードに表示することができます。ダッシュボードは、視覚化ツールを使用してデータをグラフやチャート、表などの形式で表示します。これにより、データを直感的に理解しやすくし、視覚的なパターンや相関関係を把握することができます。例えば、売上の推移を折れ線グラフで表示したり、地域別の売上を地図上に表示したりすることができます。ダッシュボードは、利用者が必要な情報に素早くアクセスできるように設計されています。ユーザーは、ダッシュボード上の要素をクリックしたり、フィルタを適用したり、グラフをズームしたりすることで、詳細な情報を取得したり特定の視点でデータを分析したりすることができます。また、ダッシュボードはリアルタイムな情報の監視にも利用されます。データソースが更新されるたびに、ダッシュボード上の情報も自動的に更新されます。これにより、組織内の関係者が最新の情報にアクセスし、迅速な意思決定を行うことができます。ダッシュボードは、情報の可視化と分析によって、効率的なデータ駆動型の意思決定を支援する役割を果たします。組織内のさまざまなレベルの利用者が、ビジネスのパフォーマンスを把握し、問題や機会を特定し、戦略やアクションプランを立案するために活用します。Q. 例や、ダッシュボードのサイトを教えてください。ChatGPT (2023.8.15)もちろんです！以下にいくつかのダッシュボードの例と、一般的に使用されるいくつかのダッシュボードサイトをご紹介します。ダッシュボードの例:Google Analytics: ウェブサイトのトラフィックやユーザー行動などの情報をリアルタイムに監視・視覚化するためのダッシュボードです。Google Analytics: ウェブサイトのトラフィックやユーザー行動などの情報をリアルタイムに監視・視覚化するためのダッシュボードです。Salesforce: セールスや顧客関連のデータを統合し、ビジネスのパフォーマンスを追跡するためのダッシュボードです。Salesforce: セールスや顧客関連のデータを統合し、ビジネスのパフォーマンスを追跡するためのダッシュボードです。Tableau: データの視覚化と分析に特化したダッシュボード作成ツールであり、さまざまな業界で利用されています。Tableau: データの視覚化と分析に特化したダッシュボード作成ツールであり、さまざまな業界で利用されています。ダッシュボードのサイト:Klipfolio (https://www.klipfolio.com/)Klipfolio (https://www.klipfolio.com/)Geckoboard (https://www.geckoboard.com/)Geckoboard (https://www.geckoboard.com/)DashThis (https://dashthis.com/)DashThis (https://dashthis.com/)Databox (https://databox.com/)Databox (https://databox.com/)Microsoft Power BI (https://powerbi.microsoft.com/)Microsoft Power BI (https://powerbi.microsoft.com/)これらのサイトでは、ダッシュボード作成ツールやサービスを利用して、カスタムのダッシュボードを作成することができます。それぞれのサイトには、詳細な情報やデモが提供されている場合もありますので、ぜひご覧ください。","code":""},{"path":"publicdata-site.html","id":"api-を利用したパッケージ","chapter":"6 オープンデータ","heading":"6.5 API を利用したパッケージ","text":"それぞれのオープンデータを検索したり、読み込んだりするための R のパッケージの紹介をします。上に書いたように、第二部で利用するためです。詳しい使い方は、第三部で紹介します。基本的には、以下の項目について紹介します。R の（公式）パッケージサイト：パッケージも含め、R の管理をしている CRAN の公式サイトの情報です。この下の情報も、ほとんどの場合、このリンク先に掲載されています。R の（公式）パッケージサイト：パッケージも含め、R の管理をしている CRAN の公式サイトの情報です。この下の情報も、ほとんどの場合、このリンク先に掲載されています。資料（Materials）： README（はじめにお読みください）などで、基本情報が書かれています。資料（Materials）： README（はじめにお読みください）などで、基本情報が書かれています。マニュアル（Manual）：利用者用説明書です。パッケージで利用可能な関数（命令、データ）などの情報がすべて書かれてあります。それぞれの関数（命令）に関しては、R Studio 内の Help（ヘルプ検索窓）からも利用可能です。マニュアル（Manual）：利用者用説明書です。パッケージで利用可能な関数（命令、データ）などの情報がすべて書かれてあります。それぞれの関数（命令）に関しては、R Studio 内の Help（ヘルプ検索窓）からも利用可能です。使い方の例（Vignette）：開発者のサイト（GitHub（バージョン管理システムの支援サイト）など）にある場合もありますが、最近は、公式パッケージサイトに、Vignette として使い方の例が掲載されている場合が増えてきています。すべて理解しようとせず、使い方の例からまずはみてみることが有効です使い方の例（Vignette）：開発者のサイト（GitHub（バージョン管理システムの支援サイト）など）にある場合もありますが、最近は、公式パッケージサイトに、Vignette として使い方の例が掲載されている場合が増えてきています。すべて理解しようとせず、使い方の例からまずはみてみることが有効です","code":""},{"path":"worldbank-site.html","id":"worldbank-site","chapter":"7 世界銀行（World Bank）","heading":"7 世界銀行（World Bank）","text":"","code":""},{"path":"worldbank-site.html","id":"概要-2","chapter":"7 世界銀行（World Bank）","heading":"7.1 概要","text":"世界銀行は、貧困削減と持続的成長の実現に向けて、途上国政府に対し融資、技術協力、政策助言を提供する国際開発金融機関です。2030年までに極度の貧困をなくし、各国の下位40パーセントの人々の所得を引き上げて繁栄の共有を促進するという2つの目標を掲げています。世界銀行のサイトを見てみると、下の方にはグラフも出ており、さまざまな統計データを提供することに力を入れていることがわかります。すでに、世界開発指標については、簡単に説明しました。ここでは、世界銀行のサイトの中のデータについて、見ていくとともに、ダッシュボード（dashboard）の活用、データの取得方法や、API （Application Program Interface）を用いて、R でデータを検索したり、取得するパッケージの紹介を簡単にします。","code":""},{"path":"worldbank-site.html","id":"データベース","chapter":"7 世界銀行（World Bank）","heading":"7.2 データベース","text":"","code":""},{"path":"worldbank-site.html","id":"三つのサイト","chapter":"7 世界銀行（World Bank）","heading":"7.2.1 三つのサイト","text":"世界銀行オープンデータデータカタログ世界開発指標（WDI）一つ一つみていきましょう。英語を読むことが苦手な場合は、ブラウザー（Google Chrome, Edge, Safari などのホームページ閲覧ソフト）の自動翻訳機能を使うのも良いでしょう。しかし、自動翻訳機能を利用していると、リンク先に飛べなかったり、いくつかの機能が使えないこともありますので、正常に機能しないときは、自動翻訳機能を一旦 にして利用してください。","code":""},{"path":"worldbank-site.html","id":"世界銀行オープンデータ-1","chapter":"7 世界銀行（World Bank）","heading":"7.2.2 世界銀行オープンデータ","text":"世界銀行のオープンデータ全体にアクセスできるサイトです。上の検索窓の下に、Country（国）と Indicators（指標）と書いてあります。その下には、いくつかのグラフや、最近のニュースやトピックが書かれており、さらにその下には、Resources（さらに…）といくつかの項目があります。Open Data Catalog、Data Bank、などと共に、World Development Indicators もあります。このWorld Development Indicators (WDI) を選択すると、上の三つのサイトの三番目に飛びます。また、Data Bank を選択すると、三つのサイトの二番目に飛びます。最初に書いた、Country（国）と Indicators（指標）から説明しましょう。","code":""},{"path":"worldbank-site.html","id":"国別サイト-1","chapter":"7 世界銀行（World Bank）","heading":"7.2.2.1 国別サイト","text":"Country（国別）のサイトを選択すると、国のリストが出てきます。J のところに、Japan（日本）がありますから、選択してみてください。日本のさまざまな指標とグラフが出てきます。Indicator（指標）、Recent Values（直近の値）、Trend（傾向）が表示されます。指標をクリックすると、大きなグラフが出てきます。その指標のサイトですから、そこで、その指標についての他の国の状況などを確認することができます。そこでは、選択した指標と似た指標が選択できたり、もっと詳しいことをしらべるデータバンク（Data Bank）へのリンクもあります。このサイトから、データをダウンロードすることもできるようになっています。また、国別サイトの右の方には、地域など、グループに分けてある帯もあります。その一番下には、World （世界）もありますから、世界全体について見てみたり、収入の階級に分けたサイトの指標を見ることもできるようになっています。","code":""},{"path":"worldbank-site.html","id":"指標別サイト-1","chapter":"7 世界銀行（World Bank）","heading":"7.2.2.2 指標別サイト","text":"Indicators（指標）を選択すると、トピックに分けて、指標が並んでいます。よく見ると、一番上に、Featured Indicators（特徴的な指標） と、Indicators（すべての指標） とあり、最初に開いているのは、特徴的な指標の方であることがわかります。すべての指標の方を開けると、よりたくさんの指標を見ることができます。トピックは、以下のものに分かれています。Agriculture & Rural Development 農業と農村開発Aid Effectiveness 援助の有効性Climate Change 気候変動Economy & Growth 経済と成長Education 教育Energy & Mining エネルギーと鉱業Environment 環境External Debt 対外債務Financial Sector 金融セクターGender 性別Health 健康Infrastructure インフラPoverty 貧困Private Sector 民間部門Public Sector 公共部門Science & Technology 科学技術Social Development 社会開発Social Protection & Labor 社会的保護と労働Trade 貿易Urban Development 都市開発それぞれの指標を選択すると、グラフが表示される画面が出てきます。それは、上で国別のところから選択したものと同じです。GDP を調べるときには、NY.GDP.MKTP.CD という、コードを指定して、データを取得しました。この、Indicator Code （WDI コード）は、Details (詳細) を見ると、その指標の概要とともに、書いてあります。 そのデータコードは、そのページの上の URL にも表示されています。はじめてのデータサイエンスでは、WDI という R のパッケージを使って、データを読み込みました。そのときに必要だったのが、この Indicator Code でした。あとで、詳しく調べてみたい指標がありましたら、その、WDIコード（Indicator Code）を、あとで、使えるように、メモなどに貼り付けて（Copy-Paste）おくことを、お勧めします。","code":""},{"path":"worldbank-site.html","id":"オープンデータカタログopen-data-catalog","chapter":"7 世界銀行（World Bank）","heading":"7.2.3 オープンデータカタログ（Open Data Catalog）","text":"Data Catalog designed make World Bank’s development data easy find, download, use, share. includes data World Bank’s microdata, finances  energy data platforms, well datasets  open data catalog. different ways access download datasets.データカタログは、世界銀行で編纂した開発に関するデータを簡単に検索、ダウンロード、使用、共有できるように設計されています。これには、世界銀行のマイクロデータ、財務、エネルギーデータプラットフォームからのデータ、およびオープンデータカタログからのデータセットが含まれています。データセットにアクセスしてダウンロードするには、さまざまな方法があります。世界銀行（World Bank）で編纂したり、他の機関から提供を受けたデータがリストされています。一番上には、Search Box（検索窓）があり、その下には、Featured （特徴的な、またはお薦め）とあり、いくつものトピックが並んでいます。右に、スクロールするとさらにいくつものトピックを見ることができます。その中にも、上で述べた 世界開発指標（WDI）もありますし、Covid-19 （コロナウイルス感染症）関連のデータもあります。それぞれの、トピックに、関連のデータがリストされています。","code":""},{"path":"worldbank-site.html","id":"world-bank-wdi---world-development-indicaters","chapter":"7 世界銀行（World Bank）","heading":"7.2.4 World Bank: WDI - World Development Indicaters","text":"世界銀行（World Bank）: https://www.worldbank.org世界銀行について（）:\n極度の貧困状態の削減（end extreme poverty）: 2030年までに、極度の貧困状態にある世界人口の割合を3%に削減する。reducing share global population lives extreme poverty 3 percent 2030.\n繁栄を共に享受（promote shared prosperity）: すべての国の最貧困層の40％の人々の所得を増加させることによって共栄を促進。increasing incomes poorest 40 percent people every country.\n極度の貧困状態の削減（end extreme poverty）: 2030年までに、極度の貧困状態にある世界人口の割合を3%に削減する。reducing share global population lives extreme poverty 3 percent 2030.繁栄を共に享受（promote shared prosperity）: すべての国の最貧困層の40％の人々の所得を増加させることによって共栄を促進。increasing incomes poorest 40 percent people every country.世界銀行オープンデータ（World Bank Open Data）: https://data.worldbank.org\nData Bank, World Development Indicators, etc.\nData Bank, World Development Indicators, etc.日本について：https://data.worldbank.org/country/japan?view=chart","code":""},{"path":"worldbank-site.html","id":"世界開発指標world-development-indicator","chapter":"7 世界銀行（World Bank）","heading":"7.2.5 世界開発指標（World Development Indicator）","text":"World Development Indicators (WDI) : 世界銀行が開発に関する各国間比較可能なデータの集大成である1400の時系列指標（World Bank’s premier compilation cross-country comparable data development; 1400 time series indicators）\nテーマ別（Themes）: 貧困と格差、人間、環境、経済、国家と市場、グローバルリンク集（Poverty Inequality, People, Environment, Economy, States Markets, Global Links）\nオープンデータとデータバンク（Open Data & DataBank）: Explore data, Query database\nBulk Download: Excel, CSV\nAPI Documentation\nテーマ別（Themes）: 貧困と格差、人間、環境、経済、国家と市場、グローバルリンク集（Poverty Inequality, People, Environment, Economy, States Markets, Global Links）オープンデータとデータバンク（Open Data & DataBank）: Explore data, Query databaseBulk Download: Excel, CSVAPI Documentation","code":""},{"path":"worldbank-site.html","id":"ダッシュボードdashboard","chapter":"7 世界銀行（World Bank）","heading":"7.3 ダッシュボード（Dashboard）","text":"世界銀行のダッシュボードには二種類あります。一つは、それぞれの指標についてのダッシュボード、もう一つは、データバンク（DataBank）です。","code":""},{"path":"worldbank-site.html","id":"world-bank-アカウント","chapter":"7 世界銀行（World Bank）","heading":"7.3.1 World Bank アカウント","text":"ダッシュボードは、リンクにアクセスすれば、アカウントなどを作成せず、すぐに使えます。しかし、ダッシュボードを使って、グラフを作成したり、自分用の、データを作成したりした場合には、その結果を、保存をしたり、リンク（iframe 形式）を、文書に埋め込んだりする必要を感じる場合があります。その場合には、一般用アカウントを作成する必要があります。このサイトの Sign から、アカウントを作成してください。","code":""},{"path":"worldbank-site.html","id":"指標毎のダッシュボード","chapter":"7 世界銀行（World Bank）","heading":"7.3.2 指標毎のダッシュボード","text":"はじめてのデータサイエンスで使った、GDP (Current US$)、データコード NY.GDP.MKTP.CD についてみてみましょう。いくつかの方法があります。世界銀行オープンデータ から、指標（Indicator）を選択し、その中の Economy & Growth（経済と成長）の中から、GDP (current US$) を選択すると、ダッシュボードが現れ、世界の GPD の推移のグラフが表示されます。世界銀行オープンデータ から、国（Country）を選択し、例えば、J から、Japan を選択し、Economics（経済）の指標の GDP (current US$) を選択すると、ダッシュボードが現れ、日本の GDP の推移のグラフが表示されます。指標によっては、上の、Theme（テーマ）や、Topic（トピック）から選ぶ必要がある場合もあります。世界開発指標（WDI）の Data Theme（テーマ）の中の、ECONOMY（経済） の中から、GDP (current US$) を選択すると、ダッシュボードが現れ、世界の GPD の推移のグラフが表示されます。もし、WDI コード（この場合は、NY.GDP.MKTP.CD）を知っていれば、このコードを、世界銀行オープンデータ の検索窓に入れて検索すると、上のダッシュボードのページが表示されます。最初は、選択した指標について、世界か、日本など選択した国の、折れ線グラフ（Line Graph）が表示されていると思います。そして、下の方に、国のリストがあり、その一番下には、地域のリストが続いています6。また、Line （折れ線グラフ）と書いた右には、Bar（棒グラフ）と、Map（地図）とあります。その右には、Also Show （追加）とあり、Aggregates（総合）、Region（同じ地域）、Similar Values（近い値）、Highest Values（最高値）、Lowest Values（最小値）を表示することもできます。表示しないときは、None を選択します。その右には、Share（共有）と、Details（詳細）があります。詳細には、その指標についての、詳しい説明があります。すべてを理解することはできないかもしれませんが、翻訳機能も使って、確認しておくことをお勧めします。詳細には、データコードも書かれています。記録しておくと、次に同じ指標のデータを探すときに便利です。共有からは、Web Page や、SNS に埋め込む、iframe link を取得することができます。右の方の帯には、関連する指標がリストされ、さらに、Download（ダウンロード）、Data Bank（データバンク）、WDI Tables （統計表）へのリンクがあります。","code":""},{"path":"worldbank-site.html","id":"使い方","chapter":"7 世界銀行（World Bank）","heading":"7.3.2.1 使い方","text":"具体例としては、GDP（Current US$）の世界（World）のグラフが表示されているとします。上の検索窓に GDP（Current US$）と入っていると思います。国や地域の追加\n英語で入力しますから、グラフの下の、国や地域名のところから、追加したい、国や地域名を選んで、書き出しておいてください。一つずつ追加するときは、コピーするのも良いかもしれません。\n日本をグラフに追加するときは、Japan ですから、検索窓に、Japan と入れて少し待ちます。すると、窓の下に、Japan が表示されますから、それを選択（クリック）します。すると、日本のグラフに変わります。India も加えてください。次に、検索窓に、United と入力すると、United Kingdom, United States, United Arab Emirates が表示されますから、United Kingdom を選択してください。Japan, India, United Kingdom の三つの国のグラフが同時に表示されます。これによって、いくつかの国のその指標における経年変化を比較することができます。\nいろいろな国や地域を加えてみてください。たとえば、GDP を指標として、United States を加えると、United States の GDP の値が大きいため、他の国のグラフは下の方に重なり合うようになります。Afghanistan を加えると、ある年以前のデータがなかったり、値がとても小さいために、X 軸に張り付くようになってしまったりします。みやすいグラフを表示するには、どのようなものの比較をするかも重要になってくることがわかると思います。\n追加した国や地域を消すのは、単にその国名の、右に表示される x マークを選択すれば良いですし、Delete キーでも消去できます。\n実は、Japan など一つの国を加えてからあとは、下の国名などのリストから、追加したい国を選択すると、追加されていきます。検索窓に入れるよりも簡単だと思います。\n国や地域の追加英語で入力しますから、グラフの下の、国や地域名のところから、追加したい、国や地域名を選んで、書き出しておいてください。一つずつ追加するときは、コピーするのも良いかもしれません。英語で入力しますから、グラフの下の、国や地域名のところから、追加したい、国や地域名を選んで、書き出しておいてください。一つずつ追加するときは、コピーするのも良いかもしれません。日本をグラフに追加するときは、Japan ですから、検索窓に、Japan と入れて少し待ちます。すると、窓の下に、Japan が表示されますから、それを選択（クリック）します。すると、日本のグラフに変わります。India も加えてください。次に、検索窓に、United と入力すると、United Kingdom, United States, United Arab Emirates が表示されますから、United Kingdom を選択してください。Japan, India, United Kingdom の三つの国のグラフが同時に表示されます。これによって、いくつかの国のその指標における経年変化を比較することができます。日本をグラフに追加するときは、Japan ですから、検索窓に、Japan と入れて少し待ちます。すると、窓の下に、Japan が表示されますから、それを選択（クリック）します。すると、日本のグラフに変わります。India も加えてください。次に、検索窓に、United と入力すると、United Kingdom, United States, United Arab Emirates が表示されますから、United Kingdom を選択してください。Japan, India, United Kingdom の三つの国のグラフが同時に表示されます。これによって、いくつかの国のその指標における経年変化を比較することができます。いろいろな国や地域を加えてみてください。たとえば、GDP を指標として、United States を加えると、United States の GDP の値が大きいため、他の国のグラフは下の方に重なり合うようになります。Afghanistan を加えると、ある年以前のデータがなかったり、値がとても小さいために、X 軸に張り付くようになってしまったりします。みやすいグラフを表示するには、どのようなものの比較をするかも重要になってくることがわかると思います。いろいろな国や地域を加えてみてください。たとえば、GDP を指標として、United States を加えると、United States の GDP の値が大きいため、他の国のグラフは下の方に重なり合うようになります。Afghanistan を加えると、ある年以前のデータがなかったり、値がとても小さいために、X 軸に張り付くようになってしまったりします。みやすいグラフを表示するには、どのようなものの比較をするかも重要になってくることがわかると思います。追加した国や地域を消すのは、単にその国名の、右に表示される x マークを選択すれば良いですし、Delete キーでも消去できます。追加した国や地域を消すのは、単にその国名の、右に表示される x マークを選択すれば良いですし、Delete キーでも消去できます。実は、Japan など一つの国を加えてからあとは、下の国名などのリストから、追加したい国を選択すると、追加されていきます。検索窓に入れるよりも簡単だと思います。実は、Japan など一つの国を加えてからあとは、下の国名などのリストから、追加したい国を選択すると、追加されていきます。検索窓に入れるよりも簡単だと思います。Also Show の活用\n上に書いたように、Aggregates（総合）、Region（同じ地域）、Similar Values（近い値）、Highest Values（最高値）、Lowest Values（最小値）を追加できます。たとえば、Japan（日本）だけを残しておいて、Region を選択すると、いくつかの国の値が、薄く表示されます。地域名をみると、これは、East Asia & Pacific（東アジアと太平洋地域）であることが推測されます。\nそこで、East Asia & Pasific を選択すると、その地域の総計の値が追加されます。\nAlso Show の活用上に書いたように、Aggregates（総合）、Region（同じ地域）、Similar Values（近い値）、Highest Values（最高値）、Lowest Values（最小値）を追加できます。たとえば、Japan（日本）だけを残しておいて、Region を選択すると、いくつかの国の値が、薄く表示されます。地域名をみると、これは、East Asia & Pacific（東アジアと太平洋地域）であることが推測されます。上に書いたように、Aggregates（総合）、Region（同じ地域）、Similar Values（近い値）、Highest Values（最高値）、Lowest Values（最小値）を追加できます。たとえば、Japan（日本）だけを残しておいて、Region を選択すると、いくつかの国の値が、薄く表示されます。地域名をみると、これは、East Asia & Pacific（東アジアと太平洋地域）であることが推測されます。そこで、East Asia & Pasific を選択すると、その地域の総計の値が追加されます。そこで、East Asia & Pasific を選択すると、その地域の総計の値が追加されます。","code":""},{"path":"worldbank-site.html","id":"データダウンロード","chapter":"7 世界銀行（World Bank）","heading":"7.3.2.2 データダウンロード","text":"R のパッケージを用いたデータのダウンロードについてはあとから述べますが、指標毎のダッシュボードの右の帯のダウンロードからも、データをダウンロードすることができます。CSV（Comma Separated Values）、XML（Extensible Markup Language）、EXCEL（Micosoft Excel Spreadsheet） と三つの形式でデータを取得できます。それぞれ、R などで読み込むことができます。ただし、CSV と、XML は、Zip 形式の圧縮ファイルになっています。EXCEL は、三つのシート（Data, Metadata - Countries, Metadata - Indicators）が一つの、ブックになっています。Metadata（メタデータ）は、データのデータで、データについての情報が収められています。","code":""},{"path":"worldbank-site.html","id":"データバンクdatabank","chapter":"7 世界銀行（World Bank）","heading":"7.3.3 データバンク（DataBank）","text":"上で説明した指標毎のダッシュボードの右の帯からも、データバンクのダッシュボードが開きますが、世界銀行オープンデータ の下にある、データバンクを選択すると、リストが表示されます。ここで、ある程度選択してから、ダッシュボードを表示させることもできます。一番上に、World Development Indicators（世界開発指標）がありますから、選択してください。あとから、他のものに変更することも可能です。表が表示され、左の方に、Variables（変数）、Layout（レイアウト）、Styles（形式）、Save（保存）、Share（共有）、Embed（埋め込み） とあり、右上には、Table（表）、Chart（グラフ）、Map（地図）、Metadata（メタデータ） とあり、その下には、Preview（表示）などとなっていると思います。膨大なデータを選択し、形式を整えて、ダウンロードしたり、グラフを表示したりすることができます。","code":""},{"path":"worldbank-site.html","id":"例1","chapter":"7 世界銀行（World Bank）","heading":"7.3.3.1 例1","text":"まずは、一つ目の例として、GDP (Current US$) の値を大きい方から国順に並べてみましょう。Variable の Database で、World Development Indicators を選択します。Variable の Database で、World Development Indicators を選択します。Countries では、上に、、Countries、Aggregates とありますから、Countries を選択します。Countries では、上に、、Countries、Aggregates とありますから、Countries を選択します。一番左のチェックボックス Select （すべて選択）を選びます。これで国が全部選択されました。現在ですと、Selected 217 と出ています。一番左のチェックボックス Select （すべて選択）を選びます。これで国が全部選択されました。現在ですと、Selected 217 と出ています。Series は、いくつか選択されている可能性がありますから、X マークを選択して、まずは、全部選択を解除し、次に、GDP (current US$) にチェックを入れます。Selected 1 となっていることを確認してください。Series は、いくつか選択されている可能性がありますから、X マークを選択して、まずは、全部選択を解除し、次に、GDP (current US$) にチェックを入れます。Selected 1 となっていることを確認してください。Time の一番左のチェックボックスから、Select にしてください。現在では、Selected 63 と表示されました。Time の一番左のチェックボックスから、Select にしてください。現在では、Selected 63 と表示されました。右の方に、Selections modified … （選択が変更されました …）と出ますので、Apply Changes（変更を適用）を選びます。右の方に、Selections modified … （選択が変更されました …）と出ますので、Apply Changes（変更を適用）を選びます。上の Layout タブを選択し、Time を Column（列）、Country を Row（行）、Series を Page（ページに指定します）上の Layout タブを選択し、Time を Column（列）、Country を Row（行）、Series を Page（ページに指定します）ここまでで、Table に、GDP (current US$) についての表が表示されていることを確認してください。これを書いている時点では、2022年が最も新しいデータで、2022 の年のところをクリックすると、最初は、国名のアルファベット順になっていると思いますが、それが、その指標の値の、昇順、降順に変更できます。ここでは、GDP が大きな値の順に並べたいので、降順にします。10位までの国は、United States, China, Japan, Germany, India, United Kingdom, France, Russian Federation, Canada, Italy となっているかと思います。","code":""},{"path":"worldbank-site.html","id":"例2","chapter":"7 世界銀行（World Bank）","heading":"7.3.3.2 例2","text":"2022年の値で、10位までの国を選択して、折れ線グラフや、棒グラフなどを書いてみましょう。Variables の Countries の X で選択を解除し、上の10カ国を選んでください。右の方に、Selections modified … （選択が変更されました …）と出ますので、Apply Changes（変更を適用）を選びます。すると表が10カ国のものに変わります。上の、Styles を選択し、Chat Type & Style で、Line（折れ線グラフ）を選択すると、しばらくして、10カ国の、折れ線グラフを表示させることができます。色も変更することも可能です。Chat Type & Style で Horizontal Bar を選択し、Layout で、以下では、変数（Variables）の選び方と、グラフ（Chart）について簡単に説明します。","code":""},{"path":"worldbank-site.html","id":"変数variables","chapter":"7 世界銀行（World Bank）","heading":"7.3.3.3 変数（Variables）","text":"Database、Country、Series、Time とあり、それぞれの右に、Available と Selected とあります。どのデータベースについて、国を選択し、系列を選び、期間を選択するという形式になっています。Database の左の三角印を選択すると、データベース名が確認できます。現在は、World Development Indicators が選択されています。ここで、他のデータベースに変更することも可能ですが、まずは、そのままにしましょう。次は、Countries（国）です。、Countries、Aggregates と一番上にあります。国だけを表示するか、地域やグループを表示するか、すべてを表示するかを選択できます。簡単のために、まずは、Countries（国）を選択しましょう。国がいくつか選択されている場合もありますから、X マークをクリックして、すべて選択を消去し、国を選んでみましょう。GDP のところで経験したように、GDP の多い方から、United States、China、Japan、Germany、India、United Kingdom、France を選択してみましょう。","code":""},{"path":"worldbank-site.html","id":"gdp-per-capita-constant-2015-us","chapter":"7 世界銀行（World Bank）","heading":"7.3.3.4 GDP per capita (constant 2015 US$)","text":"実質GDP（2015年を基準にしたもの）を、総人口で割った値。アメリカ合衆国、英国、ドイツ、フランス、日本、中国、日本、ロシア、ウクライナの2021年における比較棒グラフ - リンク年次変化を示す折線グラフ -","code":""},{"path":"worldbank-site.html","id":"central-government-debt-total-of-gdp","chapter":"7 世界銀行（World Bank）","heading":"7.3.3.5 Central government debt, total (% of GDP)","text":"2020年の政府の負債（GDP の百分率）- リンク政府の負債（GDP の百分率）の年次変化を示す折線グラフ ","code":""},{"path":"worldbank-site.html","id":"co2-emissions-metric-tons-per-capita","chapter":"7 世界銀行（World Bank）","heading":"7.3.3.6 CO2 emissions (metric tons per capita)","text":"CO2 排出量 (1 人あたりのメートル トン) - リンクCO2 排出量 (1 人あたりのメートル トン) の年次変化の折線グラフ","code":""},{"path":"worldbank-site.html","id":"military-expenditure-of-gdp","chapter":"7 世界銀行（World Bank）","heading":"7.3.3.7 Military expenditure (% of GDP)","text":"2021年の軍事費 (GDP の %) - リンク軍事費 (GDP の %) の年次変化","code":""},{"path":"worldbank-site.html","id":"military-expenditure-current-usd","chapter":"7 世界銀行（World Bank）","heading":"7.3.3.8 Military expenditure (current USD)","text":"2021年の軍事費 (現在の米ドル)軍事費の年次変化","code":""},{"path":"worldbank-site.html","id":"proportion-of-seats-held-by-women-in-natinal-parliaments","chapter":"7 世界銀行（World Bank）","heading":"7.3.3.9 Proportion of seats held by women in natinal parliaments (%)","text":"2021年、国会で女性が占める議席の割合 (%) - リンク国会で女性が占める議席の割合 (%) の年次変化","code":""},{"path":"worldbank-site.html","id":"世界のさまざまな課題から見る","chapter":"7 世界銀行（World Bank）","heading":"7.3.4 世界のさまざまな課題から見る","text":"","code":""},{"path":"worldbank-site.html","id":"api","chapter":"7 世界銀行（World Bank）","heading":"7.4 API","text":"世界銀行（World Bank）の API を利用した R のパッケージを二つ紹介します。","code":""},{"path":"worldbank-site.html","id":"wdi","chapter":"7 世界銀行（World Bank）","heading":"7.4.1 WDI","text":"Search download data 40 databases hosted World Bank, including World Development Indicators (‘WDI’), International Debt Statistics, Business, Human Capital Index, Sub-national Poverty indicators.世界開発指標(「WDI」)、国際債務統計、Business、人的資本指数、準国家貧困指標など、世界銀行が主催する40以上のデータベースからデータを検索してダウンロードします。R のパッケージサイト：https://CRAN.R-project.org/package=WDIR のパッケージサイト：https://CRAN.R-project.org/package=WDI資料（Materials）：https://cran.r-project.org/web/packages/WDI/readme/README.html資料（Materials）：https://cran.r-project.org/web/packages/WDI/readme/README.htmlマニュアル（Manual）：https://cran.r-project.org/web/packages/WDI/WDI.pdfマニュアル（Manual）：https://cran.r-project.org/web/packages/WDI/WDI.pdf使い方の例：https://vincentarelbundock.github.io/WDI/使い方の例：https://vincentarelbundock.github.io/WDI/","code":""},{"path":"worldbank-site.html","id":"wbstats","chapter":"7 世界銀行（World Bank）","heading":"7.4.2 wbstats","text":"Programmatic Access Data Statistics World Bank API世界銀行APIからのデータと統計へのプログラムによるアクセスR のパッケージサイト：https://CRAN.R-project.org/package=wbstatsR のパッケージサイト：https://CRAN.R-project.org/package=wbstats資料（Materials）： README資料（Materials）： READMEマニュアル（Manual）：https://cran.r-project.org/web/packages/wbstats/wbstats.pdfマニュアル（Manual）：https://cran.r-project.org/web/packages/wbstats/wbstats.pdf使い方の例（Vignette）：https://cran.r-project.org/web/packages/wbstats/vignettes/wbstats.html使い方の例（Vignette）：https://cran.r-project.org/web/packages/wbstats/vignettes/wbstats.html","code":""},{"path":"oecd-site.html","id":"oecd-site","chapter":"8 OECD（経済協力開発機構）","heading":"8 OECD（経済協力開発機構）","text":"","code":""},{"path":"oecd-site.html","id":"概要-3","chapter":"8 OECD（経済協力開発機構）","heading":"8.1 概要","text":"OECD（経済協力開発機構）はヨーロッパ諸国を中心に日・米を含め38ヶ国の先進国が加盟する国際機関です。OECDは国際マクロ経済動向、貿易、開発援助といった分野に加え、最近では持続可能な開発、ガバナンスといった新たな分野についても加盟国間の分析・検討を行っています。https://www.meti.go.jp/policy/trade_policy/oecd/index.html","code":""},{"path":"oecd-site.html","id":"データベース-1","chapter":"8 OECD（経済協力開発機構）","heading":"8.2 データベース","text":"","code":""},{"path":"oecd-site.html","id":"oecd","chapter":"8 OECD（経済協力開発機構）","heading":"8.3 OECD","text":"OECD Data: https://data.oecd.org/","code":""},{"path":"oecd-site.html","id":"ダッシュボード-1","chapter":"8 OECD（経済協力開発機構）","heading":"8.4 ダッシュボード","text":"","code":""},{"path":"oecd-site.html","id":"api-1","chapter":"8 OECD（経済協力開発機構）","heading":"8.5 API","text":"","code":""},{"path":"un-site.html","id":"un-site","chapter":"9 United Nations（国際連合）","heading":"9 United Nations（国際連合）","text":"","code":""},{"path":"un-site.html","id":"概要-4","chapter":"9 United Nations（国際連合）","heading":"9.1 概要","text":"","code":""},{"path":"un-site.html","id":"データベース-2","chapter":"9 United Nations（国際連合）","heading":"9.2 データベース","text":"UNdata: https://data.un.org","code":""},{"path":"un-site.html","id":"ダッシュボード-2","chapter":"9 United Nations（国際連合）","heading":"9.3 ダッシュボード","text":"","code":""},{"path":"un-site.html","id":"api-2","chapter":"9 United Nations（国際連合）","heading":"9.4 API","text":"","code":""},{"path":"owid-site.html","id":"owid-site","chapter":"10 Our World in Data","heading":"10 Our World in Data","text":"","code":""},{"path":"owid-site.html","id":"概要-5","chapter":"10 Our World in Data","heading":"10.1 概要","text":"","code":""},{"path":"owid-site.html","id":"データベース-3","chapter":"10 Our World in Data","heading":"10.2 データベース","text":"owid: https://ourworldindata.org/","code":""},{"path":"owid-site.html","id":"ダッシュボード-3","chapter":"10 Our World in Data","heading":"10.3 ダッシュボード","text":"","code":""},{"path":"owid-site.html","id":"api-3","chapter":"10 Our World in Data","heading":"10.4 API","text":"","code":""},{"path":"estat-site.html","id":"estat-site","chapter":"11 e-Stat 日本の政府統計","heading":"11 e-Stat 日本の政府統計","text":"","code":""},{"path":"estat-site.html","id":"概要-6","chapter":"11 e-Stat 日本の政府統計","heading":"11.1 概要","text":"基本的なデータベースは、「社会・人口統計体系」から見ることができます。一覧表示も可能ですが、まずは、リンクから階層形式で見ると、都道府県別データと、市町村別データに分かれています。また、それぞれが、基礎データと社会統計指標に分かれ、さらに、それぞれが、","code":""},{"path":"estat-site.html","id":"データベース-4","chapter":"11 e-Stat 日本の政府統計","heading":"11.2 データベース","text":"e-Stat：政府統計の総合窓口 - 統計で見る日本ダッシュボード：対話型形式でのデータの視覚化","code":""},{"path":"estat-site.html","id":"ダッシュボード-4","chapter":"11 e-Stat 日本の政府統計","heading":"11.3 ダッシュボード","text":"","code":""},{"path":"estat-site.html","id":"api-4","chapter":"11 e-Stat 日本の政府統計","heading":"11.4 API","text":"","code":""},{"path":"estat-site.html","id":"estatapi-利用概要","chapter":"11 e-Stat 日本の政府統計","heading":"11.5 estatapi 利用概要","text":"CRAN estatspi URL: https://CRAN.R-project.org/package=estatapi","code":""},{"path":"estat-site.html","id":"アプリケーションidの設定","chapter":"11 e-Stat 日本の政府統計","heading":"11.5.1 アプリケーションIDの設定","text":"","code":"appId <- \" \" # 私のものは、英数40文字"},{"path":"other-site.html","id":"other-site","chapter":"12 その他のサイト","heading":"12 その他のサイト","text":"","code":""},{"path":"other-site.html","id":"wir","chapter":"12 その他のサイト","heading":"12.1 WIR","text":"","code":""},{"path":"other-site.html","id":"概要-7","chapter":"12 その他のサイト","heading":"12.1.1 概要","text":"","code":""},{"path":"other-site.html","id":"データベース-5","chapter":"12 その他のサイト","heading":"12.1.2 データベース","text":"","code":""},{"path":"other-site.html","id":"ダッシュボード-5","chapter":"12 その他のサイト","heading":"12.1.3 ダッシュボード","text":"","code":""},{"path":"other-site.html","id":"api-5","chapter":"12 その他のサイト","heading":"12.1.4 API","text":"","code":""},{"path":"other-site.html","id":"eurostat","chapter":"12 その他のサイト","heading":"12.2 EuroStat","text":"","code":""},{"path":"other-site.html","id":"概要-8","chapter":"12 その他のサイト","heading":"12.2.1 概要","text":"","code":""},{"path":"other-site.html","id":"データベース-6","chapter":"12 その他のサイト","heading":"12.2.2 データベース","text":"eurostat: https://ec.europa.eu/eurostat","code":""},{"path":"other-site.html","id":"ダッシュボード-6","chapter":"12 その他のサイト","heading":"12.2.3 ダッシュボード","text":"","code":""},{"path":"other-site.html","id":"api-6","chapter":"12 その他のサイト","heading":"12.2.4 API","text":"","code":""},{"path":"ronrstudio.html","id":"ronrstudio","chapter":"13 R Studio で R","heading":"13 R Studio で R","text":"","code":""},{"path":"ronrstudio.html","id":"はじめに","chapter":"13 R Studio で R","heading":"13.1 はじめに","text":"この章では、R と R Studio をインストールし、正常に動作しているかを、確認することを目標とします。実際の、使い方は、次の章以下で、述べます。また、Posit Cloud など、R Studio 以外で、R を使う方法も、最後に述べます。特に、Posit Cloud は、一定の制限はあるものの、基本的には、R Studio で R を使うのと、同様のことが可能な、Cloud 環境ですので、R と R Studio のインストールに成功した場合も、利用方法を確認してください。確認の段階で、エラーが出てしまった場合の解決方法も、下に書きますが、まずは、Posit Cloud など、他の方法でR を使えるようにして、時間のあるときに、解決を試みてください。","code":""},{"path":"ronrstudio.html","id":"r-と-r-studio","chapter":"13 R Studio で R","heading":"13.2 R と R Studio","text":"R free software environment statistical computing graphics. compiles runs wide variety UNIX platforms, Windows MacOS. https://www.r-project.orgR は、無償で提供されている、統計解析ともに、データサイエンスにおいてたいせつな可視化のためのグラフを描写する環境でもあります。Windows、MacOS や、Linux で利用することが可能です。RStudio integrated development environment (IDE) R Python. includes console, syntax-highlighting editor supports direct code execution, tools plotting, history, debugging, workspace management. RStudio available open source commercial editions runs desktop (Windows, Mac, Linux).　https://posit.co/products/open-source/rstudio/RStudio は、R と Python のための、総合開発環境（IDE）です。RStudio には、プログラムを実行したり、制御やジョブ管理のための、コンソール（console）、コードを書いたり、実行したりする、文書の編集をする、エディター（Editor）とともに、グラフを表示したり、履歴や、プログラムを修正するなどのための、さまざまなツールが付属しています。RStudio はオープンソースで提供され、Windows、Mac および、Linux で利用可能で、有償版のサービスと無償版を提供しています。R は、統計解析のためのシステムで、R Studio は、R（および Python）を利用するための、総合開発環境です。そこで、「R Studio で R を利用する」という表現をします。","code":""},{"path":"ronrstudio.html","id":"r-と-r-studio-のインストール","chapter":"13 R Studio で R","heading":"13.3 R と R Studio のインストール","text":"R と R Studio をインストールします。両方とも、インストールすることが必要です。今後のために、動作確認を、RNotebook を使って行います。注意以下は、自分のコンピュータ、すなわち、管理者権限があるコンピュータにインストールすることを前提に書きます。家族で、コンピュータを共有していて、管理者権限がない場合は、管理者権限のあるかたに、R と RStudio をインストールしてもらってください。そうすれば、そのコンピュータの他のアカウントでも利用することができます。ある制約がかかるとメッセージが出ますが、管理者権限なしで、インストールすることも可能です。特別の事情があり、管理者権限なしで、インストールする場合は、こちらを参照してください。","code":""},{"path":"ronrstudio.html","id":"r-のインストール","chapter":"13 R Studio で R","heading":"13.3.1 R のインストール","text":"https://cloud.r-project.org上のリンクから、Windows、macOS または、Linux を選択して、インストールしてください。Windows の場合は、base - install R first time を選択してください。macOS の場合は、M1, M2 など、最近の Apple Silicon の CPU で動くコンピュータか、以前の、Intel の CPU で動くものか、選択してください。Mac の左上の、りんごマークの、このコンピュータについてから、確認できます。不明の場合は、「R のインストール」と検索してみてください。","code":""},{"path":"ronrstudio.html","id":"r-studio-の-インストール","chapter":"13 R Studio で R","heading":"13.3.2 R Studio の インストール","text":"http://www.rstudio.com/download上のリンクから、Windows 10/11 または、macOS 11+ を 選択してください。これら以外の、古いシステムのコンピュータの場合は、 下のサイトから、探してください。https://docs.posit.co/previous-versions/不明の場合は、「RStudio のインストール」と検索してみてください。","code":""},{"path":"ronrstudio.html","id":"動作確認","chapter":"13 R Studio で R","heading":"13.3.3 動作確認","text":"動作確認のための、一連の流れを書き、その下に、問題が起こった場合の対処を書きます。R Studio はこれまでも使っていたが、R Notebook は使ったことがないという方も、同様の確認をしてください。RStudio を立ち上げます。上のメニューの File から、New Project を選択します。Project の名前を（test とか、firstproject など）つけて、Create ボタンを押します。上のメニューの File から、New File の R Notebook を選択します。\nPackage が必要なので、Install するかと聞かれますから、インストールを選んでください7。\nPackage が必要なので、Install するかと聞かれますから、インストールを選んでください7。File から、Save を選んで、名前を（test0, rnotebook など）とつけ、Preview ボタンを押すと、内容が現れます。Preview ボタンの右の、三角印を押すと、Knit PDF と現れますから、それを選択\nすでに、TeX というシステムを使っておられる方は、PDF が作成されますが、それ以外の方は、なにやらメッセージが出て、TeX システムが無いと出ると思います。\n左下の、Console タブに、tinytex::install_tinytex() をコピーして、入力し、Enter または、Return キーを押し実行します。\nもう一度、Kit PDF を（今度は、Preview ボタンが、Knit となっていると思います。その右の三角から Knit PDF を選択し）押し実行します。\nすでに、TeX というシステムを使っておられる方は、PDF が作成されますが、それ以外の方は、なにやらメッセージが出て、TeX システムが無いと出ると思います。左下の、Console タブに、tinytex::install_tinytex() をコピーして、入力し、Enter または、Return キーを押し実行します。もう一度、Kit PDF を（今度は、Preview ボタンが、Knit となっていると思います。その右の三角から Knit PDF を選択し）押し実行します。この一連の作業で、最後に、PDF が現れれば、動作確認終了です。クラウド Posit Cloud の項目に進んでください。ステップ5まで終了すれば、PDF を作成しない限り、問題はありませんので、あとは、時間のあるときに、対応することも可能です。","code":""},{"path":"ronrstudio.html","id":"トラブルシューティング１","chapter":"13 R Studio で R","heading":"13.3.4 トラブル・シューティング（１）","text":"動作確認のステップ 4 （またはステップ５で要求されるパッケージのインストール時点）または、6 でエラーが出る場合があります。動作確認の ステップ 4で、パッケージをたくさんインストールしますが、この段階で、エラーが出る場合があります。そのときは、まず、RStudio の上のメニューの、Tools の一番下の、Global Options を開き、左のメニューから、Packages を選び、Primary CRAN Repository を Change として、CRAN mirror から、Japan: Institute Statistical Mathematics, Tokyo を選択してください8。\n解決しない場合は、下の、解決しない場合はに進んでください。\n動作確認の ステップ 4で、パッケージをたくさんインストールしますが、この段階で、エラーが出る場合があります。そのときは、まず、RStudio の上のメニューの、Tools の一番下の、Global Options を開き、左のメニューから、Packages を選び、Primary CRAN Repository を Change として、CRAN mirror から、Japan: Institute Statistical Mathematics, Tokyo を選択してください8。解決しない場合は、下の、解決しない場合はに進んでください。動作確認のステップ 4では、問題なく、パッケージのインストールが完了したが、6で、エラーが出た場合には、Windows の日本語アカウント名の問題の可能性が高いと思います。OneDrive の問題の可能性もないとは言えませんが、次を試してみてください。\nTinyTeX のアンインストール：tinytex::unstall_tinytex() を コンソールで実行\nWindowsの自分のアカウントからサインアウトし、サインインしなおす\nTinyTeX をディレクトリを指定してインストール：tinytex::install_tinytex(dir = \"C:/myTinyTeX\") を コンソールで実行\nサインアウトし、サインインしなおす\n上の動作確認のステップ6、R Notebook から knit PDF を利用して、PDF を作成する。\n解決しない場合は、下の、解決しない場合はに進んでください。\n動作確認のステップ 4では、問題なく、パッケージのインストールが完了したが、6で、エラーが出た場合には、Windows の日本語アカウント名の問題の可能性が高いと思います。OneDrive の問題の可能性もないとは言えませんが、次を試してみてください。TinyTeX のアンインストール：tinytex::unstall_tinytex() を コンソールで実行Windowsの自分のアカウントからサインアウトし、サインインしなおすTinyTeX をディレクトリを指定してインストール：tinytex::install_tinytex(dir = \"C:/myTinyTeX\") を コンソールで実行サインアウトし、サインインしなおす上の動作確認のステップ6、R Notebook から knit PDF を利用して、PDF を作成する。解決しない場合は、下の、解決しない場合はに進んでください。解決しない場合は、下の囲みの中を読んでください。Windows の、OneDrive 関連の問題の可能性が高いかと思います。\nその後に書いてあるように、R と RStudio を一度、アンインストールします。（この作業はしなくても、おそらく問題ないと思いますが、安全のためにアンインストールします。）\nもう一つ別の管理者権限のあるアカウントを（半角ローマ字名で）下の指示に従って作成して、そのアカウントにサインインして、上の、1から6を試してください。\n問題なく、1から6が完了したら、しばらく、そちらのアカウントを利用してください。それ以降については、また下に書きます。\n解決しない場合は、下の囲みの中を読んでください。Windows の、OneDrive 関連の問題の可能性が高いかと思います。その後に書いてあるように、R と RStudio を一度、アンインストールします。（この作業はしなくても、おそらく問題ないと思いますが、安全のためにアンインストールします。）もう一つ別の管理者権限のあるアカウントを（半角ローマ字名で）下の指示に従って作成して、そのアカウントにサインインして、上の、1から6を試してください。問題なく、1から6が完了したら、しばらく、そちらのアカウントを利用してください。それ以降については、また下に書きます。別のアカウントでも、問題が解決しない場合は、コンピュータに詳しい方に相談してください。わたしのホームページにある、メールアドレスから、わたしに相談するときは、次の三つの情報をコピー・ペーストして、教えてください。\n上の手順のどこでどのような問題が生じたか、そのときの、エラーメッセージ\nSys.getenv() の出力\nWindows の場合、コマンド・プロンプトから、systeminfo と入力したときの出力\n別のアカウントでも、問題が解決しない場合は、コンピュータに詳しい方に相談してください。わたしのホームページにある、メールアドレスから、わたしに相談するときは、次の三つの情報をコピー・ペーストして、教えてください。上の手順のどこでどのような問題が生じたか、そのときの、エラーメッセージSys.getenv() の出力Windows の場合、コマンド・プロンプトから、systeminfo と入力したときの出力注意：Windows における既知の不具合についてSys.getenv('HOME') と、Sys.getenv('R_LIBS_USER') をそれぞれ、コピーして、RStudio 左下の窓枠の Console タブに、ペーストして、エンターして、???? や、カタカナ、漢字や、OneDrive という文字列が現れるか確認してください。Sys.getenv() とすれば、すべての環境変数を確認することもできます9。Windows の日本語システムで、アカウント名に日本語を使っておられる方、または、OneDrive を使っていて、Documents（書類）ディレクトリーのすべてをバックアップしておられる方は、ファイルを作成したり、パッケージをインストールするときに、問題が発生する可能性があります。カタカナや漢字のユーザネームを使っている場合は、RMarkdown で、文書を作成し、PDF で出力するときには、問題が起こります10。解決方法は上に書いたように、一つの解決方法として、TinyTeX を、Home とは異なるところにインストールしています11。OneDrive で、ドキュメントフォルダ全体のバックアップをとっている場合も、問題が起こる可能性がありますが、一般的には書けませんので、困ったときは、下に書く方法を参照してください12。","code":""},{"path":"ronrstudio.html","id":"トラブルシューティング２","chapter":"13 R Studio で R","heading":"13.3.4.1 トラブル・シューティング（２）","text":"トラブル・シューティング（１）では解決できない場合の対処法を書きます。わたしは、MacOS では、動作確認の１から６で、問題が起こったと聞いたことがないので、以下では主として、Windows に限って書きます。実際には、さまざまな理由がありますから、以下の方法では対処できないかもしれません。まず、エラーメッセージを丁寧に見ることが大切ですが、簡単には理解できない場合が多いかと思います。そこで、まず、試してみる方法を以下に書きます。","code":""},{"path":"ronrstudio.html","id":"r-および-rstudio-のアンインストール","chapter":"13 R Studio で R","heading":"13.3.4.1.1 R および RStudio のアンインストール","text":"どのようなアプリも、本来はインストールと同時に、アンインストール（アプリを削除）する方法を知っておくことは大切です。Windows: 設定から、アプリを選び、アンインストール（削除）したいものを選択して、実行。Mac: アプリケーションフォルダーから、アプリをみつけ、ゴミ箱へ。備考：環境変数のPath について上記の方法で、残ってしまうものがあります。それは、環境変数 Path の設定です。\nアンインストールなどをしたときは、一旦、サインアウトをして、もう一度、サインインしてから確認してください。Mac は、システムのベースにあるのは、Linux などと同じ、Unix なので、アプリケーションの、ユーティリティ（Utilities）から、Terminal を立ち上げ、\necho $PATH とすると、確認できます。RStudio の左下の窓枠にも Terminal があり、そこからでも、同じように確認できます。Windows の場合は、対応するものには、コマンド・プロンプト（Command Prompt）と、パワーシェル（PowerShell）があります。初期設定13では、RStudio の左下の窓枠には、コマンド・プロンプトが出ていると思います。そこで、echo %PATH% とします。PowerShell の場合は echo $Env:Path とすれば、表示できます。Windows の場合、「設定」から、「環境変数の編集」を検索して、選択すると、Path を見ることができます。上の枠が、ユーザの環境変数、下の枠が、システム環境変数です。ユーザの環境変数の中の、Path（他には、TEMP, TMP もあるかと思います。）をコピーしておくと良いでしょう。Path をダブルクリックして、編集することも可能です。ただし、十分理解しないで、Path を変更すると、問題が起こる可能性がありますので、注意してください。","code":""},{"path":"ronrstudio.html","id":"別のアカウントを作成してインストール","chapter":"13 R Studio で R","heading":"13.3.4.1.2 別のアカウントを作成してインストール","text":"Windows に、もう一つ、アカウントを作成します。[スタート] \\(>\\) [設定] \\(>\\) [アカウント] の順に選択し、[ファミリとその他のユーザー] を選択し、[アカウントの追加] から作成します。[スタート] \\(>\\) [設定] \\(>\\) [アカウント] の順に選択し、[ファミリとその他のユーザー] を選択し、[アカウントの追加] から作成します。どのようにサインインしますかと出ますから、下にある、「このユーザーのサインイン\n情報がありません」を選択します。[次へ]どのようにサインインしますかと出ますから、下にある、「このユーザーのサインイン\n情報がありません」を選択します。[次へ]つぎに、アカウントを作成しましょうとでますから、特に、なにも入力せず、「Microsoft ア\nカウントを持たないユーザーを追加する」を選択します。[次へ]つぎに、アカウントを作成しましょうとでますから、特に、なにも入力せず、「Microsoft ア\nカウントを持たないユーザーを追加する」を選択します。[次へ]アカウント設定、名前とパスワード、名前は、ローマ字と数字の半角で作成。パスワードは２回入れる。アカウントの名前と、パスワードは記録しておくこと。アカウント設定、名前とパスワード、名前は、ローマ字と数字の半角で作成。パスワードは２回入れる。アカウントの名前と、パスワードは記録しておくこと。その下の三つの質問とその答えを記入します。これも、おぼられるものにするか、記録すること。[次へ]その下の三つの質問とその答えを記入します。これも、おぼられるものにするか、記録すること。[次へ]アカウントが作成されるが、そのアカウントを選択すると、「アカウントの種類の変更」が選択できるので、「管理者」に変更。[OK] をクリックして終了。アカウントが作成されるが、そのアカウントを選択すると、「アカウントの種類の変更」が選択できるので、「管理者」に変更。[OK] をクリックして終了。アカウント名をローマ字にします。このアカウントから、インストールしてください。元の日本語アカウントとファイルを共有したいときは、C ドライブのユーザーにあるパブリック（共有）ディレクトリーにコピーしてください。","code":""},{"path":"ronrstudio.html","id":"このあとの使い方について","chapter":"13 R Studio で R","heading":"13.3.4.1.3 このあとの使い方について","text":"他のアカウントに、R と RStudio をインストールしても、自分のアカウントでも、R と RStudio を利用することが可能です。しかし、漢字やカタカナのアカウント名や、OneDrive の問題は、解決しません。アカウント名を修正することは可能ですが、間違えると、コンピュータ自体が動かなくなりますから、ここでは、説明しませんが、興味のあるかたは、矢内勇生さんのスライド を参照してください。OneDrive は、どのように使われているかによって、対応が変わりますので、一般的な対応方法は書けません。OneDrive は、Microsoft が提供するクラウドサービスで、5GB までは、無料で使えることもあり、コンピュータを使い始めるときに14、利用を促されます。5GB を超える場合は、課金されます。十分な容量を有料で確保していると、すべて、OneDrive にバックアップすることになり、Home も、OneDrive の管理下に置かれて、上に述べたような、ファイルを書いたり消去したりを頻繁に行うプログラムの場合には、問題が起こるようです。ただし、バックアップを取ること自体は、とても有効なことですので、設定を変える場合は、十分検討してから行ってください。個人的には、簡単設定で設定される、デスクトップと、ドキュメントと、フォトのうち、ドキュメントについては、OneDrive バックアップを停止し、ドキュメントの中に、バックアップ用のフォリダーを作成し、その中のもののみ、バックアップするのが良いのではないかと思います。それには、ドキュメントのバックアップを外し、OneDrive の中に、フォルダーを作成して、そこに、バックアップするファイルを移動させます。しかし、使い方などによって、状況が異なりますので、コンピュータに詳しいかたに相談することをお勧めします。その上で、RStudio のプロジェクトを作成するときは、OneDrive でバックアップをとっていないフォルダーに作成します。詳細は、下のリンクなどを参照してください。参照リンク","code":""},{"path":"ronrstudio.html","id":"positcloud","chapter":"13 R Studio で R","heading":"13.4 クラウド - Posit Cloud","text":"Posit（RStudio）Cloudは、誰でもオンラインでデータサイエンスを行い、共有し、教え、学ぶことができる、軽量でクラウドベースのソリューションです。2022年11月に、会社名が、RStuio から Posit に変更になったので、Posit Cloud となっていますが、まだ、RStudio Cloud と表示されている箇所もあります。","code":""},{"path":"ronrstudio.html","id":"クラウドサービス-how-to-start-posit-cloud","chapter":"13 R Studio で R","heading":"13.4.1 クラウドサービス　How to Start Posit Cloud","text":"まず、サインアップして、使ってください。一ヶ月の利用時間の限度など、設定されていますが、どこからでも、インターネットにつながっていれば使えるので、わたしは、いつくかアカウントを持って、活用しています。Posit Cloud にアクセスします。Go https://posit.cloud/Get Started または、右上から、Sign を選択します。Sign : top rightEmail address Google accountNew Project: Project Name特徴：制限など（Key Features）プロジェクト数の上限は50。50 projects total共有スペースは一つのみ（5人までのメンバーが10個のプロジェクトまで共有できます） 1 shared space (5 members 10 projects max)コンピュータ時間としては月間最大25時間15。25 compute hours per month各プロジェクトについて最大 1GB のRAM（Read Access Memory）。1 GB RAM per project各プロジェクトについて 1 CPU。1 CPU per project背後で実行する作業は1時間が上限。1 hour background execution time大学で課題などに取り組むと、まず、月間25時間の制限に引っかかり、次のようなメッセージが表示されます。account exceeded compute hour limit. can continue open projects account time, used total 40 compute hours. unable open projects space owned account next usage period begins day.わたしは、このようなメッセージが出たら、重要度にもよりますが、まずは、プロジェクトをダウンロードし、いつでも、自分のコンピュータで使えるようにしてから、他の、アカウントに引っ越して、作業を続けています。その方法を追記しておきます。TIPs：プロジェクトをダウンロード：プロジェクトのダウンロード：自分のコンピュータに R と R Studio が使える場合は、必要なプロジェクトをダンロードします。ダウンロードするには、左上の3本線から、自分の Workspace にもどり、プロジェクトの右についている、ダウンロードボタンを押します。これは、プロジェクトとして、RStudio から開くことができます。installed R Studio R computer, three lines top left, go back workspace.\ndownload button right project. can open computer.他のアカウントとの共有：異なる電子メールアドレスで別の Posit Cloud アカウントを作成します。（create another Posit Cloud account another email address.）使っていたプロジェクトを開き、右上のギアマークから、Change Access を、から、everyone に変更します。（current project, open gear mark top right, change access everyone.）使っていたプロジェクトのアカウント名の隣にある、三つの点が丸で囲まれているものを選び、Share Link を、別のアカウントを作成したアドレスに送ります。（currentproject, next account name, circle three dots. Share link send email another account.）使っていた、元のアカウントからログアウトし、新しいアカウントを開き、送られてきたアドレスクリック、またはコードを入れると、使っていたプロジェクトが開き、Temporary Copy と出ます。編集して使いたい時は、それを Permanent Copy にすると、新しいアカウントで編集し、使うことができます。（, can get access code current project. Log existing account, log new account, use link.\ncan see temporary file containing everything old account use permanent project.)","code":""},{"path":"ronrstudio.html","id":"positcloud-shared-project","chapter":"13 R Studio で R","heading":"13.4.2 PositCloud Shared Project","text":"わたしのプロジェクトを一つ共有してありますので、興味のある方はご覧ください、まず、自分の、PositCloud アカウントにログインする。リンク をクリック上に、Temporary Copy と出ています。このままでの、右下の、窓枠から、Files を選び、開いて中身を見たり、Code Chunk を実行したり、Preview や、knit をすることも可能です。Try と表示されますが、それをクリックすると、表示されます。R Markdown などの詳細は、R Markdown の章をみてください。上に、Save Permanent Copy とあります。これを、クリックすると、自分の、プロジェクトとすることができ、編集も可能になります。","code":""},{"path":"ronrstudio.html","id":"posit-primers-and-cheat-sheet","chapter":"13 R Studio で R","heading":"13.4.3 Posit Primers and Cheat Sheet","text":"Posit Primers の左の帯（表示されていない場合は、左上の３本線をクリックしてください）をみると、いろいろな機能があることがわかります。特に、Primers は、基本的な練習をするプログラムで、あとからも、紹介しますが、答えを入力している形の練習問題になっています。とても有用です。Cheat Sheet は、いくつもの、機能の一覧が、早見表の形式で載っています。使い方などをぼえておくことはできないので、わたしも、よく使っています。","code":""},{"path":"ronrstudio.html","id":"r-のその他の利用方法","chapter":"13 R Studio で R","heading":"13.5 R のその他の利用方法","text":"R Studio または、RStudio Cloud（Posit Cloud） 以外で、R を使われる方のために、少しだけ書いておきます。個人的には、Google colab と、Cocalc を利用しています。Google colab は、Google アカウントの作成、Cocalc は、Cocalc アカウントの作成、または、Google アカウントか、GitHub アカウントのリンクが必要です。Google アカウントをお持ちの方は多いと思うので、Google colab について、最低限のことのみ、書いておきます。","code":""},{"path":"ronrstudio.html","id":"google-colab-で-r","chapter":"13 R Studio で R","heading":"13.5.1 Google colab で R","text":"基本的に、python 開発環境として構築されているものですが、R でも使うことができます。Google アカウントにログインします。ここ をクリックして起動します。一番上に、ノートブック名が Untitled0.ipynb などと表示されますから、適当に変更します。＋コード、＋テキスト　とあり、最初のコードの１行が表示されていますから、たとえば、head(cars) と入れて、左の三角を押します。すると、最初だけ少し時間がかかりますが、その下に結果がでます。次に、上や、最後の行の直下に、表示される、＋コード、＋テキスト をクリックして、あたらしい、コード・チャンクか、テキスト・チャンクを書き入れていきます。tidyverse などは、すでにインストールされていますが、使いたいときは、library(tidyverse) とし、インストールされていないときは、install.packages(\"WDI\") などとします。ノートを、保存、印刷、ダウンロードなど可能です。フォルダーを作成して、外部ファイルを読み込んだり、書き出したりすることも可能です。","code":""},{"path":"ronrstudio.html","id":"参考-2","chapter":"13 R Studio で R","heading":"13.5.1.1 参考","text":"use R Google Colab:","code":""},{"path":"ronrstudio.html","id":"cocalc-で-r-と-rmarkdown","chapter":"13 R Studio で R","heading":"13.5.2 CoCalc で R と RMarkdown","text":"Cocalc リンク無償版は、スピードが遅いですが、個人的には、有用なクラウドサービスとして、活用しています。グループでプロジェクトを共有することも簡単にできます。最初は、上のリンクの下にある、SinUp から、アカウントを作成します。Email アドレス、または、Google などのアカウントにリンクさせて、アカウントを作成することが可能です。Create New Project から、プロジェクトを作成します。使い方New から、Sage Worksheet を選択して、%default_mode r と最初に書けば、そのあと、R のコマンドを実行できます。New から、RMarkdown を選択すると、RMarkdown 文書を作成することができます。他にも、TeX や、Python Notebook (Jupyter Notebook) など、さまざまな道具が提供されています。Maxima と呼ばれる、Maathematica の Free のバージョンから改良した、SageMath からスタートしたサイトです。","code":""},{"path":"rmarkdown.html","id":"rmarkdown","chapter":"14 R Markdown","heading":"14 R Markdown","text":"","code":""},{"path":"rmarkdown.html","id":"reproducible-and-literate-programming","chapter":"14 R Markdown","heading":"14.1 Reproducible and Literate Programming","text":"データサイエンスは、サイエンス（科学）ということばもついていますが、特に、根拠に基づいた（evidence based）とか、データに基づいた（data based）ということばを使うときには、なおさら、再現可能性（reproducibility）や、コードの内容の説明などのコミュニケーションにも注力する必要があります。このことを心がけて、データサイエンスを学んでいきましょう。表題にある、“Reproducible Literate Programming” は、Reproducible （再現可能）かつ、Literate　な（理解できるように記述した）Program（プログラム・コード）を共有することをたいせつにしましょうということです。","code":""},{"path":"rmarkdown.html","id":"目的問いなど","chapter":"14 R Markdown","heading":"14.1.1 目的、問いなど","text":"プロジェクトの目的、問いなどは、途中で変わっていくこともありますが、その都度に、メモをしておくと良いでしょう。","code":""},{"path":"rmarkdown.html","id":"データについて","chapter":"14 R Markdown","heading":"14.1.2 データについて","text":"どのようなデータをどのように取得してきたかを、記録し、伝えられるようにすることが、必要です。データを取得するときから、取得方法や、それを伝える方法にも常に気をつけましょう。","code":""},{"path":"rmarkdown.html","id":"コードについて","chapter":"14 R Markdown","heading":"14.1.3 コードについて","text":"どのようなコードでそのグラフ（chart）などが得られたかも、単にコードを記述するだけでなく、それぞれの部分に、説明を付与することも有効です。","code":""},{"path":"rmarkdown.html","id":"グラフについて","chapter":"14 R Markdown","heading":"14.1.4 グラフについて","text":"視覚化（visualization）は、とても有効です。そこで、見て理解したこと、観察したこと（observations）などは、簡単でも構いませんから、必ず、記録しておきましょう。","code":""},{"path":"rmarkdown.html","id":"まとめr-markdown-の目的","chapter":"14 R Markdown","heading":"14.1.5 まとめ：R Markdown の目的","text":"まさに、このようなことを可能にするのが、R Markdown です。少しずつ学んでいきましょう。","code":""},{"path":"rmarkdown.html","id":"準備パッケージのインストール","chapter":"14 R Markdown","heading":"14.2 準備：パッケージのインストール","text":"Rパッケージは、Rの拡張機能で、コード、データ、ドキュメントを標準化されたコレクション形式で含んでおり、標準的なものは、R Studio の Top Bar の Tool > Install Packages からインストールできます。tidyversermarkdowntinytexインストールを複数回しても問題はありませんが、インストールされているかどうかは、Packages タブから確認することができます。インストールは一回だけ。ときどき、Tools > Check Package Update をつかって、Update しておくと良いでしょう。","code":""},{"path":"rmarkdown.html","id":"r-notebook","chapter":"14 R Markdown","heading":"14.3 R Notebook","text":"R Markdownはデータサイエンスのためのオーサリングフレームワーク。コード（プログラム）とその実行結果、を記録・表示し、高品質のレポートの作成を可能にします。R Notebook は、独立してインタラクティブに実行できるチャンクを持つR Markdownドキュメントの一つの形式で、入力のすぐ下に出力が表示することができます。File > New File > R NotebookSave file name, say, test-notebookPreview [Preview] buttonRun Code Chunk plot(cars) Preview .","code":""},{"path":"rmarkdown.html","id":"日本語のテンプレート","chapter":"14 R Markdown","heading":"14.4 日本語のテンプレート","text":"下のリンクを開き、右上の Code ボタンから、Download Rmd を選択すると、ダウンロードできますから、ダインロードしたものを、プロジェクト・フォールダーに移動またはコピーしてください。ダウンロードできないときは、Ctrl を押しながら、Download Rmd をクリックすると、Save で保存できると思います。ブラウザーによって仕様が異なりますから、適切な方法を選んでください。https://ds-sl.github.io/intro2r/RNotebook-J.nb.htmlhttps://ds-sl.github.io/intro2r/Rmarkdown-J.nb.htmlWindows でも、Mac でも提供されている、Google Chrome の場合には、Code ボタンから、ダンロードされるはずです。RNotebook の新しいファイルを作成し、下のサイトを表示させて、コピー・ペーストで、書き換えることも可能です。https://ds-sl.github.io/intro2r/RNotebook-J.htmlhttps://ds-sl.github.io/intro2r/Rmarkdown-J.html","code":""},{"path":"rmarkdown.html","id":"r-markdown-いくつかの-output","chapter":"14 R Markdown","heading":"14.5 R Markdown いくつかの Output","text":"PDFでエラー？ コンソールで tinytex::install_tinytex()TeX システムがインストールされている場合は不要エラーの例を書いておきます。tinytex::install_tinytex() おらず、他の TeX システムもインストールしていない環境で、上に引用した、RNotebook-J から、PDF を作成したときに生じたエラーです。ここに「よくわからない場合は、RでTinyTeXをインストールすることもできます: tinytex::install_tinytex()」と書いてあります。エラーメッセージの例","code":"---\ntitle: \"Testing R Markdown Formats\"\nauthor: \"ID Your Name\"\nheader-includes:\n  - \\usepackage{ctex}\noutput:\n  html_notebook: default\n  html_document: default\n  pdf_document: default\n    latex_engine: xelatex\n  word_document: default\n  powerpoint_presentation: default\n  ioslides_presentation: default\n---If you are not sure, you may install TinyTeX in R: tinytex::install_tinytex()processing file: RNotebook-J.Rmd\n\n“C:/Program Files/RStudio/bin/quarto/bin/tools/pandoc” +RTS -K512m -RTS RNotebook-J.knit.md –to latex –from markdown+autolink_bare_uris+tex_math_single_backslash –output RNotebook-J.tex –lua-filter “C:000117x-library\\4.2.lua” –lua-filter “C:000117x-library\\4.2-div.lua” –embed-resources –standalone –highlight-style tango –pdf-engine pdflatex –variable graphics –variable “geometry:margin=1in” output file: RNotebook-J.knit.md\n\nError: LaTeX failed to compile RNotebook-J.tex. See https://yihui.org/tinytex/r/#debugging for debugging tips. In addition: Warning message: In system2(…, stdout = if (use_file_stdout()) f1 else FALSE, stderr = f2) : ‘“pdflatex”’ not found Execution halted\n\nNo LaTeX installation detected (LaTeX is required to create PDF output). You should install a LaTeX distribution for your platform: https://www.latex-project.org/get/\n\nIf you are not sure, you may install TinyTeX in R: tinytex::install_tinytex()\n\nOtherwise consider MiKTeX on Windows - http://miktex.org\n\nMacTeX on macOS - https://tug.org/mactex/ (NOTE: Download with Safari rather than Chrome strongly recommended)\n\nLinux: Use system package manager"},{"path":"rmarkdown.html","id":"youtube-video---rmarkdown","chapter":"14 R Markdown","heading":"14.6 YouTube Video - rmarkdown","text":"","code":""},{"path":"rmarkdown.html","id":"rmarkdown-で-pdf-を作成するときの注意","chapter":"14 R Markdown","heading":"14.6.1 RMarkdown で PDF を作成するときの注意","text":"RMarkdown では、tinytex パッケージというとても素晴らしいものが提供されています。これは、TeXLive というシステムを扱うためのものですが、LiveTeX 全体は、3GB 程度ありますが、非常に小さなファイルで、必要なものだけ、導入できるようになっています。システムを、使われる方は、TeXLive が、インストールされているかと思いますので、それを使うことが狩野樹になっています。一応、TeXLive がインストールされていて、そのあとに、TinyTeX をインストールしようとすると、拒否されますが、インストール、アンインストールなどをしていると、Path も変更になるため、問題が起こり、PDF が作成できなくなる場合もあります。その場合の対処も含めて、下に書きます。アカウントに漢字やカタカナが入っていると、PDF が作成できません。","code":""},{"path":"rmarkdown.html","id":"tinytex-によるインストール方法","chapter":"14 R Markdown","heading":"14.6.1.1 tinytex によるインストール方法","text":"tinytex::install_tinytex(dir = “C:/TTeX”)環境変数の設定：\nPath=C:\\**UserName**\\AppData\\Local\\Microsoft\\WindowsApps;C:\\TTeX\\bin\\windows\nUserName の部分は、ご自分のユーザネームに変更　 は日本語システムでは、¥ と表示されているかもしれません。\nPath=C:\\**UserName**\\AppData\\Local\\Microsoft\\WindowsApps;C:\\TTeX\\bin\\windowsUserName の部分は、ご自分のユーザネームに変更　 は日本語システムでは、¥ と表示されているかもしれません。これで解決しない場合は、Windows に、もう一つ、アカウントを作成し16、アカウント名を英語にして、そちらから、インストールしてください。元の日本語アカウントとファイルを共有したいときは、共有ディレクトリーにコピーしてください。すべての状況は確認できませんので、ここまでとします17。Chat GPT に確認したやりとりは、ここにあります。自分で確認をして、HOME の変更などをしてみても良いですが、問題が生じた時に、サポートできませんから、一般的な方法としては、書かないことにします。注：矢内勇生さんのサイトには、詳細な説明があります。","code":""},{"path":"rbasics.html","id":"rbasics","chapter":"15 R Basics","heading":"15 R Basics","text":"","code":""},{"path":"rbasics.html","id":"プロジェクト---project","chapter":"15 R Basics","heading":"15.1 プロジェクト - Project","text":"RStudio で R を利用する場合には、プロジェクトを作成することを強く勧めます。まず、R Studio を起動します。まず、R Studio を起動します。上のメニューの、File から、New Project を選択します。New Directory（新しいディレクトリー）を選択し、プロジェクトを作成する Directory を決めて、名前をつけます。その名前が、プロジェクト名になります。上のメニューの、File から、New Project を選択します。New Directory（新しいディレクトリー）を選択し、プロジェクトを作成する Directory を決めて、名前をつけます。その名前が、プロジェクト名になります。Directory（フォルダー）を指定してその名前をつけて、プロジェクトを作成します。Directory が階層に分かれているときは、どこに作成するかを選択してから、名前をつけて、作成します。一旦、R Studio を終了してみましょう。一旦、R Studio を終了してみましょう。プロジェクトの起動には、いくつかの方法があります。プロジェクトの起動には、いくつかの方法があります。まず、R Studio を起動。一つしかプロジェクトがない場合は、そのプロジェクトが起動すると思います、。上に、プロジェクト名が掲載されていれば、問題ありません。File から、Open Project を選択し、起動したい、プロジェクトの Directory（フォルダー）を選択して起動します。File から、Recent Project（最近使ったプロジェクト）を選択すると、プロジェクト名が表示されますから、選択すると起動することができます。コンピュータのプロジェクト入っているディレクトリー（フォルダー）をさがし、そこに、プロジェクト名.Rproj とあるものを見つけて、それを開くと、そのプロジェクトが起動します。作業後は、保存しますかと聞かれますから、保存して終了してください。","code":""},{"path":"rbasics.html","id":"コンソールで実行---run-in-console","chapter":"15 R Basics","heading":"15.2 コンソールで実行 - Run in Console","text":"プログラム（コード）の実行には、いくつかの方法がありますが、一番、基本的な、コンソール（Console）での実行について、説明します。Console は、R Studio の左下にあります。（左の枠が一つになっているかもしれません。その一番左のタブが Console です。選択されていない場合は、Console を選択してください。）","code":""},{"path":"rbasics.html","id":"最初の四つ","chapter":"15 R Basics","heading":"15.2.1 最初の四つ","text":"下の、四つを、一つずつ、一番下の、> マークの次に書き（または、コピー・ペーストして）Return または、Enter キーを押してください。実行結果が、その下に出ます。最後の、plot(cars) は、cars というデータの、散布図が右下の、Plots タブに表示されます。head(cars)str(cars)summary(cars)plot(cars)エラーが表示されたら、もう一度、スペルを確認して、入力してみてください。次のような、結果が表示されると思います。簡単な説明をつけます。head(cars) は、cars という、R に付属している、データの、最初（頭 head）の6行を、表示します。str(cars) は、cars という、R に付属している、データの構造（structure）を表示します。data.frame とありますが、これは、矩形になったデータ（各列の長さがおなじ）の一番簡単なクラスの名前で、2変数、それぞれが、50 個の数値データ（numerical data） からなっていることがわかります。head(cars) では、縦に表示されていたものが、横に表示されています。$speed、$dist とありますが、cars$speed, cars$dist は、cars データの、それぞれの列を意味します。cars データの概要（summary）が表示されます。各列（変数）について、最小値（Minimum）、小さい方から、4分の1を切り捨てたときの最小の値（1st Quadrant）、中央値（Median）、平均（Mean）、大きい方から、4分の1を切り捨てたときの最大の値（3rd Quadrant）、最大値（Maximum）が表示されます。右下の、窓枠の、Plots に、上のグラフ（散布図）が表示されると思います。Export と書いてある、プルダウンメニューがあり、そこから、画像として保存することも、可能です。以前は、このように取り出した画像を、Word などに貼り付けて、使っていました。現在でも、そのような方法を知っていることは有効だと思います。","code":"\nhead(cars)\n#>   speed dist\n#> 1     4    2\n#> 2     4   10\n#> 3     7    4\n#> 4     7   22\n#> 5     8   16\n#> 6     9   10\nstr(cars)\n#> 'data.frame':    50 obs. of  2 variables:\n#>  $ speed: num  4 4 7 7 8 9 10 10 10 11 ...\n#>  $ dist : num  2 10 4 22 16 10 18 26 34 17 ...\nsummary(cars)\n#>      speed           dist       \n#>  Min.   : 4.0   Min.   :  2.00  \n#>  1st Qu.:12.0   1st Qu.: 26.00  \n#>  Median :15.0   Median : 36.00  \n#>  Mean   :15.4   Mean   : 42.98  \n#>  3rd Qu.:19.0   3rd Qu.: 56.00  \n#>  Max.   :25.0   Max.   :120.00\nplot(cars)"},{"path":"rbasics.html","id":"アサインメントヘルプ","chapter":"15 R Basics","heading":"15.2.2 アサインメント、ヘルプ","text":"コンソールで次のそれぞれを、試してみてください。df <- carsdf に、cars をアサインします。すなわち、df が、cars の内容に置き換わります。cars はデータですが、データを含む、オブジェクトの名前を設定するためにも使います。オブジェクト名は。英文字から始まれば、かなりの自由度がありますが、わたしは、英文字と数字と _（underscore） 程度しか使わないようにしています。head(df)head(df) は、head(cars) と同じ出力が得られます。View(cars)左上の、窓枠が開き、cars というデータ の内容が表示されます。列名のところには、三角形も表示され、それを用いると、大きい順、小さい順などに、並び替えることも可能です。また、フィルター機能も使えます。?cars右下の、窓枠の　Help タブに、cars の情報が表示されます。Help タブにある、虫眼鏡がついた、検索窓（search window）に、cars といれても、同じ結果が得られます。\n内容を確認してください。一番上には cars {datasets} とありますが、これは、datasets というパッケージの、cars だという意味です。そこで、datasets を調べてみましょう。?datasets“R Datasets Package” だと書かれていて、さらに、package contains variety datasets. complete list, use library(help = “datasets”).さまざまなデータが含まれています。全てのリストをみるには、library(help = \"datasets\") を使ってください。とありますから、library(help = \"datasets\") をコンソールに入力してみてください。library(help = \"datasets\")左上の窓枠に、リストが表示されます。古いデータばかりですが、例として使うには、十分すぎるぐらいの、数のデータがあります。これらは、Toy Data（おもちゃのデータ）と呼ばれることもあります。cars も見つかりましたか。","code":""},{"path":"rbasics.html","id":"おすすめ","chapter":"15 R Basics","heading":"15.2.3 おすすめ","text":"コンピュータのシステムが、日本語であると、R の言語も日本語になっているはずです。そこで、エラーが発生すると、一部、日本語で表示されます。しかし、ネット上などで、そのエラーの対応を検索するときは、英語のエラーメッセージで検索した方が、解決方法が得られる可能性が圧倒的に高いので、わたしは、英語に設定しています。英語にするには、Console で次のようにします。言語を英語に設定：Sys.setenv(LANG = \"en\")RStudio を終了して、もう一度起動すると、日本語に戻っていると思います。ですから、作業の最初、または、エラーが出たら、変更することをお勧めします。日本語に戻したいときは、次のようにします。言語を日本語に設定：Sys.setenv(LANG = \"ja\")さまざまな Help なども、すべて日本語で表示されれば日本語を使うのは有効かもしれませんが、すくなくとも、現在は、そうではないので、上に説明したことから、英語に設定することをお勧めします。","code":""},{"path":"rbasics.html","id":"練習-1","chapter":"15 R Basics","heading":"15.2.4 練習","text":"head(cars, 10L) は何が出力されますか。head(cars, n=10L) と同じですか。?head または、Help の検索窓に head と入力して、説明を見てみてください。head(cars, n=10L) などについて、書いてありましたか。他には、どのようなことが分かりましたか。datasets のデータのいくつかについて、そのデータの help や、head, str, summary などを使ってみてください。これらで表示できない場合はありますか。データについては、最初に、これら、三つを試してみることをお勧めします。わかったことをメモしておくと良いでしょう。datasets のリストをみるには、library(help = \"datasets\") でしたね。","code":""},{"path":"rbasics.html","id":"rstudio-について","chapter":"15 R Basics","heading":"15.3 RStudio について","text":"RStudio は多くの機能を持っています。","code":""},{"path":"rbasics.html","id":"四つの窓枠とタブ-four-panes-and-tabs","chapter":"15 R Basics","heading":"15.3.1 四つの窓枠とタブ Four Panes and Tabs","text":"左上（Top Left）: スクリプトや文書、データなどの編集（Source Editor）右上（Top Right）: 環境変数（Environment）, 履歴（History） など（etc.）左下（Bottom Left）: コードの実行・実行結果などを表示するコンソール（Console）, コンピュータシステムの端末（Terminal）, 文書の機械語翻訳（Render）, 背後での作業（Background Jobs）右下（Bottom Right）: ファイル（Files）, 描画（Plots）, パッケージ（Packages）, ヘルプ（Help）, 文書などの表示窓（Viewer）, R Markdown の HTML, PDF 表示（Presentation18）","code":""},{"path":"rbasics.html","id":"r-script-実行記録","chapter":"15 R Basics","heading":"15.4 R Script 実行記録","text":"R Script を使って、コードを実行すると、その記録を残すことができます。","code":""},{"path":"rbasics.html","id":"r-script-の作成","chapter":"15 R Basics","heading":"15.4.1 R Script の作成","text":"RStudio の上のメニュー・バーからFile > New File > R Script を選択します。File > Save で、名前をつけて保存します。{file_name}.R が作成されます。\n右下の、Files から、ファイルを確認してください。\n右下の、Files から、ファイルを確認してください。head(cars), str(cars), summary(cars), plot(cars) などと改行をしながらコードを書きます。実行するには、カーソルの場所で Ctrl+Shift+Enter (Win) または Cmd+Shift+Enter (Mac) とすると、カーソルのある行か、その下の行で、最初のコードが実行されます。\nR Script エディターの上にある、Run ボタンを押しても、同様に実行されます。\nRun ボタンの右の、Source ボタンを押すと、そのスクリプトの、最初からすべてが実行されます。\nR Script エディターの上にある、Run ボタンを押しても、同様に実行されます。Run ボタンの右の、Source ボタンを押すと、そのスクリプトの、最初からすべてが実行されます。最後には保存しておきましょう。たとえば、myfirstscript などとすると、File のところに、myfirstscript.R というファイルができていることを確認できます。","code":""},{"path":"rbasics.html","id":"r-script-による実行","chapter":"15 R Basics","heading":"15.4.2 R Script による実行","text":"新しく、R Script を作成し、この下の、コード（ハイライトされている部分）をコピー・ペーストして、保存し、実行してみてください。それぞれ、どのようなことをしているでしょうか。","code":""},{"path":"rbasics.html","id":"スクリプト1-basics.r","chapter":"15 R Basics","heading":"15.4.2.1 スクリプト1: basics.R","text":"","code":"\n#################\n#\n# basics.R\n#\n################\n# 'Quick R' by DataCamp may be a handy reference: \n#     https://www.statmethods.net/management/index.html\n# Cheat Sheet at RStudio: https://www.rstudio.com/resources/cheatsheets/\n# Base R Cheat Sheet: https://github.com/rstudio/cheatsheets/raw/main/base-r.pdf\n# To execute the line: Control + Enter (Window and Linux), Command + Enter (Mac)\n## try your experiments on the console\n\n## calculator\n\n3 + 7\n\n### +, -, *, /, ^ (or **), %%, %/%\n\n3 + 10 / 2\n\n3^2\n\n2^3\n\n2*2*2\n\n### assignment: <-, (=, ->, assign()) \n\nx <- 5\n\nx \n\n#### object_name <- value, '<-' shortcut: Alt (option) + '-' (hyphen or minus) \n#### Object names must start with a letter and can only contain letter, numbers, _ and .\n\nthis_is_a_long_name <- 5^3\n\nthis_is_a_long_name\n\nchar_name <- \"What is your name?\"\n\nchar_name\n\n#### Use 'tab completion' and 'up arrow'\n\n### ls(): list of all assignments\n\nls()\nls.str()\n\n#### check Environment in the upper right pane\n\n### (atomic) vectors\n\n5:10\n\na <- seq(5,10)\n\na\n\nb <- 5:10\n\nidentical(a,b)\n\nseq(5,10,2) # same as seq(from = 5, to = 10, by = 2)\n\nc1 <- seq(0,100, by = 10)\n\nc2 <- seq(0,100, length.out = 10)\n\nc1\n\nc2\n\nlength(c1)\n\n#### ? seq   ? length   ? identical\n\n(die <- 1:6)\n\nzero_one <- c(0,1) # same as 0:1\n\ndie + zero_one # c(1,2,3,4,5,6) + c(0,1). re-use\n\nd1 <- rep(1:3,2) # repeat\n\n\nd1\n\ndie == d1\n\nd2 <- as.character(die == d1)\n\nd2\n\nd3 <- as.numeric(die == d1)\n\nd3\n\n### class() for class and typeof() for mode\n### class of vectors: numeric, charcters, logical\n### types of vectors: doubles, integers, characters, logicals (complex and raw)\n\ntypeof(d1); class(d1)\n\ntypeof(d2); class(d2)\n\ntypeof(d3); class(d3)\n\nsqrt(2)\n\nsqrt(2)^2\n\nsqrt(2)^2 - 2\n\ntypeof(sqrt(2))\n\ntypeof(2)\n\ntypeof(2L)\n\n5 == c(5)\n\nlength(5)\n\n### Subsetting\n\n(A_Z <- LETTERS)\n\nA_F <- A_Z[1:6]\n\nA_F\n\nA_F[3]\n\nA_F[c(3,5)]\n\nlarge <- die > 3\n\nlarge\n\neven <- die %in% c(2,4,6)\n\neven\n\nA_F[large]\n\nA_F[even]\n\nA_F[die < 4]\n\n### Compare df with df1 <- data.frame(number = die, alphabet = A_F)\ndf <- data.frame(number = die, alphabet = A_F, stringsAsFactors = FALSE)\n\ndf\n\ndf$number\n\ndf$alphabet\n\ndf[3,2]\n\ndf[4,1]\n\ndf[1]\n\nclass(df[1])\n\nclass(df[[1]])\n\nidentical(df[[1]], die)\n\nidentical(df[1],die)\n\n####################\n# The First Example\n####################\n\nplot(cars)\n\n# Help\n\n? cars\n\n# cars is in the 'datasets' package\n\ndata()\n\n# help(cars) does the same as ? cars\n# You can use Help tab in the right bottom pane\n\nhelp(plot)\n? par\n\nhead(cars)\n\nstr(cars)\n\nsummary(cars)\n\nx <- cars$speed\ny <- cars$dist\n\nmin(x)\nmean(x)\nquantile(x)\n\nplot(cars)\n\nabline(lm(cars$dist ~ cars$speed))\n\nsummary(lm(cars$dist ~ cars$speed))\n\nboxplot(cars)\n\nhist(cars$speed)\nhist(cars$dist)\nhist(cars$dist, breaks = seq(0,120, 10))"},{"path":"rbasics.html","id":"スクリプト2-coronavirus.r","chapter":"15 R Basics","heading":"15.4.2.2 スクリプト2: coronavirus.R","text":"","code":"\n# https://coronavirus.jhu.edu/map.html\n# JHU Covid-19 global time series data\n# See R package coronavirus at: https://github.com/RamiKrispin/coronavirus\n# Data taken from: https://github.com/RamiKrispin/coronavirus/tree/master/csv\n# Last Updated\nSys.Date()\n\n## Download and read csv (comma separated value) file\ncoronavirus <- read.csv(\"https://github.com/RamiKrispin/coronavirus/raw/master/csv/coronavirus.csv\")\n# write.csv(coronavirus, \"data/coronavirus.csv\")\n\n## Summaries and structures of the data\nhead(coronavirus)\nstr(coronavirus)\ncoronavirus$date <- as.Date(coronavirus$date)\nstr(coronavirus)\n\nrange(coronavirus$date)\nunique(coronavirus$country)\nunique(coronavirus$type)\n\n## Set Country\nCOUNTRY <- \"Japan\"\ndf0 <- coronavirus[coronavirus$country == COUNTRY,]\nhead(df0)\ntail(df0)\n(pop <- df0$population[1])\ndf <- df0[c(1,6,7,13)]\nstr(df)\nhead(df)\n### alternatively,\nhead(df0[c(\"date\", \"type\", \"cases\", \"population\")])\n###\n\n## Set types\ndf_confirmed <- df[df$type == \"confirmed\",]\ndf_death <- df[df$type == \"death\",]\ndf_recovery <- df[df$data_type == \"recovery\",]\nhead(df_confirmed)\nhead(df_death)\nhead(df_recovery)\n\n## Histogram\nplot(df_confirmed$date, df_confirmed$cases, type = \"h\")\nplot(df_death$date, df_death$cases, type = \"h\")\n# plot(df_recovered$date, df_recovered$cases, type = \"h\") # no data for recovery\n\n## Scatter plot and correlation\nplot(df_confirmed$cases, df_death$cases, type = \"p\")\ncor(df_confirmed$cases, df_death$cases)\n\n\n## In addition set a period\nstart_date <- as.Date(\"2022-07-01\")\nend_date <- Sys.Date() \ndf_date <- df[df$date >=start_date & df$date <= end_date,]\n##\n\n## Set types\ndf_date_confirmed <- df_date[df_date$type == \"confirmed\",]\ndf_date_death <- df_date[df_date$type == \"death\",]\ndf_date_recovery <- df_date[df_date$data_type == \"recovery\",]\nhead(df_date_confirmed)\nhead(df_date_death)\nhead(df_date_recovery)\n\n## Histogram\nplot(df_date_confirmed$date, df_date_confirmed$cases, type = \"h\")\nplot(df_date_death$date, df_date_death$cases, type = \"h\")\n# plot(df_date_recovered$date, df_date_recovered$cases, type = \"h\") # no data for recovery\n\nplot(df_date_confirmed$cases, df_date_death$cases, type = \"p\")\ncor(df_date_confirmed$cases, df_date_death$cases)\n\n#### Extra\nplot(df_confirmed$date, df_confirmed$cases, type = \"h\", \n     main = paste(\"Comfirmed Cases in\",COUNTRY), \n     xlab = \"Date\", ylab = \"Number of Cases\")"},{"path":"rbasics.html","id":"練習-2","chapter":"15 R Basics","heading":"15.4.3 練習","text":"上の、coronavirus.R についてCOUNTRY <- \"Japan\" の Japan を他の国に変えてみましょう。start_date <- .Date(\"2022-07-01\") の日付を、他の日付に変えてみましょう。df_confirmed$cases と df_death$cases についてどんなことがわかりますか。発見や、問いがあれば、書き出してみましょう。","code":""},{"path":"rbasics.html","id":"tips","chapter":"15 R Basics","heading":"15.4.4 Tips","text":"キーボード・ショートカットと言われる、さまざまな機能があります。上のメニュー・バー： Help > Keyboard Short Cut Help 確認してみてください。右下の窓枠: Files タブから、ファイルの確認ができます。","code":""},{"path":"rbasics.html","id":"パッケージ---packages","chapter":"15 R Basics","heading":"15.5 パッケージ - Packages","text":"R packages extensions R statistical programming language containing code, data, documentation standardised collection format can installed users R using Tool > Install Packages top menu bar R Studio. https://en.wikipedia.org/wiki/R_packageRパッケージは、Rの拡張機能で、コード、データ、ドキュメントを標準化されたコレクション形式で含んでおり、標準的なものは、R Studio の Top Bar の Tool > Install Packages からインストールできます。","code":""},{"path":"rbasics.html","id":"パッケージのインストール","chapter":"15 R Basics","heading":"15.5.1 パッケージのインストール","text":"いずれ使いますので、まずは、三つのパッケージをインストールしてみましょう。tidyversermarkdowntinytexインストール方法はいくつかあります。一つ目は、上のメニューバーの Tool から、Install Packages … を選択します。そして、パッケージーズにインストールしたい、パッケージ名を入力します。そのパッケージ名が下にも出れば、Install ボタンを押してください。入力した名前の下にパッケージ名が出ない場合は、スペルが間違っている可能性がありますから、確認して、入れ直してください。Console に、install.packages(\"tidyverse\") などと表示され、たくさんメッセージが出ます。終了すると、> のマークがでます。二つ目は、install.packages(\"tidyverse\") のような書式で書いて、Console に入れる方法です。三つ目は、右下の窓枠の Packages のタブにある、Install というボタンを押す方法です。すると、一番目の方法に、戻り、パッケージ名を入力できるようになります。この Packages タブにある、ものが、すでに、インストールされているパッケージです。そのなかで、base や、datasets などいくつかに、チェックがついていると思いますが、それらは、ロードされていて、いつでも、使える状態になっていることを意味しています。ロードは、たとえば、library(tidyverse) のようにしますが、それは、いずれもう一度説明します。インストールは一回だけ。ときどき、Tools > Check Package Update をつかって、Update しておくと良いでしょう。パッケージのインストールで問題が生じることがあります。特に、Windows の日本語システムの場合です。（4.3.2 R Studio の インストール の下に書いてある部分を参照してください。）回避方法もいくつかあるようですが、混乱をさけるため、その場合は、Posit Cloud（旧：RStudio Cloud）を使うと良いでしょう。それを見越して、最初は、Posit Cloud ではじめることを、わたしはお薦めしています。自分のコンピュータで、R が RStudio 上で問題なく動いていても、Cloud 上にアカウントを持っていて、実行できることは有効ですし、全員が、同じ環境で作業できることもたいせつなことです。他にも、すぐ、Cheat Sheets（早見表）や、Posit Primers という練習問題（Tutorial）を利用できたり、プロジェクトを共有したりなど、さまざまなメリットがあります。","code":""},{"path":"rbasics.html","id":"備考-1","chapter":"15 R Basics","heading":"15.5.2 備考","text":"Package によっては、Source から Compile するかと聞いてくる場合があります。どちらでも、良いのですが、特に、問題が起こっていなければ、でよいと思います。コンピュータにあった形でインストールすることが必要な場合は、Yes とします。同じパッケージをもう一度、インストールしたり、または、関連するパッケージがあるような場合、R をリスタートするかと聞いてくることがあります。特に問題が起こらなければ、で構いません。ただ、エラーが起こって、それに関連して、特別なパッケージをインストールする必要がある場合がありますが、そのときは、Yes としてください。","code":""},{"path":"rbasics.html","id":"練習問題-posit-primers","chapter":"15 R Basics","heading":"15.6 練習問題 Posit Primers","text":"Posit Primers https://posit.cloud/learn/primers教科書 “R Data Science” は、tidyverse パッケージを中心に、データサイエンスについて解説したものですが、Posit Primers は、演習問題をしながら、教科書の内容を理解できるように構成されています。Posit Cloud からは、左のメニュー（隠れている場合は左上の3本線をクリックして表示させて）から選ぶことができます。そうでない場合は、直接、上のリンクから、利用してください。","code":""},{"path":"rbasics.html","id":"最初の演習-the-basics-r4ds-explore-i","chapter":"15 R Basics","heading":"15.6.1 最初の演習　The Basics – r4ds: Explore, I","text":"Visualization BasicsProgramming Basicsぜひこれら二つの演習問題を、トライしてください。解説を読んでいただけでは、データサイエンスは身につきません。","code":""},{"path":"rbasics.html","id":"参考文献-references","chapter":"15 R Basics","heading":"15.7 参考文献 References","text":"一番目は、すでに紹介した、教科書です。二番目は、この文書を作成している、Bookdown というパッケージのサイトですが、そこに、たくさんの本が、無償で公開されています。素晴らしい本がたくさん含まれています。R Data Science, H. Wickham: https://r4ds..co.nz\nIntroduction: https://r4ds..co.nz/explore-intro.html#explore-intro\nIntroduction: https://r4ds..co.nz/explore-intro.html#explore-introBookdown: https://bookdown.org, Archive下の一番目は、R 入門を、２時限の講義でしたときのものです。二番目と三番目は、講義で使ったものを、まとめたものです。教科書のようには、できていませんが、参考になる部分もあるかと思いますので、紹介しておきます。Introducton RData Analysis Researchers 2022Data Analysis Researchers 2021","code":""},{"path":"rbasics.html","id":"youtube-video---getstarted","chapter":"15 R Basics","heading":"15.8 YouTube Video - getstarted","text":"ファイル：https://ds-sl.github.io/intro2r/getstarted.html","code":""},{"path":"visualize.html","id":"visualize","chapter":"16 Visualize","heading":"16 Visualize","text":"","code":""},{"path":"transform.html","id":"transform","chapter":"17 Transform","heading":"17 Transform","text":"","code":""},{"path":"import.html","id":"import","chapter":"18 Import","heading":"18 Import","text":"","code":""},{"path":"modeling.html","id":"modeling","chapter":"19 Modeling","heading":"19 Modeling","text":"","code":""},{"path":"publicdata.html","id":"publicdata","chapter":"20 Public Data の分析","heading":"20 Public Data の分析","text":"","code":""},{"path":"worldbank.html","id":"worldbank","chapter":"21 World Bank","heading":"21 World Bank","text":"","code":""},{"path":"worldbank.html","id":"world-development-indicator-wdi","chapter":"21 World Bank","heading":"21.1 World Development Indicator (WDI)","text":"パッケージ と tidyverse と WDI を使いますから、下のコードによって、ロードします。まず、三つの例を見てみましょう。なにをしているかわかりますか。考えて見てください。まず、世界の国々の、GDP（gross domestic product 国内総生産）のデータを、取得して、2021年の GDP を大きな順に並べています。値は、たとえば、\\(2.331508e+13\\) のように書かれていますが、これは、科学的記法と呼ばれるもので、\\(2.331508 \\times 10^{13}\\) を意味しています。約23兆ドルです。次に、3兆ドル以上の、６カ国を選択し、その、iso2c と呼ばれるコードを使って、それらの国のデータをもう一度取得し、年次変化をあらわすグラフを描いています。さらにその中から、４カ国を選んで、今度は、GDP の年次変化率を描いています。単位は、パーセントです。これは、ひとつの例ですが、ここで使われているのが、WDI World Development Indicator というもので、世界銀行が、いくつかの指標を定めて、編纂しているものです。","code":"\nlibrary(tidyverse)\n#> ── Attaching core tidyverse packages ──── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nlibrary(WDI)\nWDI(country = \"all\", indicator = c(gdp = \"NY.GDP.MKTP.CD\"),\n    extra=TRUE) %>% drop_na(gdp) %>%\n  filter(year==max(year), income !=\"Aggregates\") %>% \n  drop_na(region) %>% arrange(desc(gdp))#> Rows: 16492 Columns: 13\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (4): year, gdp, longitude, latitude\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 196 × 13\n#>    country      iso2c iso3c  year     gdp status lastupdated\n#>    <chr>        <chr> <chr> <dbl>   <dbl> <lgl>  <date>     \n#>  1 United Stat… US    USA    2021 2.33e13 NA     2022-12-22 \n#>  2 China        CN    CHN    2021 1.77e13 NA     2022-12-22 \n#>  3 Japan        JP    JPN    2021 4.94e12 NA     2022-12-22 \n#>  4 Germany      DE    DEU    2021 4.26e12 NA     2022-12-22 \n#>  5 India        IN    IND    2021 3.18e12 NA     2022-12-22 \n#>  6 United King… GB    GBR    2021 3.13e12 NA     2022-12-22 \n#>  7 France       FR    FRA    2021 2.96e12 NA     2022-12-22 \n#>  8 Italy        IT    ITA    2021 2.11e12 NA     2022-12-22 \n#>  9 Canada       CA    CAN    2021 1.99e12 NA     2022-12-22 \n#> 10 Korea, Rep.  KR    KOR    2021 1.81e12 NA     2022-12-22 \n#> # ℹ 186 more rows\n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>\nWDI(country = c(\"CN\",\"GB\",\"JP\",\"IN\",\"US\",\"DE\"), indicator = c(gdp = \"NY.GDP.MKTP.CD\"), extra=TRUE) %>% drop_na(gdp) %>% \n  ggplot(aes(year, gdp, col = country)) + geom_line() +\n  labs(title = \"WDI NY.GDP.MKTP.CD: gdp\")#> Rows: 372 Columns: 13\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (4): year, gdp, longitude, latitude\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nWDI(country = c(\"CN\",\"IN\",\"JP\",\"US\"), \n    indicator = c(gdp_growth_rate = \"NY.GDP.MKTP.KD.ZG\"), extra=TRUE) %>%\n  drop_na(gdp_growth_rate) %>% \n  ggplot(aes(year, gdp_growth_rate, col = country)) + geom_line() +\n  labs(title = paste(\"WDI NY.GDP.MKTP.KD.ZG: gdp growth rate\"))#> Rows: 248 Columns: 13\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (4): year, gdp_growth_rate, longitude, latitude\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":"worldbank.html","id":"指標-indicators-wdi","chapter":"21 World Bank","heading":"21.1.1 指標 Indicators (WDI)","text":"上の例では、次の二つの指標のコード Indicator Code (WDI Code) が使われました。NY.GDP.MKTP.CD: GDP (current US$)NY.GDP.MKTP.KD.ZG: GDP growth (annual %)","code":""},{"path":"worldbank.html","id":"指標-wdi-world-development-indicators","chapter":"21 World Bank","heading":"21.1.2 指標 WDI (World Development Indicators)","text":"World Development Indicators compilation relevant, high-quality, internationally comparable statistics global development fight poverty. database contains 1,400 time series indicators 217 economies 40 country groups, data many indicators going back 50 years.WDIは、世界の開発状況と、貧困との戦いに関する、適切で上質、かつ、国際的に比較可能な時系列の統計データを編纂したものです。このデータベースは、217の経済と40以上の国グループについて1,400の時系列指標を含み、指標のデータの多くは50年以上前に遡ることができます。世界銀行（World Bank）: https://www.worldbank.orgWorld Bank Open Data: https://data.worldbank.org\nCountry / Indicator > Featured & > Details\nCountry / Indicator > Featured & > DetailsWorld Development Indicators (WDI) :\nThemes: Poverty Inequality, People, Environment, Economy, States Markets, Global Links\nOpen Data & DataBank: Explore data, Query database\nThemes: Poverty Inequality, People, Environment, Economy, States Markets, Global LinksOpen Data & DataBank: Explore data, Query database","code":""},{"path":"worldbank.html","id":"指標-のコードwdi-code-を探してみよう","chapter":"21 World Bank","heading":"21.1.3 指標 のコード、WDI code を探してみよう","text":"いくつかの探し方があります。まず、ここでは、World Bank のサイトから探す方法を説明しましょう。ふた通りあります。World Bank Open Data にいくと、表題の下の検索窓の下に、 Country / Indicator とありますから、Indicator を選択します。すると、そこに、項目のリストが、Featured と という二つのタブに分かれて出ています。かなり膨大です。それを選択すると、その項目のサイトに行きます。それが、指標のサイトです。図などの、右上に、Details とありますから、それを選択すると、その中に、Indicator が書かれています。\n実は、指標のサイトのアドレス（URL）を見ると、そこにも、この Indicator が書かれていることがわかります。World Bank Open Data にいくと、表題の下の検索窓の下に、 Country / Indicator とありますから、Indicator を選択します。すると、そこに、項目のリストが、Featured と という二つのタブに分かれて出ています。かなり膨大です。それを選択すると、その項目のサイトに行きます。それが、指標のサイトです。図などの、右上に、Details とありますから、それを選択すると、その中に、Indicator が書かれています。\n実は、指標のサイトのアドレス（URL）を見ると、そこにも、この Indicator が書かれていることがわかります。World Development Indicators (WDI) にいくと、下のようなテーマに分かれています。World Development Indicators (WDI) にいくと、下のようなテーマに分かれています。Themes: Poverty Inequality, People, Environment, Economy, States Markets, Global Linksその中から、選択して、スクロールすると、そこに、指標が書かれています。Indicator, Code, Time coverage, Region coverage, Get dataとあり、Code が、指標のコードです。実は、すべての年や、すべての地域のデータが揃っているわけではないので、この情報を見ておくことはとても重要です。ほとんど、データがない場合もあります。一番右端の Get data からは、CSV や、データバンク（Data Bank）へのリンクがあります。それぞれの方法で、上で使った、二つの指標およびそのコードは見つかりましたか。1 の方法の途中に出てきた、検索窓から検索することも可能です。","code":""},{"path":"worldbank.html","id":"指標-wdiの例","chapter":"21 World Bank","heading":"21.1.4 指標 WDIの例","text":"このあとの、例で使う指標を書いておきます。NY.GDP.MKTP.CD: GDP (current US$)NY.GDP.DEFL.KD.ZG: Inflation, GDP deflator (annual %)SL.UEM.TOTL.NE.ZS: Unemployment, total (% total labor force) (national estimate)CPTOTNSXN: CPI Price, nominalSL.TLF.CACT.MA.NE.ZS: Labor force participation rate, male (% male population ages 15+) (national estimate)SL.TLF.CACT.FE.NE.ZS: Labor force participation rate, female (% male population ages 15+) (national estimate)","code":""},{"path":"worldbank.html","id":"練習-1.---調べてみたい-wdi-指標とそのコード","chapter":"21 World Bank","heading":"21.1.5 練習 1. - 調べてみたい WDI 指標とそのコード","text":"いくつか、リストしてみましょう。","code":""},{"path":"worldbank.html","id":"wdi-パッケージ","chapter":"21 World Bank","heading":"21.2 WDI パッケージ","text":"WDI パッケージ の使い方を紹介します。WDI パッケージで、データをダウンロードしたり、探したり、詳細情報を得たりできます。","code":""},{"path":"worldbank.html","id":"指標-wdi-検索","chapter":"21 World Bank","heading":"21.2.1 指標 WDI 検索","text":"まず、検索です。上で、サイトから調べる方法を紹介しましたが、WDI パッケージの、WDIsearch でも探すことができます。詳細は、右下の窓枠の Help タブの検索窓に、WDIsearch といれて調べて見てください。ここでは、二種類の検索方法を紹介します。","code":""},{"path":"worldbank.html","id":"検索例-1wdi名","chapter":"21 World Bank","heading":"21.2.1.1 検索例 1（WDI名）","text":"WDI 名に、ある文字列が含まれているものを検索します。検索文字列は、大文字・小文字は関係ありません。なんと、500件以上出てきました。Indicator（指標コード）と、Name（指標名）が列挙されます。すべてに、GDP という文字列が入っていることを確認できると思います。","code":"\nWDIsearch(string = \"gdp\", field = \"name\", short = TRUE, cache = NULL) %>%\n  as_tibble()\n#> # A tibble: 540 × 2\n#>    indicator            name                                \n#>    <chr>                <chr>                               \n#>  1 5.51.01.10.gdp       \"Per capita GDP growth\"             \n#>  2 6.0.GDP_current      \"GDP (current $)\"                   \n#>  3 6.0.GDP_growth       \"GDP growth (annual %)\"             \n#>  4 6.0.GDP_usd          \"GDP (constant 2005 $)\"             \n#>  5 6.0.GDPpc_constant   \"GDP per capita, PPP (constant 2011…\n#>  6 BG.GSR.NFSV.GD.ZS    \"Trade in services (% of GDP)\"      \n#>  7 BG.KAC.FNEI.GD.PP.ZS \"Gross private capital flows (% of …\n#>  8 BG.KAC.FNEI.GD.ZS    \"Gross private capital flows (% of …\n#>  9 BG.KLT.DINV.GD.PP.ZS \"Gross foreign direct investment (%…\n#> 10 BG.KLT.DINV.GD.ZS    \"Gross foreign direct investment (%…\n#> # ℹ 530 more rows"},{"path":"worldbank.html","id":"検索例-2wdi","chapter":"21 World Bank","heading":"21.2.1.2 検索例 2（WDI）","text":"Indicator（指標コード）から、Name（指標名）を検索します。二件出てきました。","code":"\nWDIsearch(string = \"NY.GDP.MKTP.CD\", field = \"indicator\", short = TRUE, cache = NULL)\n#>               indicator\n#> 11410    NY.GDP.MKTP.CD\n#> 11411 NY.GDP.MKTP.CD.XD\n#>                                             name\n#> 11410                          GDP (current US$)\n#> 11411 GDP deflator, index (2000=100; US$ series)"},{"path":"worldbank.html","id":"練習-2.---検索short","chapter":"21 World Bank","heading":"21.2.1.3 練習 2. - 検索（short）","text":"名前で検索（“” の間に、（なるべく簡単な）検索文字列を入れてください。）Indicator で検索（“” の間に、調べたい indicator を入れてください。）","code":"\nWDIsearch(string = \"\", field = \"name\", short = TRUE, cache = NULL)\nWDIsearch(string = \"\", field = \"indicator\", short = TRUE, cache = NULL)"},{"path":"worldbank.html","id":"詳しい情報を得るには","chapter":"21 World Bank","heading":"21.2.1.4 詳しい情報を得るには","text":"上では、Indicator（指標コード）と、Name（指標名）だけでしたが、Description（説明） なども得ることができます。それには、short = FALSE とします。一回一回、World Bank にアクセスして調べるのは、時間もかかりますから、Indicator と、名前などの情報をもったファイルを手元に持っておくことにします。それには、次のようにします。これは、series と、country の二つのデータ・フレームからなっているリストです。右上の窓枠（pane）から、wdi_cache を探して、中身を見てみましょう。三角印や、右から二番目の巻物のようなアイコンをクリックすると中身が見えます。series には、すべての指標がリストされ、その情報が書かれています。また、country には、それぞれについて、さまざまな情報が書かれています。これは、とても、たいせつな情報です。国名と、iso2c, iso3c のようなコードもありますし、地域（region）や、その国が、どの income level（収入の階級）に入るかも書かれています。また、国だけではなく、地域など、グループの名称も含まれています。今後、さまざまに利用していきたいと思います。","code":"\nwdi_cache <- WDIcache()"},{"path":"worldbank.html","id":"検索例-3wdi名","chapter":"21 World Bank","heading":"21.2.1.5 検索例 3（WDI名）","text":"short = FALSE として、検索してみましょう。文字列が入っている、指標名を検索します。CPTOTNSXN: CPI Price, nominal\nconsumer price index reflects change prices average consumer constant basket consumer goods. Data seasonally adjusted.\nconsumer price index reflects change prices average consumer constant basket consumer goods. Data seasonally adjusted.","code":"\nWDIsearch(string = \"CPI Price\", field = \"name\", short = FALSE, cache = wdi_cache)\n#>         indicator\n#> 2586    CPTOTNSXN\n#> 2587 CPTOTSAXMZGY\n#> 2588    CPTOTSAXN\n#> 2589 CPTOTSAXNZGY\n#>                                                 name\n#> 2586                              CPI Price, nominal\n#> 2587 CPI Price, % y-o-y, median weighted, seas. adj.\n#> 2588                  CPI Price, nominal, seas. adj.\n#> 2589         CPI Price, % y-o-y, nominal, seas. adj.\n#>                                                                                                                                                                                                                  description\n#> 2586                                                                The consumer price index reflects the change in prices for the average consumer of a constant basket of consumer goods. Data is not seasonally adjusted.\n#> 2587                                                                Median inflation rate calculated for geographical aggregates (regions, world, etc) of the annual percent change of the CPI. Data is seasonally adjusted.\n#> 2588                                               The consumer price index reflects the change in prices for the average consumer of a constant basket of consumer goods. Data is in nominal terms and seasonally adjusted.\n#> 2589 The consumer price index reflects the change in prices for the average consumer of a constant basket of consumer goods. Data is in nominal percentage terms, measured on a year-on-year basis, and seasonally adjusted.\n#>               sourceDatabase\n#> 2586 Global Economic Monitor\n#> 2587 Global Economic Monitor\n#> 2588 Global Economic Monitor\n#> 2589 Global Economic Monitor\n#>                                           sourceOrganization\n#> 2586 World Bank staff calculations based on Datastream data.\n#> 2587 World Bank staff calculations based on Datastream data.\n#> 2588 World Bank staff calculations based on Datastream data.\n#> 2589 World Bank staff calculations based on Datastream data."},{"path":"worldbank.html","id":"検索例-4wdi","chapter":"21 World Bank","heading":"21.2.1.6 検索例 4（WDI）","text":"指標コードから、詳細情報を得ます。","code":"\nWDIsearch(string = \"NY.GDP.MKTP.KD.ZG\", field = \"indicator\", short = FALSE, cache = wdi_cache)\n#>               indicator                  name\n#> 12114 NY.GDP.MKTP.KD.ZG GDP growth (annual %)\n#>                                                                                                                                                                                                                                                                                                                                                                                                                                                                           description\n#> 12114 Annual percentage growth rate of GDP at market prices based on constant local currency. Aggregates are based on constant 2015 prices, expressed in U.S. dollars. GDP is the sum of gross value added by all resident producers in the economy plus any product taxes and minus any subsidies not included in the value of the products. It is calculated without making deductions for depreciation of fabricated assets or for depletion and degradation of natural resources.\n#>                     sourceDatabase\n#> 12114 World Development Indicators\n#>                                                              sourceOrganization\n#> 12114 World Bank national accounts data, and OECD National Accounts data files."},{"path":"worldbank.html","id":"練習-2---検索long-w-cache","chapter":"21 World Bank","heading":"21.2.1.7 練習 2 - 検索（long w/ cache）","text":"string と、field を、ふたつとも入れてください。","code":"\nWDIsearch(string = \"\", field = \"\", short = FALSE, cache = wdi_cache)"},{"path":"worldbank.html","id":"指標-wdi-データのダウンロード","chapter":"21 World Bank","heading":"21.2.2 指標 WDI データのダウンロード","text":"Indicator が決まったら、ダウンロードします。右下の窓枠の Help タブの検索枠に、WDI と入れて確認しましょう。上が基本的な用法ですが、start 以下は、Default（初期値）が書かれていますから、たいせつなのは、最初の二つ、country と、indicator です。","code":"WDI(\n  country = \"all\",\n  indicator = \"NY.GDP.PCAP.KD\",\n  start = 1960,\n  end = NULL,\n  extra = FALSE,\n  cache = NULL,\n  latest = NULL,\n  language = \"en\"\n)"},{"path":"worldbank.html","id":"ダウンロード例-1-1","chapter":"21 World Bank","heading":"21.2.2.1 ダウンロード例 1-1","text":"country は、初期値も、“” となっていますから、最も簡単なのは、indicator に、指標コードを入れることです。引用符を忘れずに。これでも良いのですが、利用するには、指標コードではわかりにくいので、それを簡単な名前に置き換えて、データを読み込むこができます。","code":"\ndf_gdp1 <- WDI(country = \"all\", indicator = \"NY.GDP.MKTP.CD\")\ndf_gdp1#> Rows: 16492 Columns: 5\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (3): country, iso2c, iso3c\n#> dbl (2): year, NY.GDP.MKTP.CD\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 16,492 × 5\n#>    country                  iso2c iso3c  year NY.GDP.MKTP.CD\n#>    <chr>                    <chr> <chr> <dbl>          <dbl>\n#>  1 Africa Eastern and Sout… ZH    AFE    2021        1.08e12\n#>  2 Africa Eastern and Sout… ZH    AFE    2020        9.27e11\n#>  3 Africa Eastern and Sout… ZH    AFE    2019        1.00e12\n#>  4 Africa Eastern and Sout… ZH    AFE    2018        1.01e12\n#>  5 Africa Eastern and Sout… ZH    AFE    2017        1.02e12\n#>  6 Africa Eastern and Sout… ZH    AFE    2016        8.83e11\n#>  7 Africa Eastern and Sout… ZH    AFE    2015        9.25e11\n#>  8 Africa Eastern and Sout… ZH    AFE    2014        1.00e12\n#>  9 Africa Eastern and Sout… ZH    AFE    2013        9.83e11\n#> 10 Africa Eastern and Sout… ZH    AFE    2012        9.73e11\n#> # ℹ 16,482 more rows"},{"path":"worldbank.html","id":"ダウンロード例-1-2","chapter":"21 World Bank","heading":"21.2.2.2 ダウンロード例 1-2","text":"","code":"\ndf_gdp2 <- WDI(country = \"all\", indicator = c(gdp = \"NY.GDP.MKTP.CD\"))\ndf_gdp2#> Rows: 16492 Columns: 5\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr (3): country, iso2c, iso3c\n#> dbl (2): year, gdp\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 16,492 × 5\n#>    country                     iso2c iso3c  year     gdp\n#>    <chr>                       <chr> <chr> <dbl>   <dbl>\n#>  1 Africa Eastern and Southern ZH    AFE    2021 1.08e12\n#>  2 Africa Eastern and Southern ZH    AFE    2020 9.27e11\n#>  3 Africa Eastern and Southern ZH    AFE    2019 1.00e12\n#>  4 Africa Eastern and Southern ZH    AFE    2018 1.01e12\n#>  5 Africa Eastern and Southern ZH    AFE    2017 1.02e12\n#>  6 Africa Eastern and Southern ZH    AFE    2016 8.83e11\n#>  7 Africa Eastern and Southern ZH    AFE    2015 9.25e11\n#>  8 Africa Eastern and Southern ZH    AFE    2014 1.00e12\n#>  9 Africa Eastern and Southern ZH    AFE    2013 9.83e11\n#> 10 Africa Eastern and Southern ZH    AFE    2012 9.73e11\n#> # ℹ 16,482 more rows"},{"path":"worldbank.html","id":"ダウンロード例-1-3","chapter":"21 World Bank","heading":"21.2.2.3 ダウンロード例 1-3","text":"今度は、extra = TRUE として、読み込みましょう。先ほど、読み込んである、wdi_cache を使います。右上の三角印を使って、どのような詳細情報が付加されたか見て見ましょう。どんなことがわかりますか。","code":"\ndf_gdp3 <- WDI(country = \"all\", indicator = c(gdp = \"NY.GDP.MKTP.CD\"), \n               extra=TRUE, cache=wdi_cache)\ndf_gdp3#> Rows: 16492 Columns: 13\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (4): year, gdp, longitude, latitude\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 16,492 × 13\n#>    country     iso2c iso3c  year      gdp status lastupdated\n#>    <chr>       <chr> <chr> <dbl>    <dbl> <lgl>  <date>     \n#>  1 Afghanistan AF    AFG    2021  1.48e10 NA     2022-12-22 \n#>  2 Afghanistan AF    AFG    2020  2.01e10 NA     2022-12-22 \n#>  3 Afghanistan AF    AFG    2019  1.89e10 NA     2022-12-22 \n#>  4 Afghanistan AF    AFG    2018  1.84e10 NA     2022-12-22 \n#>  5 Afghanistan AF    AFG    2017  1.89e10 NA     2022-12-22 \n#>  6 Afghanistan AF    AFG    2016  1.80e10 NA     2022-12-22 \n#>  7 Afghanistan AF    AFG    2015  2.00e10 NA     2022-12-22 \n#>  8 Afghanistan AF    AFG    2014  2.06e10 NA     2022-12-22 \n#>  9 Afghanistan AF    AFG    2013  2.06e10 NA     2022-12-22 \n#> 10 Afghanistan AF    AFG    2012  2.02e10 NA     2022-12-22 \n#> # ℹ 16,482 more rows\n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>"},{"path":"worldbank.html","id":"ダウンロード例-1-4","chapter":"21 World Bank","heading":"21.2.2.4 ダウンロード例 1-4","text":"国名を指定します。WDI では、iso2c コードを使って、国名を指定します。上で見たように、Envoronment から、wdi_cache を選択すると、国名と、iso2c コード両方を見ることができました。iso2c や、iso3c は、よく使われるので、web 検索でも簡単にみつけることができます。最初に紹介した例ですから、どの国かはわかりますね、","code":"\ndf_gdp4 <- WDI(country = c(\"CN\",\"GB\",\"JP\",\"IN\",\"US\",\"DE\"), \n               indicator = c(gdp = \"NY.GDP.MKTP.CD\"), extra=TRUE, cache=wdi_cache)\ndf_gdp4#> Rows: 372 Columns: 13\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (4): year, gdp, longitude, latitude\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 372 × 13\n#>    country iso2c iso3c  year     gdp status lastupdated\n#>    <chr>   <chr> <chr> <dbl>   <dbl> <lgl>  <date>     \n#>  1 China   CN    CHN    2021 1.77e13 NA     2022-12-22 \n#>  2 China   CN    CHN    2020 1.47e13 NA     2022-12-22 \n#>  3 China   CN    CHN    2019 1.43e13 NA     2022-12-22 \n#>  4 China   CN    CHN    2018 1.39e13 NA     2022-12-22 \n#>  5 China   CN    CHN    2017 1.23e13 NA     2022-12-22 \n#>  6 China   CN    CHN    2016 1.12e13 NA     2022-12-22 \n#>  7 China   CN    CHN    2015 1.11e13 NA     2022-12-22 \n#>  8 China   CN    CHN    2014 1.05e13 NA     2022-12-22 \n#>  9 China   CN    CHN    2013 9.57e12 NA     2022-12-22 \n#> 10 China   CN    CHN    2012 8.53e12 NA     2022-12-22 \n#> # ℹ 362 more rows\n#> # ℹ 6 more variables: region <chr>, capital <chr>,\n#> #   longitude <dbl>, latitude <dbl>, income <chr>,\n#> #   lending <chr>"},{"path":"worldbank.html","id":"ダウンロード例-2-1","chapter":"21 World Bank","heading":"21.2.2.5 ダウンロード例 2-1","text":"二つの、指標コードを使って、同時に読み込むこともできます。そのときは、c() (combine) を使います。NY.GDP.DEFL.KD.ZG: Inflation, GDP deflator (annual %)CPTOTNSXN: CPI Price, nominalNA (available) つまり、データがないものが多いことがわかります。もう少し、データをよく見て見ましょう。どんなことが分かりましたか。右上の窓枠の、Environment でも df_gdp21 を見てみましょう。","code":"\ndf_gdp21 <- WDI(country = \"all\", \n                indicator = c(gdp_deflator = \"NY.GDP.DEFL.KD.ZG\", \n                              cpi_price = \"CPTOTNSXN\"), \n                extra=TRUE, cache=wdi_cache)\ndf_gdp21#> Rows: 23972 Columns: 14\n#> ── Column specification ────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): country, iso2c, iso3c, region, capital, income...\n#> dbl  (5): year, gdp_deflator, cpi_price, longitude, lati...\n#> lgl  (1): status\n#> date (1): lastupdated\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#> # A tibble: 23,972 × 14\n#>    country iso2c iso3c  year status lastupdated gdp_deflator\n#>    <chr>   <chr> <chr> <dbl> <lgl>  <date>             <dbl>\n#>  1 Advanc… AME   <NA>   1987 NA     2020-07-27            NA\n#>  2 Advanc… AME   <NA>   1988 NA     2020-07-27            NA\n#>  3 Advanc… AME   <NA>   1989 NA     2020-07-27            NA\n#>  4 Advanc… AME   <NA>   1990 NA     2020-07-27            NA\n#>  5 Advanc… AME   <NA>   1991 NA     2020-07-27            NA\n#>  6 Advanc… AME   <NA>   1992 NA     2020-07-27            NA\n#>  7 Advanc… AME   <NA>   1993 NA     2020-07-27            NA\n#>  8 Advanc… AME   <NA>   1994 NA     2020-07-27            NA\n#>  9 Advanc… AME   <NA>   1995 NA     2020-07-27            NA\n#> 10 Advanc… AME   <NA>   1996 NA     2020-07-27            NA\n#> # ℹ 23,962 more rows\n#> # ℹ 7 more variables: cpi_price <dbl>, region <chr>,\n#> #   capital <chr>, longitude <dbl>, latitude <dbl>,\n#> #   income <chr>, lending <chr>\nstr(df_gdp21)\n#> spc_tbl_ [23,972 × 14] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n#>  $ country     : chr [1:23972] \"Advanced Economies\" \"Advanced Economies\" \"Advanced Economies\" \"Advanced Economies\" ...\n#>  $ iso2c       : chr [1:23972] \"AME\" \"AME\" \"AME\" \"AME\" ...\n#>  $ iso3c       : chr [1:23972] NA NA NA NA ...\n#>  $ year        : num [1:23972] 1987 1988 1989 1990 1991 ...\n#>  $ status      : logi [1:23972] NA NA NA NA NA NA ...\n#>  $ lastupdated : Date[1:23972], format: \"2020-07-27\" ...\n#>  $ gdp_deflator: num [1:23972] NA NA NA NA NA NA NA NA NA NA ...\n#>  $ cpi_price   : num [1:23972] 58.7 60.5 63 66 69.1 ...\n#>  $ region      : chr [1:23972] NA NA NA NA ...\n#>  $ capital     : chr [1:23972] NA NA NA NA ...\n#>  $ longitude   : num [1:23972] NA NA NA NA NA NA NA NA NA NA ...\n#>  $ latitude    : num [1:23972] NA NA NA NA NA NA NA NA NA NA ...\n#>  $ income      : chr [1:23972] NA NA NA NA ...\n#>  $ lending     : chr [1:23972] NA NA NA NA ...\n#>  - attr(*, \"spec\")=\n#>   .. cols(\n#>   ..   country = col_character(),\n#>   ..   iso2c = col_character(),\n#>   ..   iso3c = col_character(),\n#>   ..   year = col_double(),\n#>   ..   status = col_logical(),\n#>   ..   lastupdated = col_date(format = \"\"),\n#>   ..   gdp_deflator = col_double(),\n#>   ..   cpi_price = col_double(),\n#>   ..   region = col_character(),\n#>   ..   capital = col_character(),\n#>   ..   longitude = col_double(),\n#>   ..   latitude = col_double(),\n#>   ..   income = col_character(),\n#>   ..   lending = col_character()\n#>   .. )\n#>  - attr(*, \"problems\")=<externalptr>\nsummary(df_gdp21)\n#>    country             iso2c              iso3c          \n#>  Length:23972       Length:23972       Length:23972      \n#>  Class :character   Class :character   Class :character  \n#>  Mode  :character   Mode  :character   Mode  :character  \n#>                                                          \n#>                                                          \n#>                                                          \n#>                                                          \n#>       year       status         lastupdated        \n#>  Min.   :1960   Mode:logical   Min.   :2020-07-27  \n#>  1st Qu.:1982   NA's:23972     1st Qu.:2020-07-27  \n#>  Median :1996                  Median :2022-12-22  \n#>  Mean   :1995                  Mean   :2022-03-23  \n#>  3rd Qu.:2009                  3rd Qu.:2022-12-22  \n#>  Max.   :2021                  Max.   :2022-12-22  \n#>                                                    \n#>   gdp_deflator         cpi_price         region         \n#>  Min.   :  -98.704   Min.   :  0.00   Length:23972      \n#>  1st Qu.:    2.317   1st Qu.: 55.95   Class :character  \n#>  Median :    5.273   Median : 83.28   Mode  :character  \n#>  Mean   :   25.308   Mean   : 84.18                     \n#>  3rd Qu.:   10.411   3rd Qu.:108.75                     \n#>  Max.   :26765.858   Max.   :551.25                     \n#>  NA's   :11616       NA's   :18410                      \n#>    capital            longitude          latitude      \n#>  Length:23972       Min.   :-175.22   Min.   :-41.286  \n#>  Class :character   1st Qu.: -15.18   1st Qu.:  4.174  \n#>  Mode  :character   Median :  19.26   Median : 17.300  \n#>                     Mean   :  19.14   Mean   : 18.889  \n#>                     3rd Qu.:  50.53   3rd Qu.: 40.050  \n#>                     Max.   : 179.09   Max.   : 64.184  \n#>                     NA's   :10890     NA's   :10890    \n#>     income            lending         \n#>  Length:23972       Length:23972      \n#>  Class :character   Class :character  \n#>  Mode  :character   Mode  :character  \n#>                                       \n#>                                       \n#>                                       \n#> "},{"path":"worldbank.html","id":"可視化-visualization","chapter":"21 World Bank","heading":"21.3 可視化 Visualization","text":"グラフ（Chart）を描いて視覚化します。ここでは、年ごとの変化をみる、折れ線グラフだけを描いて見ます。","code":""},{"path":"worldbank.html","id":"グラフ-1","chapter":"21 World Bank","heading":"21.3.1 グラフ 1","text":"x = year, y = gdp の、x=, y= は省略してあります。col=country は、国ごとに、グループにして、色分けをします。col は、color としても colour としても、問題ありません。\n`Warning として、missing values があると出ています。どこかは、分かりませんが、図を書くときですから、y に対応する、gdp の値がないものと思われます。","code":"\ndf_gdp4 %>% ggplot(aes(year, gdp, col=country)) + geom_line()\n#> Warning: Removed 10 rows containing missing values\n#> (`geom_line()`)."},{"path":"worldbank.html","id":"グラフ-2","chapter":"21 World Bank","heading":"21.3.2 グラフ 2","text":"drop_na(gdp) で、gdp の値が、NA であるものを削除します。また、labs で、図にタイトルをつけます。","code":"\ndf_gdp4 %>% drop_na(gdp) %>% \n  ggplot(aes(year, gdp, col=country)) + geom_line() +\n  labs(title = \"WDI - NY.GDP.MKTP.CD: gdp\")"},{"path":"worldbank.html","id":"テンプレート-templates","chapter":"21 World Bank","heading":"21.3.3 テンプレート Templates","text":"下に、テンプレートをつけます。コピーして、指標コードや、略称、国などを、それぞれ置き換えて、試して見てください。少し、複雑な変形をしていますが、少しずつ説明します。","code":""},{"path":"worldbank.html","id":"一つの国についての一つの指標wdiとその略称から折線グラフを作成","chapter":"21 World Bank","heading":"21.3.3.1 一つの国についての、一つの指標（WDI）と、その略称から、折線グラフを作成","text":"Line Plot one indicator abbreviation one country","code":"\nchosen_indicator <- \"SL.UEM.TOTL.NE.ZS\"\nshort_name <- \"unemployment\"\nchosen_country <- \"United States\"\nWDI(country = \"all\", indicator = c(short_name = chosen_indicator), extra=TRUE, cache=wdi_cache) %>%\n  filter(country == chosen_country) %>% \n  ggplot(aes(year, short_name)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator, \": \", short_name, \" - \", chosen_country),\n       y = short_name)"},{"path":"worldbank.html","id":"一つの国についての一つの指標wdiから折線グラフを作成","chapter":"21 World Bank","heading":"21.3.3.2 一つの国についての、一つの指標（WDI）から、折線グラフを作成","text":"Line Plot one indicator one country","code":"\nchosen_indicator <- \"SL.UEM.TOTL.NE.ZS\"\nchosen_country <- \"United States\"\nWDI(country = \"all\", indicator = c(chosen_indicator = chosen_indicator), \n    extra=TRUE, cache=wdi_cache) %>%\n  filter(country == chosen_country) %>% \n  ggplot(aes(year, chosen_indicator)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator, \" - \", chosen_country), \n       y = chosen_indicator)"},{"path":"worldbank.html","id":"いくつかの国についての一つの指標wdiとその略称から折線グラフを作成","chapter":"21 World Bank","heading":"21.3.3.3 いくつかの国についての、一つの指標（WDI）と、その略称から、折線グラフを作成","text":"Line Plot one indicator abbreviation several countries","code":"\nchosen_indicator <- \"SL.UEM.TOTL.NE.ZS\"\nshort_name <- \"unemployment\"\nchosen_countries <- c(\"United States\",\"United Kingdom\", \"Japan\")\nWDI(country = \"all\", indicator = c(short_name = chosen_indicator), extra=TRUE, cache=wdi_cache) %>% drop_na(short_name) %>% \n  filter(country %in% chosen_countries) %>% \n  ggplot(aes(year, short_name, col = country)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator, \": \", short_name), y = short_name)"},{"path":"worldbank.html","id":"一つの国についての二つの指標wdiとその略称から折線グラフを作成","chapter":"21 World Bank","heading":"21.3.3.4 一つの国についての、二つの指標（WDI）と、その略称から、折線グラフを作成","text":"Line Plot two indicators abbreviation one country","code":"\nchosen_indicator_1 <- \"NY.GDP.DEFL.KD.ZG\"\nshort_name_1 <- \"gdp_deflator\"\nchosen_indicator_2 <- \"CPTOTSAXNZGY\"\nshort_name_2 <- \"cpi_price\"\nchosen_country <- \"United States\"\nWDI(country = \"all\", indicator = c(short_name_1 = chosen_indicator_1, short_name_2 = chosen_indicator_2), extra=TRUE, cache=wdi_cache) %>% \n  filter(country == chosen_country) %>% \n  pivot_longer(c(short_name_1, short_name_2), names_to = \"class\", values_to = \"value\") %>% drop_na(value) %>%\n  ggplot(aes(year, value, col = class)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator_1, \": \", short_name_1, \"\\n\", chosen_indicator_2, \": \", short_name_2, \" - \", chosen_country)) +\n  scale_color_manual(labels = c(short_name_1, short_name_2), values = scales::hue_pal()(2))\nchosen_indicator_1 <- \"SL.TLF.CACT.MA.NE.ZS\"\nshort_name_1 <- \"male\"\nchosen_indicator_2 <- \"SL.TLF.CACT.FE.NE.ZS\"\nshort_name_2 <- \"female\"\nchosen_country <- \"United States\"\nWDI(country = \"all\", indicator = c(short_name_1 = chosen_indicator_1, short_name_2 = chosen_indicator_2), extra=TRUE, cache=wdi_cache) %>% \n  filter(country == chosen_country) %>% \n  pivot_longer(c(short_name_1, short_name_2), names_to = \"class\", values_to = \"value\") %>% drop_na(value) %>%\n  ggplot(aes(year, value, col = class)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator_1, \": \", short_name_1, \"\\n\", chosen_indicator_2, \": \", short_name_2, \" - \", chosen_country)) +\n  scale_color_manual(labels = c(short_name_1, short_name_2), values = scales::hue_pal()(2))"},{"path":"worldbank.html","id":"いくつかの国についての二つの指標wdiとその略称から折線グラフを作成","chapter":"21 World Bank","heading":"21.3.3.5 いくつかの国についての、二つの指標（WDI）と、その略称から、折線グラフを作成","text":"Line Plot two indicators abbreviation several countries","code":"\nchosen_indicator_1 <- \"NY.GDP.DEFL.KD.ZG\"\nshort_name_1 <- \"gdp_deflator\"\nchosen_indicator_2 <- \"CPTOTSAXNZGY\"\nshort_name_2 <- \"cpi_price\"\nchosen_countries <- c(\"United States\", \"France\", \"Japan\")\nWDI(country = \"all\", indicator = c(short_name_1 = chosen_indicator_1, short_name_2 = chosen_indicator_2), extra=TRUE, cache=wdi_cache) %>% \n  filter(country %in% chosen_countries) %>% \n  pivot_longer(c(short_name_1, short_name_2), names_to = \"class\", values_to = \"value\") %>% drop_na(value) %>%\n  ggplot(aes(year, value, linetype = class, col = country)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator_1, \": \", short_name_1, \"\\n\", chosen_indicator_2, \": \", short_name_2)) +\n  scale_linetype_manual(labels = c(short_name_1, short_name_2), values = c(\"solid\", \"dashed\"))\nchosen_indicator_1 <- \"SL.TLF.CACT.MA.NE.ZS\"\nshort_name_1 <- \"male\"\nchosen_indicator_2 <- \"SL.TLF.CACT.FE.NE.ZS\"\nshort_name_2 <- \"female\"\nchosen_countries <- c(\"United States\", \"France\", \"Japan\")\nWDI(country = \"all\", indicator = c(short_name_1 = chosen_indicator_1, short_name_2 = chosen_indicator_2), extra=TRUE, cache=wdi_cache) %>% \n  filter(country %in% chosen_countries) %>% \n  pivot_longer(c(short_name_1, short_name_2), names_to = \"class\", values_to = \"value\") %>% drop_na(value) %>%\n  ggplot(aes(year, value, linetype = class, col = country)) + geom_line() +\n  labs(title = paste(\"WDI \", chosen_indicator_1, \": \", short_name_1, \"\\n\", chosen_indicator_2, \": \", short_name_2)) +\n  scale_linetype_manual(labels = c(short_name_1, short_name_2), values = c(\"solid\", \"dashed\"))"},{"path":"worldbank.html","id":"課題-assignment","chapter":"21 World Bank","heading":"21.4 課題　Assignment","text":"上のテンプレートをコピーして、下に貼り付け、指標 indicator と、略称 short_name と、いくつかの国名 chosen_countries を、入れ替えて、試してみてください。","code":""},{"path":"un.html","id":"un","chapter":"22 UN Data（国際連合データ）","heading":"22 UN Data（国際連合データ）","text":"","code":""},{"path":"owid.html","id":"owid","chapter":"23 Our World in Data","heading":"23 Our World in Data","text":"","code":""},{"path":"estat.html","id":"estat","chapter":"24 e-Stat","heading":"24 e-Stat","text":"","code":""},{"path":"estat.html","id":"api-の使い方","chapter":"24 e-Stat","heading":"24.1 API の使い方","text":"","code":""},{"path":"estat.html","id":"はじめての-e-stat-with-api","chapter":"24 e-Stat","heading":"24.1.1 はじめての e-Stat with API","text":"はじめて、R の etatapi を使って、e-Stat のデータを取得する方法を簡単に説明します。","code":""},{"path":"estat.html","id":"初期設定","chapter":"24 e-Stat","heading":"初期設定","text":"パッケージの、estatapi が、e-Stat のデータを取得するためのものです。tidyverse は基本的な解析をおこなうため、showtext と showtext_auto() は、グラフなどに、日本語が含まれる場合の文字化けを防ぐためのものです。インストールされていないパッケージがありましたら、上のメニューの Tools > Install Packages から、インストールしてください。","code":"\nlibrary(tidyverse)\n#> ── Attaching core tidyverse packages ──── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nlibrary(showtext)\n#> Loading required package: sysfonts\n#> Loading required package: showtextdb\nlibrary(estatapi)\n#> このサービスは、政府統計総合窓口(e-Stat)のAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。\nshowtext_auto()"},{"path":"estat.html","id":"e-stat-登録とアプリケーションidの取得","chapter":"24 e-Stat","heading":"24.1.2 e-Stat 登録と、アプリケーションIDの取得","text":"e-Stat API を利用するには、appId が必要です。e-stat: https://www.e-stat.go.jp/ のページへ行く。右上の新規登録から、アカウント登録をします。\nメールアドレスを入力し、そこに届いてリンクを開き、パスワードを設定。\nパスワード設定は、Google などのアカウント連携ですることも可能です。\nメールアドレスを入力し、そこに届いてリンクを開き、パスワードを設定。パスワード設定は、Google などのアカウント連携ですることも可能です。アカウントにログイン。上の帯に、メールアドレスが表示されます。その右のマイページに行き、API機能（アプリケーションID発行）へ。まず、必要事項の入力が必要ですが、説明をみてください。\n名称：API機能を利用するアプリケーション名（システム名等）- R または、RStudio\nURL：アプリケーションのURL（トップページ等のURL）\n名称：API機能を利用するアプリケーション名（システム名等）- R または、RStudioURL：アプリケーションのURL（トップページ等のURL）use public site, please enter “http: // test.localhost /” etc. - localhost でよいでしょう。\n概要：アプリケーション（システム）の概要 - estatapi とでも書いておけば良いでしょう。\n右の発行を押すと、appId が表示されます。これを記録。\n概要：アプリケーション（システム）の概要 - estatapi とでも書いておけば良いでしょう。右の発行を押すと、appId が表示されます。これを記録。","code":""},{"path":"estat.html","id":"estatapi-利用概要-1","chapter":"24 e-Stat","heading":"24.2 estatapi 利用概要","text":"CRAN estatspi URL: https://CRAN.R-project.org/package=estatapi","code":""},{"path":"estat.html","id":"アプリケーションidの設定-1","chapter":"24 e-Stat","heading":"24.2.1 アプリケーションIDの設定","text":"","code":"appId <- \" \" # 私のものは、英数40文字"},{"path":"estat.html","id":"統計表情報取得estat_getstatslist","chapter":"24 e-Stat","heading":"24.2.2 統計表情報取得（estat_getStatsList()）","text":"提供されている統計表を検索します。この関数は、結果をtbl_df（dplyrのdata.frame。data.frameとほぼ同じように扱える）として返します。STAT_NAMEやGOV_ORGは人間が読みやすい形式のラベルになっていますが、 プログラム中で扱う場合はコードのままの方が都合がいいこともあります。そのときは.use_label = FALSEを指定してください。statsDataAPI=0003448219\nstatsDataAPI=0004001640statsDataID=0003410379","code":"estat_getStatsList(appId = appId, searchWord = \"\")\nestat_getStatsList(appId = appId, searchWord = \"人口推計\")\n#> # A tibble: 478 × 21\n#>    `@id`      STAT_NAME GOV_ORG STATISTICS_NAME TITLE CYCLE\n#>    <chr>      <chr>     <chr>   <chr>           <chr> <chr>\n#>  1 0000150001 人口推計  総務省  人口推計 平成3… 年齢… -    \n#>  2 0000150002 人口推計  総務省  人口推計 平成3… 年齢… -    \n#>  3 0000150003 人口推計  総務省  人口推計 平成3… 人口… -    \n#>  4 0000150004 人口推計  総務省  人口推計 平成3… 年齢… -    \n#>  5 0000150005 人口推計  総務省  人口推計 平成3… 年齢… -    \n#>  6 0000150006 人口推計  総務省  人口推計 平成3… 年齢… -    \n#>  7 0000150007 人口推計  総務省  人口推計 平成3… 男女… -    \n#>  8 0000150008 人口推計  総務省  人口推計 平成3… 男女… -    \n#>  9 0000150009 人口推計  総務省  人口推計 平成3… 年（… -    \n#> 10 0000150010 人口推計  総務省  人口推計 平成3… 男女… -    \n#> # ℹ 468 more rows\n#> # ℹ 15 more variables: SURVEY_DATE <chr>, OPEN_DATE <chr>,\n#> #   SMALL_AREA <chr>, COLLECT_AREA <chr>,\n#> #   MAIN_CATEGORY <chr>, SUB_CATEGORY <chr>,\n#> #   OVERALL_TOTAL_NUMBER <chr>, UPDATED_DATE <chr>,\n#> #   TABULATION_CATEGORY <chr>,\n#> #   TABULATION_SUB_CATEGORY1 <chr>, DESCRIPTION <chr>, …\nestat_getStatsList(appId = appId, searchWord = \"外国人人口\")\n#> # A tibble: 38 × 22\n#>    `@id`      STAT_NAME GOV_ORG STATISTICS_NAME  TITLE CYCLE\n#>    <chr>      <chr>     <chr>   <chr>            <chr> <chr>\n#>  1 0000150003 人口推計  総務省  人口推計 平成3…  人口… -    \n#>  2 0000150022 人口推計  総務省  人口推計 平成4…  人口… -    \n#>  3 0000150041 人口推計  総務省  人口推計 平成5…  人口… -    \n#>  4 0000150062 人口推計  総務省  人口推計 平成6…  人口… -    \n#>  5 0000150083 人口推計  総務省  人口推計 平成8…  人口… -    \n#>  6 0000150115 人口推計  総務省  人口推計 平成9…  [参…  -    \n#>  7 0000150137 人口推計  総務省  人口推計 平成10… [参…  -    \n#>  8 0000150159 人口推計  総務省  人口推計 平成11… [参…  -    \n#>  9 0000150181 人口推計  総務省  人口推計 平成13… [参…  -    \n#> 10 0000150203 人口推計  総務省  人口推計 平成14… [参…  -    \n#> # ℹ 28 more rows\n#> # ℹ 16 more variables: SURVEY_DATE <chr>, OPEN_DATE <chr>,\n#> #   SMALL_AREA <chr>, COLLECT_AREA <chr>,\n#> #   MAIN_CATEGORY <chr>, SUB_CATEGORY <chr>,\n#> #   OVERALL_TOTAL_NUMBER <chr>, UPDATED_DATE <chr>,\n#> #   TABULATION_CATEGORY <chr>,\n#> #   TABULATION_SUB_CATEGORY1 <chr>, DESCRIPTION <chr>, …\nestat_getStatsList(appId = appId, searchWord = \"国勢調査 時系列データ 男女，年齢，配偶関係\")\n#> # A tibble: 16 × 19\n#>    `@id`      STAT_NAME GOV_ORG STATISTICS_NAME  TITLE CYCLE\n#>    <chr>      <chr>     <chr>   <chr>            <chr> <chr>\n#>  1 0003410379 国勢調査  総務省  時系列データ 男… 男女… -    \n#>  2 0003410380 国勢調査  総務省  時系列データ 男… 年齢… -    \n#>  3 0003410381 国勢調査  総務省  時系列データ 男… 年齢… -    \n#>  4 0003410382 国勢調査  総務省  時系列データ 男… 配偶… -    \n#>  5 0003410383 国勢調査  総務省  時系列データ 男… 年齢… -    \n#>  6 0003412413 国勢調査  総務省  時系列データ 男… 年齢… -    \n#>  7 0003412414 国勢調査  総務省  時系列データ 男… 年齢… -    \n#>  8 0003412415 国勢調査  総務省  時系列データ 男… 年齢… -    \n#>  9 0003412416 国勢調査  総務省  時系列データ 男… 年齢… -    \n#> 10 0003412417 国勢調査  総務省  時系列データ 男… 年齢… -    \n#> 11 0003412418 国勢調査  総務省  時系列データ 男… 年齢… -    \n#> 12 0003412419 国勢調査  総務省  時系列データ 男… 年齢… -    \n#> 13 0003412420 国勢調査  総務省  時系列データ 男… 年齢… -    \n#> 14 0003448300 国勢調査  総務省  時系列データ 男… 【不… -    \n#> 15 0003448299 国勢調査  総務省  時系列データ 男… 年齢… -    \n#> 16 0003448301 国勢調査  総務省  時系列データ 男… 【不… -    \n#> # ℹ 13 more variables: SURVEY_DATE <chr>, OPEN_DATE <chr>,\n#> #   SMALL_AREA <chr>, COLLECT_AREA <chr>,\n#> #   MAIN_CATEGORY <chr>, SUB_CATEGORY <chr>,\n#> #   OVERALL_TOTAL_NUMBER <chr>, UPDATED_DATE <chr>,\n#> #   TABULATION_CATEGORY <chr>,\n#> #   TABULATION_SUB_CATEGORY1 <chr>, DESCRIPTION <chr>,\n#> #   TABLE_NAME <chr>, TABLE_EXPLANATION <chr>"},{"path":"estat.html","id":"メタ情報取得estat_getmetainfo","chapter":"24 e-Stat","heading":"24.2.3 メタ情報取得（estat_getMetaInfo()）","text":"統計データのメタ情報を取得します。この関数は、結果をlistとして返します。listの各要素が、それぞれのデータ項目についてのメタ情報を含んだtbl_dfになっています。","code":"meta_info <- estat_getMetaInfo(appId = appId, statsDataId = \"\")\nmeta_info <- estat_getMetaInfo(appId = appId, statsDataId = \"0003410379\")\nglimpse(meta_info)\n#> List of 5\n#>  $ tab   : tibble [2 × 4] (S3: tbl_df/tbl/data.frame)\n#>   ..$ @code : chr [1:2] \"020\" \"1120\"\n#>   ..$ @name : chr [1:2] \"人口\" \"人口性比\"\n#>   ..$ @level: chr [1:2] \"\" \"\"\n#>   ..$ @unit : chr [1:2] \"人\" NA\n#>  $ cat01 : tibble [3 × 3] (S3: tbl_df/tbl/data.frame)\n#>   ..$ @code : chr [1:3] \"100\" \"110\" \"120\"\n#>   ..$ @name : chr [1:3] \"総数\" \"男\" \"女\"\n#>   ..$ @level: chr [1:3] \"1\" \"1\" \"1\"\n#>  $ area  : tibble [50 × 4] (S3: tbl_df/tbl/data.frame)\n#>   ..$ @code      : chr [1:50] \"00000\" \"00100\" \"00200\" \"01000\" ...\n#>   ..$ @name      : chr [1:50] \"全国\" \"人口集中地区\" \"人口集中地区以外の地区\" \"北海道\" ...\n#>   ..$ @level     : chr [1:50] \"1\" \"2\" \"2\" \"2\" ...\n#>   ..$ @parentCode: chr [1:50] NA \"00000\" \"00000\" \"00000\" ...\n#>  $ time  : tibble [21 × 3] (S3: tbl_df/tbl/data.frame)\n#>   ..$ @code : chr [1:21] \"1920000000\" \"1925000000\" \"1930000000\" \"1935000000\" ...\n#>   ..$ @name : chr [1:21] \"1920年\" \"1925年\" \"1930年\" \"1935年\" ...\n#>   ..$ @level: chr [1:21] \"1\" \"1\" \"1\" \"1\" ...\n#>  $ .names: tibble [4 × 2] (S3: tbl_df/tbl/data.frame)\n#>   ..$ id  : chr [1:4] \"tab\" \"cat01\" \"area\" \"time\"\n#>   ..$ name: chr [1:4] \"表章項目\" \"男女_時系列\" \"地域_時系列\" \"時間軸（調査年）\"\nmeta_info$cat01\n#> # A tibble: 3 × 3\n#>   `@code` `@name` `@level`\n#>   <chr>   <chr>   <chr>   \n#> 1 100     総数    1       \n#> 2 110     男      1       \n#> 3 120     女      1"},{"path":"estat.html","id":"統計データ取得estat_getstatsdata","chapter":"24 e-Stat","heading":"24.2.4 統計データ取得（estat_getStatsData()）","text":"統計データを取得します。この関数は、結果をメタ情報と紐づけてtbl_dfとして返します。必ず指定しなくてはいけないのはappIdとstatsDataIdだけですが、それだけだとデータがかなり大きくなって取得に時間がかかります。cdCat01（分類事項01）などを指定して必要な項目だけに絞ることをおすすめします。他に絞り込みに指定できるパラメータについては公式ドキュメントを参照してください。0003445244","code":"estat_getStatsData(\n  appId = appId,\n  statsDataId = \"\",\n  cdCat01 = c(\"\",\"\"))\nestat_pop <- estat_getStatsData(appId = appId, statsDataId = \"0003410379\")\n#> Fetching record 1-4200... (total: 4200 records)\nestat_pop\n#> # A tibble: 4,200 × 11\n#>    tab_code 表章項目 cat01_code 男女_時系列 area_code\n#>    <chr>    <chr>    <chr>      <chr>       <chr>    \n#>  1 020      人口     100        総数        00000    \n#>  2 020      人口     100        総数        00000    \n#>  3 020      人口     100        総数        00000    \n#>  4 020      人口     100        総数        00000    \n#>  5 020      人口     100        総数        00000    \n#>  6 020      人口     100        総数        00000    \n#>  7 020      人口     100        総数        00000    \n#>  8 020      人口     100        総数        00000    \n#>  9 020      人口     100        総数        00000    \n#> 10 020      人口     100        総数        00000    \n#> # ℹ 4,190 more rows\n#> # ℹ 6 more variables: 地域_時系列 <chr>, time_code <chr>,\n#> #   `時間軸（調査年）` <chr>, unit <chr>, value <dbl>,\n#> #   annotation <chr>\nestat_pop_alien <- estat_getStatsData(appId = appId, statsDataId = \"0003448219\")\n#> Fetching record 1-87... (total: 87 records)\nestat_pop_alien\n#> # A tibble: 87 × 15\n#>    tab_code 表章項目 cat01_code 人口及び人口増減 cat02_code\n#>    <chr>    <chr>    <chr>      <chr>            <chr>     \n#>  1 008      人口     204        人口             000       \n#>  2 008      人口     204        人口             000       \n#>  3 008      人口     204        人口             000       \n#>  4 008      人口     204        人口             000       \n#>  5 008      人口     204        人口             000       \n#>  6 008      人口     204        人口             000       \n#>  7 008      人口     204        人口             001       \n#>  8 008      人口     204        人口             001       \n#>  9 008      人口     204        人口             001       \n#> 10 008      人口     204        人口             001       \n#> # ℹ 77 more rows\n#> # ℹ 10 more variables: 男女別 <chr>, cat03_code <chr>,\n#> #   人口 <chr>, area_code <chr>, 全国 <chr>,\n#> #   time_code <chr>, `時間軸（年間）` <chr>, unit <chr>,\n#> #   value <dbl>, annotation <chr>\nestat_pop_alien2 <- estat_getStatsData(appId = appId, statsDataId = \"0004001640\")\n#> Fetching record 1-87... (total: 87 records)\nestat_pop_alien2\n#> # A tibble: 87 × 15\n#>    tab_code 表章項目 cat01_code 人口及び人口増減 cat02_code\n#>    <chr>    <chr>    <chr>      <chr>            <chr>     \n#>  1 008      人口     204        人口             000       \n#>  2 008      人口     204        人口             000       \n#>  3 008      人口     204        人口             000       \n#>  4 008      人口     204        人口             000       \n#>  5 008      人口     204        人口             000       \n#>  6 008      人口     204        人口             000       \n#>  7 008      人口     204        人口             001       \n#>  8 008      人口     204        人口             001       \n#>  9 008      人口     204        人口             001       \n#> 10 008      人口     204        人口             001       \n#> # ℹ 77 more rows\n#> # ℹ 10 more variables: 男女別 <chr>, cat03_code <chr>,\n#> #   人口 <chr>, area_code <chr>, 全国 <chr>,\n#> #   time_code <chr>, `時間軸（年間）` <chr>, unit <chr>,\n#> #   value <dbl>, annotation <chr>\nestat_pop_alien0 <- estat_getStatsData(appId = appId, lang = \"E\", statsDataId = \"0003445244\")\n#> Fetching record 1-100000... (total: 100215 records)\n#> Fetching record 100001-100215... (total: 100215 records)\nestat_pop_alien0\n#> # A tibble: 100,215 × 13\n#>    tab_code tab_name cat01_code Sex   cat02_code Nationality\n#>    <chr>    <chr>    <chr>      <chr> <chr>      <chr>      \n#>  1 2020_01  Populat… 0          Total 0          Total      \n#>  2 2020_01  Populat… 0          Total 0          Total      \n#>  3 2020_01  Populat… 0          Total 0          Total      \n#>  4 2020_01  Populat… 0          Total 0          Total      \n#>  5 2020_01  Populat… 0          Total 0          Total      \n#>  6 2020_01  Populat… 0          Total 0          Total      \n#>  7 2020_01  Populat… 0          Total 0          Total      \n#>  8 2020_01  Populat… 0          Total 0          Total      \n#>  9 2020_01  Populat… 0          Total 0          Total      \n#> 10 2020_01  Populat… 0          Total 0          Total      \n#> # ℹ 100,205 more rows\n#> # ℹ 7 more variables: area_code <chr>,\n#> #   `Japan, Prefectures, Municipalities` <chr>,\n#> #   time_code <chr>, Time <chr>, unit <chr>, value <dbl>,\n#> #   annotation <chr>\nestat_pop_alien0 |> distinct(Nationality) |> pull()\n#>  [1] \"Total\"                                               \n#>  [2] \"Foreigner\"                                           \n#>  [3] \"Republic of Korea\"                                   \n#>  [4] \"People's Republic of China\"                          \n#>  [5] \"Republic of the Philippines\"                         \n#>  [6] \"Kingdom of Thailand\"                                 \n#>  [7] \"Republic of Indonesia\"                               \n#>  [8] \"Socialist Republic of Viet Nam\"                      \n#>  [9] \"India\"                                               \n#> [10] \"Federal Democratic Republic of Nepal\"                \n#> [11] \"United Kingdom of Great Britain and Northern Ireland\"\n#> [12] \"United States of America\"                            \n#> [13] \"Federative Republic of Brazil\"                       \n#> [14] \"Republic of Peru\"                                    \n#> [15] \"Others\"                                              \n#> [16] \"Japanese\"                                            \n#> [17] \"Nationality not reported\"\nestat_pop_alien2020 <- estat_getStatsData(appId = appId, statsDataId = \"0003445244\")\n#> Fetching record 1-100000... (total: 100215 records)\n#> Fetching record 100001-100215... (total: 100215 records)\nestat_pop_alien2020\n#> # A tibble: 100,215 × 13\n#>    tab_code 表章事項 cat01_code 男女  cat02_code 国籍 \n#>    <chr>    <chr>    <chr>      <chr> <chr>      <chr>\n#>  1 2020_01  人口     0          総数  0          総数 \n#>  2 2020_01  人口     0          総数  0          総数 \n#>  3 2020_01  人口     0          総数  0          総数 \n#>  4 2020_01  人口     0          総数  0          総数 \n#>  5 2020_01  人口     0          総数  0          総数 \n#>  6 2020_01  人口     0          総数  0          総数 \n#>  7 2020_01  人口     0          総数  0          総数 \n#>  8 2020_01  人口     0          総数  0          総数 \n#>  9 2020_01  人口     0          総数  0          総数 \n#> 10 2020_01  人口     0          総数  0          総数 \n#> # ℹ 100,205 more rows\n#> # ℹ 7 more variables: area_code <chr>,\n#> #   `全国，都道府県，市区町村` <chr>, time_code <chr>,\n#> #   `時間軸（年次）` <chr>, unit <chr>, value <dbl>,\n#> #   annotation <chr>\nestat_pop_alien2020 |> distinct(国籍) |> pull()\n#>  [1] \"総数\"                      \n#>  [2] \"外国人\"                    \n#>  [3] \"韓国，朝鮮\"                \n#>  [4] \"中国\"                      \n#>  [5] \"フィリピン\"                \n#>  [6] \"タイ\"                      \n#>  [7] \"インドネシア\"              \n#>  [8] \"ベトナム\"                  \n#>  [9] \"インド\"                    \n#> [10] \"ネパール\"                  \n#> [11] \"イギリス\"                  \n#> [12] \"アメリカ\"                  \n#> [13] \"ブラジル\"                  \n#> [14] \"ペルー\"                    \n#> [15] \"その他\"                    \n#> [16] \"日本人\"                    \n#> [17] \"日本人・外国人の別「不詳」\"\nestat_pop_alien2020 |> distinct(男女) |> pull()\n#> [1] \"総数\" \"男\"   \"女\"\ncolnames(estat_pop_alien2020)\n#>  [1] \"tab_code\"                 \"表章事項\"                \n#>  [3] \"cat01_code\"               \"男女\"                    \n#>  [5] \"cat02_code\"               \"国籍\"                    \n#>  [7] \"area_code\"                \"全国，都道府県，市区町村\"\n#>  [9] \"time_code\"                \"時間軸（年次）\"          \n#> [11] \"unit\"                     \"value\"                   \n#> [13] \"annotation\"\nestat_pop_alien2020 |> \n  filter(`全国，都道府県，市区町村` == \"全国\") |>\n  filter(男女 == \"総数\") |>\n  filter(国籍 != \"総数\") |>\n  select(国籍, value) |>\n  arrange(desc(value))\n#> # A tibble: 16 × 2\n#>    国籍                           value\n#>    <chr>                          <dbl>\n#>  1 日本人                     121541155\n#>  2 外国人                       2402460\n#>  3 日本人・外国人の別「不詳」   2202484\n#>  4 中国                          667475\n#>  5 韓国，朝鮮                    374593\n#>  6 その他                        339634\n#>  7 ベトナム                      320805\n#>  8 フィリピン                    230351\n#>  9 ブラジル                      180014\n#> 10 ネパール                       67325\n#> 11 インドネシア                   49147\n#> 12 アメリカ                       47875\n#> 13 タイ                           42702\n#> 14 ペルー                         41034\n#> 15 インド                         27915\n#> 16 イギリス                       13590\nestat_pop_alien2020 |> \n  filter(`全国，都道府県，市区町村` == \"全国\") |>\n  filter(男女 != \"総数\") |>\n  filter(!(国籍 %in% c(\"総数\", \"日本人\", \"外国人\", \"日本人・外国人の別「不詳」\"))) |>\n  select(国籍, 男女, value) |>\n  arrange(desc(value)) |> \n  mutate(国籍別 = factor(fct_inorder(国籍))) |>\n  mutate(`人数（千人）`= value/1000) |>\n  ggplot(aes(国籍別, `人数（千人）`, fill = 男女)) + geom_col() +\n  labs(title = \"国籍別日本在住外国人数\", caption = \"令和2（2020）年 国勢調査 統計表表示ID=0003445244\")"},{"path":"others.html","id":"others","chapter":"25 その他のデータベース","heading":"25 その他のデータベース","text":"","code":""},{"path":"others.html","id":"kagle","chapter":"25 その他のデータベース","heading":"25.1 Kagle","text":"","code":""},{"path":"intro2eda.html","id":"intro2eda","chapter":"26 探索的データ解析","heading":"26 探索的データ解析","text":"","code":""},{"path":"intro2eda.html","id":"探索的データ解析-edaとは","chapter":"26 探索的データ解析","heading":"26.1 探索的データ解析 (EDA)とは","text":"以下は、Posit Primers: Visualise Data から探索的データ解析 (EDA) は、データを理解するための反復的なサイクルです。EDAでは、以下のことを行います。データに関する問いを作成するデータに関する問いを作成するデータの可視化、変形・整形、モデリングによって、問いの答えを探索する。データの可視化、変形・整形、モデリングによって、問いの答えを探索する。学んだことを使って、問いをより洗練されたものとする。学んだことを使って、問いをより洗練されたものとする。EDAは、あらゆるデータ分析において重要な役割を担います。EDA によって、課題解決のいとぐちを発見することもありますし、他の課題との関係性を発見する場合もあります。EDAを使用してデータの問題や品質を確認したり、データが信頼できるものであるかを見極める問いを作成できる場合もあります。","code":""},{"path":"intro2eda.html","id":"探索的データ解析-eda-の一例","chapter":"26 探索的データ解析","heading":"26.2 探索的データ解析 (EDA) の一例","text":"WDI の一つの指標を使って、流れを見てみましょう。","code":""},{"path":"intro2eda.html","id":"データの取得と読み込み---data-import","chapter":"26 探索的データ解析","heading":"26.2.1 データの取得と読み込み - Data Import","text":"NY.GDP.PCAP.CD: GDP per capita (current US$)","code":"\ndf_wdi_gdppcap <- WDI(country = \"all\", indicator = c(gdp_pcap = \"NY.GDP.PCAP.CD\"))\nwrite_csv(df_wdi_gdppcap, \"./data/df_wdi_gdppcap.csv\")\ndf_wdi_gdppcap\n#> # A tibble: 16,492 × 5\n#>    country                     iso2c iso3c  year gdp_pcap\n#>    <chr>                       <chr> <chr> <dbl>    <dbl>\n#>  1 Africa Eastern and Southern ZH    AFE    2021    1550.\n#>  2 Africa Eastern and Southern ZH    AFE    2020    1364.\n#>  3 Africa Eastern and Southern ZH    AFE    2019    1512.\n#>  4 Africa Eastern and Southern ZH    AFE    2018    1565.\n#>  5 Africa Eastern and Southern ZH    AFE    2017    1629.\n#>  6 Africa Eastern and Southern ZH    AFE    2016    1444.\n#>  7 Africa Eastern and Southern ZH    AFE    2015    1539.\n#>  8 Africa Eastern and Southern ZH    AFE    2014    1719.\n#>  9 Africa Eastern and Southern ZH    AFE    2013    1730.\n#> 10 Africa Eastern and Southern ZH    AFE    2012    1759.\n#> # ℹ 16,482 more rows"},{"path":"intro2eda.html","id":"データ変形整形---data-transformation","chapter":"26 探索的データ解析","heading":"26.2.2 データ変形・整形 - Data Transformation","text":"","code":""},{"path":"intro2eda.html","id":"列を-select","chapter":"26 探索的データ解析","heading":"26.2.2.1 列を select","text":"どの変数について分析するかを選ぶ。","code":"\ndf_wdi_gdppcap_small <- df_wdi_gdppcap %>% \n  select(country, year, gdp_pcap)\ndf_wdi_gdppcap_small\n#> # A tibble: 16,492 × 3\n#>    country                      year gdp_pcap\n#>    <chr>                       <dbl>    <dbl>\n#>  1 Africa Eastern and Southern  2021    1550.\n#>  2 Africa Eastern and Southern  2020    1364.\n#>  3 Africa Eastern and Southern  2019    1512.\n#>  4 Africa Eastern and Southern  2018    1565.\n#>  5 Africa Eastern and Southern  2017    1629.\n#>  6 Africa Eastern and Southern  2016    1444.\n#>  7 Africa Eastern and Southern  2015    1539.\n#>  8 Africa Eastern and Southern  2014    1719.\n#>  9 Africa Eastern and Southern  2013    1730.\n#> 10 Africa Eastern and Southern  2012    1759.\n#> # ℹ 16,482 more rows"},{"path":"intro2eda.html","id":"行を-filter","chapter":"26 探索的データ解析","heading":"26.2.2.2 行を filter","text":"いくつかの国に、フォーカスして調べる。列（変数）と、行（国）の選択を続けて、実行すると次のようになる。\n一つ一つ変形したデータ（オブジェクト）に名前をつけて、保存する必要がないので、パイプ（%>%）の活用は有用である。","code":"\ndf_wdi_gdppcap_short <- df_wdi_gdppcap %>% \n  filter(country %in% c(\"Japan\", \"Germany\", \"United States\"))\ndf_wdi_gdppcap_short\n#> # A tibble: 186 × 5\n#>    country iso2c iso3c  year gdp_pcap\n#>    <chr>   <chr> <chr> <dbl>    <dbl>\n#>  1 Germany DE    DEU    2021   51204.\n#>  2 Germany DE    DEU    2020   46773.\n#>  3 Germany DE    DEU    2019   46794.\n#>  4 Germany DE    DEU    2018   47939.\n#>  5 Germany DE    DEU    2017   44653.\n#>  6 Germany DE    DEU    2016   42136.\n#>  7 Germany DE    DEU    2015   41103.\n#>  8 Germany DE    DEU    2014   48024.\n#>  9 Germany DE    DEU    2013   46299.\n#> 10 Germany DE    DEU    2012   43856.\n#> # ℹ 176 more rows\ndf_wdi_gdppcap_small_short <- df_wdi_gdppcap %>% select(country, year, gdp_pcap) %>%\n  filter(country %in% c(\"Japan\", \"Germany\", \"United States\"))\ndf_wdi_gdppcap_small_short\n#> # A tibble: 186 × 3\n#>    country  year gdp_pcap\n#>    <chr>   <dbl>    <dbl>\n#>  1 Germany  2021   51204.\n#>  2 Germany  2020   46773.\n#>  3 Germany  2019   46794.\n#>  4 Germany  2018   47939.\n#>  5 Germany  2017   44653.\n#>  6 Germany  2016   42136.\n#>  7 Germany  2015   41103.\n#>  8 Germany  2014   48024.\n#>  9 Germany  2013   46299.\n#> 10 Germany  2012   43856.\n#> # ℹ 176 more rows"},{"path":"intro2eda.html","id":"可視化-data-visualization","chapter":"26 探索的データ解析","heading":"26.2.3 可視化 Data Visualization","text":"次は、よく生じる、誤りの例で、ノコギリの歯（sawtoothed）のようなギザギザ・グラフと呼ばれます。なぜこのようなことが起きているかわかりますか。同じ年に、多くのデータがあるので、折れ線グラフを適切に書くことができませんでした。一般的には、散布図をまず、書いてみるのも一つです。国別に、異なる色を使うことで、折れ線グラフを書くことも可能です。折線グラフと、散布図を同時に描くこともかのうです。点を、曲線で近似する方法はいくつも知られているが、ある幅で、近似していく、LOESS が初期値となっている。method='loess' を省略しても、同じ近似がなされる。span という値を調節することで、ことなる幅での近似曲線を書くことも可能である。初期値は、0.75。","code":"\ndf_wdi_gdppcap_small_short %>%\n  ggplot(aes(x = year, y = gdp_pcap)) + geom_line()\n#> Warning: Removed 1 row containing missing values\n#> (`geom_line()`).\ndf_wdi_gdppcap_small_short %>% filter(country %in% c(\"Japan\")) %>%\n  ggplot(aes(x = year, y = gdp_pcap)) + geom_line()\ndf_wdi_gdppcap_small_short %>%\n  ggplot(aes(x = year, y = gdp_pcap)) + geom_point()\n#> Warning: Removed 10 rows containing missing values\n#> (`geom_point()`).\ndf_wdi_gdppcap_small_short %>% drop_na(gdp_pcap) %>%\n  ggplot(aes(x = year, y = gdp_pcap, col = country)) + geom_line()\ndf_wdi_gdppcap_small_short %>% drop_na(gdp_pcap) %>%\n  ggplot(aes(x = year, y = gdp_pcap, col = country)) + geom_line() +\n  geom_point()\ndf_wdi_gdppcap_small_short %>% drop_na(gdp_pcap) %>%\n  ggplot(aes(x = year, y = gdp_pcap)) + \n  geom_point(aes(color = country)) + \n  geom_smooth(method = 'loess', formula = 'y ~ x')"},{"path":"intro2eda.html","id":"データモデリング-data-modeling","chapter":"26 探索的データ解析","heading":"26.2.4 データモデリング Data Modeling","text":"上の例では、曲線ではなく、直線で近似することも考えられる。簡単な線形回帰モデルでの、回帰直線の y-切片や、傾きは、次のコードで与えられ、p-value や、R squared の値も求められる。この例では、年とともに、増加の傾向があること。そして、線形モデルが$$、90% 程度説明していると表現される。すなわち、は、良い、近似であることがわかる。","code":"\ndf_wdi_gdppcap_small_short %>% drop_na(gdp_pcap) %>%\n  ggplot(aes(x = year, y = gdp_pcap)) + \n  geom_point(aes(color = country)) + \n  geom_smooth(method = 'lm', formula = 'y ~ x')\ndf_wdi_gdppcap_small_short %>% lm(gdp_pcap ~ year, .) %>% summary()\n#> \n#> Call:\n#> lm(formula = gdp_pcap ~ year, data = .)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -14156.8  -3200.5   -507.4   3237.7  16779.2 \n#> \n#> Coefficients:\n#>               Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept) -1903497.5    48007.9  -39.65   <2e-16 ***\n#> year             968.3       24.1   40.18   <2e-16 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 5514 on 174 degrees of freedom\n#>   (10 observations deleted due to missingness)\n#> Multiple R-squared:  0.9027, Adjusted R-squared:  0.9021 \n#> F-statistic:  1614 on 1 and 174 DF,  p-value: < 2.2e-16"},{"path":"example1.html","id":"example1","chapter":"27 Example 1","heading":"27 Example 1","text":"","code":""},{"path":"japanese.html","id":"japanese","chapter":"A 日本語の扱いについて","heading":"A 日本語の扱いについて","text":"","code":""},{"path":"japanese.html","id":"日本語中国語韓国語","chapter":"A 日本語の扱いについて","heading":"A.1 日本語・中国語・韓国語","text":"文字化けが、起こることが多く、対応が、一定せず、特に、図の表示において、Windows や、macOS や、Linux などの、OS ごとに、フォントが違ったり、それを、図のタイトルなどに、使ったりが、難しかったのですが、どうやら、現在は、どの場合も、次の設定で、解決しているようです。下の例を確認してください。特に、フォントについては、好みも関係しますから、難しいですが、ここでは、どのプラットフォーム（OS）でも、共通に扱えることを中心に書きます。","code":"\n# showtext を、インストールしていない場合は、一回だけ、右上の三角をクリックして実行\ninstall.packages('showtext')"},{"path":"japanese.html","id":"パッケージをロード","chapter":"A 日本語の扱いについて","heading":"A.1.1 パッケージをロード","text":"library によって、Package をロード（いつでも使えるように）します。","code":"\nlibrary(tidyverse)\nlibrary(showtext) \nshowtext_auto()"},{"path":"japanese.html","id":"base-r-でタイトルに日本語","chapter":"A 日本語の扱いについて","heading":"A.2 Base R でタイトルに日本語","text":"","code":"\nplot(cars, main=\"散布図\")"},{"path":"japanese.html","id":"列名やデータに日本語","chapter":"A 日本語の扱いについて","heading":"A.3 列名や、データに日本語","text":"","code":"\ndf_iris <- iris\ncolnames(df_iris) <- c(\"萼長\",\"萼幅\",\"葉長\",\"葉幅\",\"Species\" )\ntab <- data.frame(Species = c(\"setosa\", \"versicolor\", \"virginica\"), \n                  \"種別\" = c(\"ヒオウギアヤメ\", \"ブルーフラッグ\", \"バージニカ\"))\ndf_iris <- df_iris %>% left_join(tab, by=c(\"Species\" = \"Species\")) %>% select(-5)\ndf_iris %>% slice(1:2)\n#>   萼長 萼幅 葉長 葉幅           種別\n#> 1  5.1  3.5  1.4  0.2 ヒオウギアヤメ\n#> 2  4.9  3.0  1.4  0.2 ヒオウギアヤメ"},{"path":"japanese.html","id":"kable-で表示","chapter":"A 日本語の扱いについて","heading":"A.4 kable で表示","text":"","code":"\nknitr::kable(df_iris[1:6, ])"},{"path":"japanese.html","id":"ggplot-でグラフを作成","chapter":"A 日本語の扱いについて","heading":"A.5 ggplot でグラフを作成","text":"","code":"\nggplot(df_iris, aes(x = `葉長`, y = `葉幅`, col = `種別`)) +\n  geom_point() + labs(title = \"散布図\", x = \"葉長\", y = \"葉幅\")"},{"path":"japanese.html","id":"備考-2","chapter":"A 日本語の扱いについて","heading":"A.6 備考：","text":"実は、一番難しいのが、PDF の作成だと思いますが、一応、上のものも、PDF を作成することが可能です。\n下のリンクのファイルを、いろいろな、形式で、出力してみてください。R Notebook と、PDF に出力したもののリンクを付けておきます。R Notebook\n右上の Code ボタンから、Rmd ファイルも取得できます。\n右上の Code ボタンから、Rmd ファイルも取得できます。R Notebook RMD\nRmd の中身がテキストで表示されますから、コピーして、新規作成した、RNotebook ファイルに貼り付けることも可能です。\nRmd の中身がテキストで表示されますから、コピーして、新規作成した、RNotebook ファイルに貼り付けることも可能です。PDF\n通常のPDFも、やはり PDF 形式の、beamer presentation も作成できます。\n通常のPDFも、やはり PDF 形式の、beamer presentation も作成できます。詳細は、これらのファイルに記載されていますから、参考にしてください。","code":""},{"path":"japanese.html","id":"参考日本語の表示について","chapter":"A 日本語の扱いについて","heading":"A.7 参考：日本語の表示について","text":"日本語が適切に表示されない！？簡単ではなく、未解決の部分が何かなどを含め、わたしも十分理解できているか不明であるが、理解できていると思われる範囲で、備忘録のように記します。R を使うという場合に限っても、R Studio IDE を使う場合、RStudio Cloud を使う場合、Google colab を使う場合、他のプラットフォームで使う場合で違ってくると思われますが、上にあげた、三種類のプラットフォームで確かめられるものについて書いていく。上に書いた以外に、R Studio IDE を、Windows 上で使う場合と、Mac 上で使う場合（Mac のシステムは Unix 系であるが、さまざまな Linux ）でも、状況が異なるかもしれません。そこで、場合分けをして書いていくほうが安全ですが、それは、極力避け、どれにでも適用可能な方法を模索しながら書いていこうと思います。個人的に、日常的に分断を避ける努力をすることが大切だと思っていることも背景にある。さらに、ソフトウェア開発者は、むろん、そのような差異を理解して、どの環境でも、可能なように設計することを心がけていると思われますし、そのようなものが、R Project の正規のパッケージとして採用されていくべきだとも考えていますので、多少、理想も入っているが、これを基本として書いていこうと思います。十分なチェックができていないものもあるので、不具合などは、ぜひ、お知らせ願いたい。この文章も少しずつ、改善していければと思う。通常、日本語、中国語、韓国語などが適切に表示できない場合は、文字のエンコーディング（Encoding: どのような情報として記録されているか）と、フォントの問題、さらに、システムがこれらをどう処理しているかの問題があると思われます。しかし、R の利用者として考えると、文字化けが起きたり、適切に文字が表示されないのは、以下の三つに分けられるようです。データファイルなどを読み込んだときに適切に表示されない図の中のタイトルなどが、適切に表示されないR Markdown の出力において、適切に表示されない","code":""},{"path":"japanese.html","id":"データファイルの読み込み","chapter":"A 日本語の扱いについて","heading":"A.7.1 データファイルの読み込み","text":"tidyverse に含まれる readr には、guess_encoding が含まれており、一般的には、たとえば、\nread_csv(“./data/file_name.csv”) とすると、一番可能性の高いエンコーディングで読み込まれるようになっています。\nread_csv(“./data/file_name.csv”) とすると、一番可能性の高いエンコーディングで読み込まれるようになっています。使い方：guess_encoding(file, n_max = 10000, threshold = 0.2) とあり、10000行で推測されたエンコーディング、または、確率を計算することを 初期設定値（Default）にしてます。Help によると、すべての行をチェックする場合は、n_max = -1 とすることが書かれています。これで問題がない場合が多いです。他の、readr 関数も同様です。しかし、これは、あくまでも、CSV などのテキストファイルについてです。なお、read_csv などにも、guess_max = min(1000, n_max) もありますが、これは、column type を決めるためのものである。read.csv() など、base R では、fileEncoding = ““, encoding =”unknown” がオプションに含まれていたので、指定して読み込むことが通常でした。","code":""},{"path":"japanese.html","id":"図の中のテキスト","chapter":"A 日本語の扱いについて","heading":"A.7.2 図の中のテキスト","text":"基本的には、日本語を表示できるフォントがインストールされていて、図の表示の前にlibrary(showtext); showtext_auto() となっていれば、これ以降の図は、問題なく、表示されるはずです。通常使っている、コンピュータ以外で、使うときに、フォントが入っていない場合などは、tinytex の命令を使って、tinytex::tlmgr_install(\"ipaex\") とすれば、PDF を作成するときも、IPA フォント（International Phonetic Alphabet）を使えます。二種類以上のフォントを使い分けたいときは、名前をつけて、それを family = name で指定する。\nshowtext: Using Fonts Easily R Graphs 参照。\nshowtext: Using Fonts Easily R Graphs 参照。","code":""},{"path":"japanese.html","id":"r-markdown-の出力","chapter":"A 日本語の扱いについて","heading":"A.7.3 R Markdown の出力","text":"PDF 作成には、システムを使っているので、日本語を扱えるように、tex-engine や、document class や、mainfont を設定する必要があるが、R Markdown ファイルの YAML に、以下を加えれば問題がないようである。","code":"header-includes:\n  - \\usepackage{xeCJK}\n  - \\setCJKmainfont{ipaexm.ttf}\n  - \\setCJKsansfont{ipaexg.ttf}\n  - \\setCJKmonofont{ipaexg.ttf}"},{"path":"japanese.html","id":"bookdown","chapter":"A 日本語の扱いについて","heading":"A.7.4 bookdown","text":"bookdown を使って、電子書籍を出版する場合には、bookdown （リンク） を参照してください。日本語におけるテンプレートは、こちら にあります。まずは、ページの下にある、README を読んでください。","code":""},{"path":"japanese.html","id":"参考としたもの","chapter":"A 日本語の扱いについて","heading":"A.7.5 参考としたもの","text":"","code":""},{"path":"japanese.html","id":"showtext-using-fonts-more-easily-in-r-graphs","chapter":"A 日本語の扱いについて","heading":"A.7.5.1 showtext: Using Fonts More Easily in R Graphs","text":"https://CRAN.R-project.org/package=showtext\nhttps://cran.r-project.org/web/packages/showtext/readme/README.html\nshowtext: Using Fonts Easily R Graphs:\nhttps://cran.r-project.org/web/packages/showtext/vignettes/introduction.html\nhttps://fonts.google.com\n\nhttps://cran.r-project.org/web/packages/showtext/readme/README.htmlshowtext: Using Fonts Easily R Graphs:\nhttps://cran.r-project.org/web/packages/showtext/vignettes/introduction.html\nhttps://fonts.google.com\nhttps://cran.r-project.org/web/packages/showtext/vignettes/introduction.htmlhttps://fonts.google.com","code":""},{"path":"japanese.html","id":"sysfonts-loading-fonts-into-r","chapter":"A 日本語の扱いについて","heading":"A.7.5.2 sysfonts: Loading Fonts into R","text":"https://CRAN.R-project.org/package=sysfonts\nhttps://cran.r-project.org/web/packages/sysfonts/sysfonts.pdf\nhttps://cran.r-project.org/web/packages/sysfonts/sysfonts.pdf","code":""},{"path":"japanese.html","id":"foods4all-examples-of-graphs","chapter":"A 日本語の扱いについて","heading":"A.7.5.3 foods4all: Examples of Graphs","text":"https://foods4all.github.io/examples/examples_of_graphs.html\n77.2 Japanese Environments 日本語環境（昔の記事：Last Updated: 2020-04-22）\n77.2 Japanese Environments 日本語環境（昔の記事：Last Updated: 2020-04-22）","code":""},{"path":"tools.html","id":"tools","chapter":"B IT ツール","heading":"B IT ツール","text":"いくつかの便利なツールについて紹介します。","code":""},{"path":"tools.html","id":"git-と-github","chapter":"B IT ツール","heading":"B.1 Git と GitHub","text":"Git は バージョン管理システムで、GitHub はそれを、活用し、かつ他のメンバーと協力して開発など、さまざまな活動をするためのサイトです。公開が基本となっています。非公開にすることも可能ですが、公開することで、世界中のひとたちと協力していくことが可能になりますので、その利点も学んでいただければと思います。","code":""},{"path":"tools.html","id":"概要-9","chapter":"B IT ツール","heading":"B.1.1 概要","text":"RStudio で R を使っている場合、Git-GitHub-RStudio の連携で使うことをお勧めします。しかし、これらは、三つとも、まったく異なるものですから、簡単な概要を書いておくことにします。","code":""},{"path":"tools.html","id":"git","chapter":"B IT ツール","heading":"B.1.1.1 Git","text":"これは、ファイルのバージョン（更新履歴）の管理システムで、単独で機能します。他の、プログラムなどに関係しない、他の文書ファイルであっても、バージョンを管理する場合に活用できます。特に、テキスト・ファイルの場合には、どこがどう改訂されているかを確認することもできます。また、基本的には、Unix の Shell プログラムで動作させるのが一般的です。Mac は、Unix システムの上に構築されているため、最初から、ユーティリティ（Utility）> ターミナル（Terminal）で、Shell コマンドが利用可能になっていますが、Windows の場合には、bash と呼ばれる Shell プログラムをインストールすることをお勧めします。Windows システムについてよくご存知の方は、他の方法を使っていただいて構いませんが、Git のインストールの時に、Git bash を選択して、簡単に インストールできますし、Unix システムの基本を理解するチャンスでもあり、Mac とも同じ環境で説明できますから、ここでは、そちらを使います。Shell コマンドは、R Studio の中のターミナルを使って、利用することも可能です。（注：Windows のコマンド・プロンプト、または、パワー・シェルをお使いの方は、利用環境が変化する可能性がありますから、そのまま使われる方が良いかもしれません。）基本的なコマンドとしては、以下のものがあります。いまは、このようなものがある程度に、眺めておいてください。git init: 特定のディレクトリ（フォルダ）で バージョン管理を始める時に使います。git status: 現在の状況を確認するときに使います。git diff file_name: ファイルへの変更を確認します。git log: 過去の commit による履歴を確認する時に使います。git add file_name: ステージングという中間的な場所に登録します。git commit -m \"log message \": ステージングにあるものを、確定させます。引用符で囲まれた短いコメントを加えます。50文字が上限です。git help: Help のリストが表示されます。\n例：git help init などと入力すると、説明を見ることができます。\n例：git help init などと入力すると、説明を見ることができます。","code":""},{"path":"tools.html","id":"git-hub","chapter":"B IT ツール","heading":"B.1.1.2 Git Hub","text":"Git でバージョン管理されているディレクトリ（フォルダ）の状態を示す、クラウドサービスです。更新されている、状態を確認するとともに、変更履歴なども確認できます。また、Git Hub サービスを利用して、ファイルを公開、共有することも可能です。Pages サイトを利用することで、ホームページとして HTML ファイルなどを公開することもできるため、レポートを公開したり、この電子書籍のように、bookdown パッケージを利用して作成したものを、インターネット上に公開することも可能です。お気付きかと思いますが、この電子書籍も、リンクされている、他の文書も、URL（アドレス）をみると、GitHub になっていますし、パッケージや、データなども、GitHub へのリンクが示されている割合が、非常に高いと思います。最初に、Git で管理されている、ディレクトリ（フォルダ）（これを、ローカル・リポジトリと言います）と、GitHub 内のリポジトリ（リモート・リポジトリまはたアップストリーム・リポジトリと言います。ここでは、リモート・リポジトリと呼ぶことにします）を結びつけるステップが必要です。","code":""},{"path":"tools.html","id":"rstudio-連携","chapter":"B IT ツール","heading":"B.1.1.3 RStudio 連携","text":"コマンドライン（シェル）で行う作業や、ローカル・リポジトリを、リモート・リポジトリに結びつける作業を、RStudio の中で行うことが可能です。","code":""},{"path":"tools.html","id":"はじめかた","chapter":"B IT ツール","heading":"B.1.2 はじめかた","text":"Git のインストールWindows と Mac で異なりますので注意が必要です。Mac については、Mac と書いてあるところを読んでください。Windows の場合は、git-scm にアクセスしてダウンロード、インストールしてください。セットアップ（Setup）で、２箇所、注意点があります、それ以外は、すべて、初期設定のままで変更は必要ありません。\nChoosing default editor used Git: 設定で、エディタ（Editor）を設定しますが、vi, vim に慣れていない方は、nano を選択することをお勧めします。（nano19 は、メニューが下に出るので、それを見て操作することが可能なエディターです。）\nAdjusting Path Environment: Windows の コマンドライン・ツール（command line prompt) を使っていない方は、Git Bash のインストールを選択してください。さらに、Git optional Unix tools Windows Command Prompt を選択することをお勧めしますが、上で書いたように、Windows の コマンド・プロンプトになれておられる方で、それを使い続けたいかたは、Use Git Git Bash を選択されるのが良いかもしれません。\n最後に、RStudio の設定（Tools > Global Option）で、Terminal　から、Git Bash を選択20し、Tools から、New Terminal を選択21します。\nChoosing default editor used Git: 設定で、エディタ（Editor）を設定しますが、vi, vim に慣れていない方は、nano を選択することをお勧めします。（nano19 は、メニューが下に出るので、それを見て操作することが可能なエディターです。）Adjusting Path Environment: Windows の コマンドライン・ツール（command line prompt) を使っていない方は、Git Bash のインストールを選択してください。さらに、Git optional Unix tools Windows Command Prompt を選択することをお勧めしますが、上で書いたように、Windows の コマンド・プロンプトになれておられる方で、それを使い続けたいかたは、Use Git Git Bash を選択されるのが良いかもしれません。最後に、RStudio の設定（Tools > Global Option）で、Terminal　から、Git Bash を選択20し、Tools から、New Terminal を選択21します。Mac は、最初から、Install されていると思います。ユーティリティ（Utility）> ターミナル（Terminal）を開いて22、git --version とすると、インストールされているバージョンが表示されると思います。バージョンがでない場合には、Install するかと聞かれます。このときに、Git だけをインストールすることも、Xcode という開発環境を同時にインストールすることも可能です。（インストールするように指示が出なければ、App Store からも、インストールできます。もし、そのあとで、git などのコマンドで xcrun: error などとエラーが出たら、xcode-select --install としてください。）インストールが終了したら、もう一度、git --version と Terminal に入力して、結果を確認してください。GitHub のアカウント取得GitHub サイト に、アカウントを作成します。アカウント名は、短く、分かりやすく、覚えやすいものをよく考えて決めてください。Email Address だけで、無償で作成できます。RStudio の 左下の窓枠のTerminal タブ23から、GitHub アカウントに連携する設定を行います。\n下の２行を、１行ずつ、コピーして、Terminal に入力してください。RStudio の、Tools > Global Opton の、Git/SVN タブを開き、Git Executable とあるところに、Git 実行プログラムのある場所を入れます。Windows の場合は、C:/Program Files/Git/bin/git.exe だと思いますが、Browse ボタンから確認してください。Mac の場合は、/usr/bin/git になるかと思いますが、Browse ボタンから確認してください。その下に、Create RSA key とありますから、それを押し、Create ボタンを押しててください24。すると、View RSA key から、暗号キーも確認できます。（この作業は、Terminal から、ssh-keygen -t rsa として作成することも可能です。この作業で、~/.ssh/ 内に、SSH キーが記述されたファイルが作成されます。）その下に、Create RSA key とありますから、それを押し、Create ボタンを押しててください24。すると、View RSA key から、暗号キーも確認できます。（この作業は、Terminal から、ssh-keygen -t rsa として作成することも可能です。この作業で、~/.ssh/ 内に、SSH キーが記述されたファイルが作成されます。）GitHub アカウントで公開鍵を利用できるようにします。まず、RStudio の方で作成した、RSA key （Tools の、Global Option の Git/SVN）の下にある view を押すと見ることができ、上に、書いてあるように、そこに出てきたものを、コピーします。次に、GitHubにログインし、右上のアイコンの右の三角から、設定（Setting）を選択し、SSH公開鍵（SSH GPG Keys）を選択します。新しい公開鍵を追加（New SSH Key）を選択すると、SSH キーを貼り付けることができます。（リポジトリの左上にある、アカウント名をクリックし現れるダッシュボードの左上の大きなアイコンをクリックしても「アカウント設定」が現れ、SSH GPG Keysを見つけることができると思います。）GitHub アカウントで公開鍵を利用できるようにします。まず、RStudio の方で作成した、RSA key （Tools の、Global Option の Git/SVN）の下にある view を押すと見ることができ、上に、書いてあるように、そこに出てきたものを、コピーします。次に、GitHubにログインし、右上のアイコンの右の三角から、設定（Setting）を選択し、SSH公開鍵（SSH GPG Keys）を選択します。新しい公開鍵を追加（New SSH Key）を選択すると、SSH キーを貼り付けることができます。（リポジトリの左上にある、アカウント名をクリックし現れるダッシュボードの左上の大きなアイコンをクリックしても「アカウント設定」が現れ、SSH GPG Keysを見つけることができると思います。）（なお、RStudio ではなく、Terminal からコピーするときは、Unix では、pbcopy < ~/.ssh/id_rsa.pub などとします。Windows の場合は、pbcopy が使えない可能性があるので、そのときは、Terminal から、Git Bash を使い、use < ~/.ssh/id_rsa.pub とします。Terminal に慣れておられない方には、上に紹介した、RStudio からコピーする方が簡便かと思います。）これで設定終了ですので、R Studio を再起動させてください。","code":"git config --global user.name \"Your Name\" # GitHub の User Name\ngit config --global user.email \"your@email.com\" # GitHub に登録したメールアドレス"},{"path":"tools.html","id":"github-にあるリモートリポジトリremote-repoから始める場合","chapter":"B IT ツール","heading":"B.1.3 GitHub にあるリモート・リポジトリ（Remote Repo）から始める場合","text":"GitHub にログインして、既存のリポジトリを開きます。Code の、Clone から、リンク先のアドレスを入手。https と SSH を選べますが、SSH を選び、コピーします。RStudio から、New Project とし、Version Control を選択し、ディレクトリーを決めたら、上でコピーした、ものを、貼り付けて、Project を作成します。この手続きで、リモート・リポジトリのファイルがすべて、RStudio のプロジェクトに入ります。実はこの手続きで、公開されている、他のリポジトリも取り込むことができます。ただし、編集して、改訂していくには、自分のリポジトリに、繋ぐことになります。そのときは、次の項目を見てください。","code":""},{"path":"tools.html","id":"自分のコンピュータのリポジトリlocal-repoから始める場合","chapter":"B IT ツール","heading":"B.1.4 自分のコンピュータのリポジトリ（Local Repo）から始める場合","text":"RStudio から新しい、プロジェクト（Project） を作成 test0 としておきましょう。GitHub に、新しい、レポジトリを作成して繋げる自分の GitHub アカウントに、新しい、レポジトリをプロジェクトと同じ名前 test0 で作成します。同じ名前でなくてもかまわないのですが、関連がしやすいので、同じ名前がお勧めです。Quick Setup というページが表示されますから、その、下の Set Desktop の右から、https と SSH を選べますが、SSH を選び、コピーします。プロジェクトの中の 左下の窓枠の、Terminal から次を実行します。再起動すると、プロジェクトの右上の窓枠に、Git と表示されていると思います。開いて、いくつかファイル名があれば、これを選択し、Commit ボタンを押し、短い message を書いて、Commit とし、そのあとで、Push ボタンを押してください。 HEAD -> main と表示されれば、OK です。","code":"echo \"# Project test0\" >> README.md # REAME の表題を書きます。\ngit init\ngit add README.md\ngit commit -m \"First commit. README.md\"\ngit branch -M main\ngit remote add origin `git@github.com:icu-hsuzuki/test0.git`\n# わたしのアカウントの場合には、コピーしたものを貼り付けると、上のようになります。\ngit push -u origin main"},{"path":"tools.html","id":"github-pages-について","chapter":"B IT ツール","heading":"B.1.5 GitHub Pages について","text":"GitHub は、Web 上のサービスですが、たとえ、リポジトリーの中に、HTML ファイルなどが存在しても、ブラウザーで表示させることはできません。公開する方法として、わたしは、以下のようにしています。公開しブラウザーで読めるようにしたいファイルを、docs という ディレクトリに入れます。Setting を選択し、左の帯から、Pages を選び、Branch を、main、/docs として、Save します。すると、docs に入っているファイルは、リンクを指定すれば、ブラウザーで、見ることができます。リンクは、まず、リポジトリーの右上の、の右のギアマークから、Use GitHub Pages website に、チェックを入れると、URL が表示されますから、その URL に続けて、ファイル名を加えたものが、そのファイルの、リンクとなります。","code":""},{"path":"tools.html","id":"bookdown-パッケージによる電子書籍の執筆","chapter":"B IT ツール","heading":"B.1.6 Bookdown パッケージによる、電子書籍の執筆","text":"bookdown を利用して、始める方法を簡単に記します。Git-GitHub-RStuio の設定は済んでいると仮定して書きます。また、Bookdown を利用するには、bookdown パッケージのインストールが必要です。RStudio の Tools から、Install Packages を選択して、インストールしてください。また、bs4_book スタイルを利用する場合は、RStudio などのバージョンによっては、bslib と downlit も、インストールする必要があるようです。以下では、R Studio で新しい、プロジェクトとして始める場合と、テンプレート・リポジトリ を使う方法を説明します。","code":""},{"path":"tools.html","id":"rstudio-での設定","chapter":"B IT ツール","heading":"B.1.6.1 RStudio での設定","text":"新しい book プロジェクトを始めます、標準設定の book と、bs4_book を選択できます。このディレクトリ（フォルダ。ローカル・リポジトリと呼びます）の名前をリモート・リポジトリの名前と同じにして、作成します25。Files の、Rename 機能を使って _book ディレクトリ（フォルダ）の名前を、docs に変更します。_bookdown.yml を編集し次の行を加えます（私は２行目に入れています）。output_dir: docs\nGitHub Pages の機能を使って、公開するための変更です。@GitHub: 新いリポジトリー（リモート・リポジトリと言います）を作成します。ローカル・リポジトリと同じ名前にし、簡単な説明を加えます。左下の窓枠から、Terminal タブを選択します。 以下は例です。git remote add origin のところは、適当に変更してください。RStudio を一旦終了し、もう一度、そのプロジェクトを立ち上げると、右上の窓枠に、Git タブが表示されるはずです。Build から、Build Book ボタンを利用すれば、作成されます。Git タブから: Commit “first build” とし、 Push をします。@GitHub: Settings から、Pages > main > docs と変更すると、公開されます。Code に戻り、の右のギアマークから、","code":"echo \"# ds-book\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin git@github.com:icu-hsuzuki/ds4aj.git # 変更\ngit push -u origin main"},{"path":"tools.html","id":"他の-pc-での作業","chapter":"B IT ツール","heading":"B.1.6.1.1 他の PC での作業","text":"Login GitHub accountCopy SSH address Code>CloneCreate new project using Version Control:Git SSH address setting directory nameEdit README.md test Git Commit Push","code":""},{"path":"tools.html","id":"テンプレートを利用する方法","chapter":"B IT ツール","heading":"B.1.6.2 テンプレートを利用する方法","text":"","code":""},{"path":"tools.html","id":"bookdown-demo","chapter":"B IT ツール","heading":"B.1.6.2.1 bookdown-demo","text":"bookdown の電子書籍（bookdown: Authoring Books Technical Documents R Markdown） の、はじめてみよう（Get started）から、GitHub リポジトリー rstudio/bookdown-demo にリンクがついています。自分の、GitHub アカウントに、ログインします。rstudio/bookdown-demo にアクセスし、Use template から、create new repository を選択します。自分のアカウントの中に、コピーされたリポジトリーがつくられます。上で説明した「GitHub にあるリモート・リポジトリ（Remote Repo）から始める場合」を利用してください。よくできているテンプレートです。しかし、このままでは、公開されません。bookdown: Authoring Books Technical Documents R Markdown には、いくつかの公開方法が書かれていますから、参照してください。","code":""},{"path":"tools.html","id":"jtr13bookdown-template","chapter":"B IT ツール","heading":"B.1.6.2.2 jtr13/bookdown-template","text":"YouTube ビデオ 5分間で、bookdown の本を作成する方法（create bookdown book 5 minutes） で紹介されているものです。自分の、GitHub アカウントに、ログインします。jtr13/bookdown-template にアクセスし、Use template から、create new repository を選択します。自分のアカウントの中に、コピーされたリポジトリーがつくられます。上で説明した「GitHub にあるリモート・リポジトリ（Remote Repo）から始める場合」を利用してください。ビデオの中では、簡単に、GitHub Pages（GitHub のホームページサービス）に、公開する方法が説明されています。最も、大切な部分は、テンプレートがコピーされた、自分のリポジトリの Settings から、Pages を選び、Branch を main > docs とする部分です。このようにすることで、公開されます。上の、「GitHub Pages」で説明していることと同じです。","code":""},{"path":"tools.html","id":"日本語テンプレート","chapter":"B IT ツール","heading":"B.1.6.2.3 日本語テンプレート","text":"bs4_book スタイルでの、簡単な、日本語テンプレートを作成しました。自分の、GitHub アカウントに、ログインします。icu-hsuzuki/bs4_book_template にアクセスし、Use template から、create new repository を選択します。自分のアカウントの中に、コピーされたリポジトリーがつくられます。上で説明した「GitHub にあるリモート・リポジトリ（Remote Repo）から始める場合」を利用してください。まだ、不十分ですが、少しずつ、改訂していきます。\n使い方は、リポジトリの README に、注意点などは、最後の章 Bookdown に書いておく予定です。","code":""},{"path":"tools.html","id":"大きなファイルに関すること","chapter":"B IT ツール","heading":"B.1.7 大きなファイルに関すること","text":"100M 未満のファイルだけを利用するのがよいですが、それより大きいものを、GitHub に挙げようとして、問題が起こることがあります。その対処法を書いておきます。個人的には、大きなデータや、本などを、Build して、100M 以上の、非常に大きな、TeX 関連のファイルができることがありました。備忘録も含めて、書いておきます。","code":""},{"path":"tools.html","id":"大きなファイルの取り除きかた","chapter":"B IT ツール","heading":"B.1.7.1 大きなファイルの取り除きかた","text":"下のサイトからの引用です。非常に分かりやすく書かれています。Terminal で作業を行いますが、いま、Add した場合と、いくつか、前のステップで、Add した場合で、対応の方法が異なります。Tutorial: Removing Large Files Git\nScenario 1: Large File Just Added Recent Commit\ngit rm –cached big_file_name\ngit commit –amend -C HEAD\n\nScenario 2: Large File Committed Prior Recent Commit\nLocating Last “Good” Commit: git log –oneline\nInitiate Rebase Last “Good” Commit Current Commit: git rebase -8464da4\nopen file Git editor (case, Vim), looks something like :\npick -> edit\n\ngit rm –cached csv_building_damage_assessment.csv\ngit commit –amend -C HEAD\n\nScenario 1: Large File Just Added Recent Commit\ngit rm –cached big_file_name\ngit commit –amend -C HEAD\ngit rm –cached big_file_namegit commit –amend -C HEADScenario 2: Large File Committed Prior Recent Commit\nLocating Last “Good” Commit: git log –oneline\nInitiate Rebase Last “Good” Commit Current Commit: git rebase -8464da4\nopen file Git editor (case, Vim), looks something like :\npick -> edit\n\ngit rm –cached csv_building_damage_assessment.csv\ngit commit –amend -C HEAD\nLocating Last “Good” Commit: git log –onelineInitiate Rebase Last “Good” Commit Current Commit: git rebase -8464da4This open file Git editor (case, Vim), looks something like :\npick -> edit\npick -> editgit rm –cached csv_building_damage_assessment.csvgit commit –amend -C HEAD","code":""},{"path":"tools.html","id":"複数のコンピュータから利用する方法","chapter":"B IT ツール","heading":"B.1.8 複数のコンピュータから利用する方法","text":"わたしも、いくつかのコンピュータから、同じGitHub アカウントにアクセスして作業しています。同じSSHキーを、複数のコンピュータで利用することも可能です。特に、コンピュータの更新時に、移行する場合は、元の環境をそのまま使うことも可能で便利です。ただし、基本的には、それぞれのコンピュータで別々のSSHキーを使用するのがお勧めです。問題が発生した時に、個別のコンピュータの課題として解決することができます。（たとえば、RSA 形式で作成した）複数の SSH キーを使用するときは、GitHub アカウントに公開鍵を追加する必要があります。GitHub アカウントに別の公開鍵を追加するには、GitHubにログインし、右上のアイコンの右の三角から、設定（Setting）を選択し、SSH公開鍵（SSH GPG Keys）を選択します。新しい公開鍵を追加（New SSH Key）を選択すると、SSH キーを貼り付けることができます。（リポジトリの左上にある、アカウント名をクリックし現れるダッシュボードの左上の大きなアイコンをクリックしても「アカウント設定」が現れ、SSH GPG Keysを見つけることができると思います。）コピーを貼り付ける時には、RStudio の、Global Option の、Git/SVN タブから、View public key を見ると、コピーできるようになっています。Terminal からコピーするときは、Unix では、pbcopy < ~/.ssh/id_rsa.pub などとします。Windows の場合は、pbcopy が使えない可能性があるので、そのときは、Terminal から、Git Bash を使い、use < ~/.ssh/id_rsa.pub とします。Terminal に慣れておられない方には、上に紹介した、RStudio からコピーする方が簡便かと思います。SSH キーの最後には、コンピュータ名とコンピュータのアカウント名などが入っていると思います。この設定をすれば、どちらのマシンからでもSSH経由でGithubリポジトリにアクセスできるようになります。","code":""},{"path":"tools.html","id":"複数のアカウントを一つのコンピュータから利用する方法","chapter":"B IT ツール","heading":"B.1.9 複数のアカウントを一つのコンピュータから利用する方法","text":"わたしも複数のGitHub アカウントを利用しています。~/.ssh 内に 複数（例では三つ）、ssh-keygen -t rsa でファイル作成\nid_rsa , id_sub1_rsa, id_sub2_rsa\nid_rsa , id_sub1_rsa, id_sub2_rsa上の複数のコンピュータから利用する時に説明してあるように、SSH キーを GitHub に登録~/.ssh 内の config ファイル（~/.ssh/config）を編集　(nano などを利用)~/.gitconfig, ~/.gitconfig_sub1, ~/.gitconfig_sub2 を作成詳しくは、参考にしたサイトを参照してください。","code":""},{"path":"tools.html","id":"共同作業をする場合","chapter":"B IT ツール","heading":"B.1.10 共同作業をする場合","text":"以下では、ひとり管理者（とりまとめ役）がいて、その人がまずは、レポジトリーを作成し、何人かの編集者で、共同編集することを想定して、書きます。内容は本でなくても、プログラムでも、ノートでも構いませんが、イメージしやすくするため、本を編集することを想定して書いていきます。編集に関わる全員が、それぞれ、個人の、GitHub アカウントを作成します。編集に関わる全員が、それぞれ、個人の、GitHub アカウントを作成します。リポジトリを フォーク（Fork）： 共同編集する（本の）レポジトリ（オリジナル・レポジトリと呼ぶことにします26）にいき、フォークします。フォークすることで、編集者のリポジトリに、コピーが作成され、大元のリポジトリ（オリジナル・レポジトリ）の変更を依頼することができます。名前をつけますが、元のものと同じでも、フォークしたことがわかるようにしておいても良いでしょう。リポジトリを フォーク（Fork）： 共同編集する（本の）レポジトリ（オリジナル・レポジトリと呼ぶことにします26）にいき、フォークします。フォークすることで、編集者のリポジトリに、コピーが作成され、大元のリポジトリ（オリジナル・レポジトリ）の変更を依頼することができます。名前をつけますが、元のものと同じでも、フォークしたことがわかるようにしておいても良いでしょう。一回フォーク（Fork）したら、２度目以降は、オリジナル・レポジトリから、フォーク（Fork）する必要はありません。ただし、改訂されているかもしれないので、更新（Sync fork）する必要はあります。GitHub 上の、フォーク（Fork） した、自分のレポジトリを見ると、更新されている場合は、オリジナル・レポジトリーに、Sync することができますから、Sync し27、最新の状態にしておきます。よくみると、オリジナル・レポジトリーとの関係が読み取れるかと思います。（フォークした）リポジトリをクローン: 編集者のコンピュータにフォークして得られたリポジトリを、クローンし、自分のコンピュータ内に、ローカル・リポジトリを作成ます。（フォークした）リポジトリをクローン: 編集者のコンピュータにフォークして得られたリポジトリを、クローンし、自分のコンピュータ内に、ローカル・リポジトリを作成ます。RStudio の右上の、Git タブの右にある、New Branch に、新しい、Branch（編集用枝）を作成します。すると、その右に、Branch 名が記載されます。それが、現在の Branch 名です。その右の三角を押すと、main など、すべての Branch が見えるはずです。編集のための Branch が表示されている（アクティブ）になっていることを確認します28。RStudio の右上の、Git タブの右にある、New Branch に、新しい、Branch（編集用枝）を作成します。すると、その右に、Branch 名が記載されます。それが、現在の Branch 名です。その右の三角を押すと、main など、すべての Branch が見えるはずです。編集のための Branch が表示されている（アクティブ）になっていることを確認します28。編集: 編集者のコンピュータ（RStudio 上）で編集を行います。編集: 編集者のコンピュータ（RStudio 上）で編集を行います。編集結果をコミット : 編集者のコンピュータで編集した後に、簡単な説明を書いて、コミットします。編集結果をコミット : 編集者のコンピュータで編集した後に、簡単な説明を書いて、コミットします。編集結果をプッシュ : フォークした GitHub の自分のリポジトリに、プッシュします。編集結果をプッシュ : フォークした GitHub の自分のリポジトリに、プッシュします。実際にどうなるかをみるために、Build をする場合もあるかもしれませんが、すると、たくさんのファイルが書き換えられます。管理者も、一つ一つ丁寧に見るのは大変ですから、実際に、書き換えた、Rmd ファイルなどだけに、チェックを入れて、Commit + Push するのも良いでしょう。この時点で、RStudio 上の、Branch を main に戻しておくと良いでしょう29。プル依頼を作成 : フォークした自分の（リモート）リポジトリで、編集の内容を簡単に記述して、プルリクエスト（Pull Request）をします。編集して、プッシュした、Branch を選択し、オリジナル・レポジトリーと異なった状態であることを確認します。Pull Request を選択します。オリジナル・レポジトリーの管理者は、修正をしやすいように、修正の要点を書いておきます。ここまでで終了です。管理者にメールが届きます。このあと、編集者が何をするか、確認してください。管理者：編集結果の確認 : オリジナル・リポジトリの所有者は、編集結果を確認し、承認する場合は、main に、統合（マージ）します。統合（マージ）すると、Pull Request をした編集者に、メールが届きます。変更の同期: 編集者は、承認された、オリジナル・リポジトリを、フォークした自分のリポジトリに、同期（Sync Fork）させます。自分のコンピュータ上の、ローカル・リポジトリの　main branch も（アクティブな、Branch 名を確認して）Pull をして、更新しておくと良いでしょう。少し、複雑な、変更の場合には、注意が出ます。詳細は省略しますが、Terminal で、一つの選択肢の、git config pull.rebase true # rebase を入力して、それから、もう一度、Pull をすると良いでしょう。これによって、オリジナル・リポジトリと同じ状態を維持することができます。","code":""},{"path":"tools.html","id":"要点","chapter":"B IT ツール","heading":"B.1.10.1 要点","text":"フォークして作成したリポジトリ（リモートも、ローカルも）の、main branch は、オリジナル・レポジトリと同じ状態にしておく。編集は、編集用に、branch を作成して、その branch を、リモート・リポジトリにプッシュして、プル・リクエストを行う。プル・リクエストの結果が反映されたら、リモートも、ローカルも、同期しておく。プル・リクエストが反映される前に、また編集するときは、別の branch を作成して、また、プル・リクエストをするのがよいでしょう。管理者は、merge で、編集結果を反映するときに、注意を要しますから、管理者が編集結果を反映しやすいように、丁寧に、プル・リクエストのときの説明をしておくのがよいと思います。","code":""},{"path":"tools.html","id":"参考にしたサイト","chapter":"B IT ツール","heading":"B.1.11 参考にしたサイト","text":"","code":""},{"path":"tools.html","id":"git---github---rstudio-関連","chapter":"B IT ツール","heading":"B.1.11.1 Git - GitHub - RStudio 関連","text":"git – everything local\n、Documentation など\n、Documentation などGitHub Docs: Hellow World\n基本的なことがコンパクトにまとまっている GitHub のサイトです。日本語もサポートしています。\n基本的なことがコンパクトにまとまっている GitHub のサイトです。日本語もサポートしています。Introduction Data Science, Rafael . Irizarry\nGit GitHub\nedX の、データサイエンスのコースの教科書に入っています。よく、まとまっていると思います。原語は英語ですが、Google などの翻訳機能を使っても、十分理解することができると思います。Git と GitHub の概要から、Bookdown パッケージによる、電子書籍の執筆の前までは、基本的に、この教科書を参考にしていますが、それぞれのステップでの、スクリーンショットもたくさん掲載されており、確認がしやすいようになっています。\nGit GitHubedX の、データサイエンスのコースの教科書に入っています。よく、まとまっていると思います。原語は英語ですが、Google などの翻訳機能を使っても、十分理解することができると思います。Git と GitHub の概要から、Bookdown パッケージによる、電子書籍の執筆の前までは、基本的に、この教科書を参考にしていますが、それぞれのステップでの、スクリーンショットもたくさん掲載されており、確認がしやすいようになっています。Git-GitHub-RStudio: 個人的メモ","code":""},{"path":"tools.html","id":"bookdown-関連","chapter":"B IT ツール","heading":"B.1.11.2 Bookdown 関連","text":"bookdown book: https://bookdown.org/yihui/bookdown/bookdown book: https://bookdown.org/yihui/bookdown/bookdown package reference site: https://pkgs.rstudio.com/bookdownThe bookdown package reference site: https://pkgs.rstudio.com/bookdownHow create bookdown book 5 minutes: https://www.youtube.com/watch?v=m5D-yoH416YHow create bookdown book 5 minutes: https://www.youtube.com/watch?v=m5D-yoH416Y","code":""},{"path":"tools.html","id":"複数アカウント複数のキー関連","chapter":"B IT ツール","heading":"B.1.11.3 複数アカウント・複数のキー関連","text":"Using github account multiple PCs複数のGitHubアカウントを使い分けたい時の設定方法とTipsAdding new SSH key GitHub account","code":""},{"path":"bookdown-original.html","id":"bookdown-original","chapter":"C Bookdown","heading":"C Bookdown","text":"","code":""},{"path":"bookdown-original.html","id":"about","chapter":"C Bookdown","heading":"C.1 About","text":"sample book written Markdown. can use anything Pandoc’s Markdown supports; example, math equation \\(^2 + b^2 = c^2\\).","code":""},{"path":"bookdown-original.html","id":"usage","chapter":"C Bookdown","heading":"C.1.1 Usage","text":"bookdown chapter .Rmd file, .Rmd file can contain one (one) chapter. chapter must start first-level heading: # good chapter, can contain one (one) first-level heading.Use second-level higher headings within chapters like: ## short section ### even shorter section.index.Rmd file required, also first book chapter. homepage render book.","code":""},{"path":"bookdown-original.html","id":"render-book","chapter":"C Bookdown","heading":"C.1.2 Render book","text":"can render HTML version example book without changing anything:Find Build pane RStudio IDE, andFind Build pane RStudio IDE, andClick Build Book, select output format, select “formats” ’d like use multiple formats book source files.Click Build Book, select output format, select “formats” ’d like use multiple formats book source files.build book R console:render example PDF bookdown::pdf_book, ’ll need install XeLaTeX. recommended install TinyTeX (includes XeLaTeX): https://yihui.org/tinytex/.","code":"\nbookdown::render_book()"},{"path":"bookdown-original.html","id":"preview-book","chapter":"C Bookdown","heading":"C.1.3 Preview book","text":"work, may start local server live preview HTML book. preview update edit book save individual .Rmd files. can start server work session using RStudio add-“Preview book”, R console:","code":"\nbookdown::serve_book()"},{"path":"bookdown-original.html","id":"hello-bookdown","chapter":"C Bookdown","heading":"C.2 Hello bookdown","text":"chapters start first-level heading followed chapter title, like line . one first-level heading (#) per .Rmd file.","code":""},{"path":"bookdown-original.html","id":"a-section","chapter":"C Bookdown","heading":"C.2.1 A section","text":"chapter sections start second-level (##) higher heading followed section title, like sections . can many want within chapter.","code":""},{"path":"bookdown-original.html","id":"an-unnumbered-section","chapter":"C Bookdown","heading":"An unnumbered section","text":"Chapters sections numbered default. un-number heading, add {.unnumbered} shorter {-} end heading, like section.","code":""},{"path":"bookdown-original.html","id":"cross","chapter":"C Bookdown","heading":"C.3 Cross-references","text":"Cross-references make easier readers find link elements book.","code":""},{"path":"bookdown-original.html","id":"chapters-and-sub-chapters","chapter":"C Bookdown","heading":"C.3.1 Chapters and sub-chapters","text":"two steps cross-reference heading:Label heading: # Hello world {#nice-label}.\nLeave label like automated heading generated based heading title: example, # Hello world = # Hello world {#hello-world}.\nlabel un-numbered heading, use: # Hello world {-#nice-label} {# Hello world .unnumbered}.\nLeave label like automated heading generated based heading title: example, # Hello world = # Hello world {#hello-world}.label un-numbered heading, use: # Hello world {-#nice-label} {# Hello world .unnumbered}.Next, reference labeled heading anywhere text using \\@ref(nice-label); example, please see Chapter C.3.\nprefer text link instead numbered reference use: text want can go .\nprefer text link instead numbered reference use: text want can go .","code":""},{"path":"bookdown-original.html","id":"captioned-figures-and-tables","chapter":"C Bookdown","heading":"C.3.2 Captioned figures and tables","text":"Figures tables captions can also cross-referenced elsewhere book using \\@ref(fig:chunk-label) \\@ref(tab:chunk-label), respectively.See Figure C.1.\nFigure C.1: nice figure!\nDon’t miss Table C.1.Table C.1: nice table!","code":"\npar(mar = c(4, 4, .1, .1))\nplot(pressure, type = 'b', pch = 19)\nknitr::kable(\n  head(pressure, 10), caption = 'Here is a nice table!',\n  booktabs = TRUE\n)"},{"path":"bookdown-original.html","id":"parts","chapter":"C Bookdown","heading":"C.4 Parts","text":"can add parts organize one book chapters together. Parts can inserted top .Rmd file, first-level chapter heading file.Add numbered part: # (PART) Act one {-} (followed # chapter)Add unnumbered part: # (PART\\*) Act one {-} (followed # chapter)Add appendix special kind un-numbered part: # (APPENDIX) stuff {-} (followed # chapter). Chapters appendix prepended letters instead numbers.","code":""},{"path":"bookdown-original.html","id":"footnotes-and-citations","chapter":"C Bookdown","heading":"C.5 Footnotes and citations","text":"","code":""},{"path":"bookdown-original.html","id":"footnotes","chapter":"C Bookdown","heading":"C.5.1 Footnotes","text":"Footnotes put inside square brackets caret ^[]. Like one 30.","code":""},{"path":"bookdown-original.html","id":"citations","chapter":"C Bookdown","heading":"C.5.2 Citations","text":"Reference items bibliography file(s) using @key.example, using bookdown package31 (check last code chunk index.Rmd see citation key added) sample book, built top R Markdown knitr32 (citation added manually external file book.bib).\nNote .bib files need listed index.Rmd YAML bibliography key.bs4_book theme makes footnotes appear inline click . example book, added csl: chicago-fullnote-bibliography.csl index.Rmd YAML, include .csl file. download new style, recommend: https://www.zotero.org/styles/RStudio Visual Markdown Editor can also make easier insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations","code":""},{"path":"bookdown-original.html","id":"blocks","chapter":"C Bookdown","heading":"C.6 Blocks","text":"","code":""},{"path":"bookdown-original.html","id":"equations","chapter":"C Bookdown","heading":"C.6.1 Equations","text":"equation.\\[\\begin{equation}\n  f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k}\n  \\tag{C.1}\n\\end{equation}\\]may refer using \\@ref(eq:binom), like see Equation (C.1).","code":""},{"path":"bookdown-original.html","id":"theorems-and-proofs","chapter":"C Bookdown","heading":"C.6.2 Theorems and proofs","text":"Labeled theorems can referenced text using \\@ref(thm:tri), example, check smart theorem C.1.Theorem C.1  right triangle, \\(c\\) denotes length hypotenuse\n\\(\\) \\(b\\) denote lengths two sides, \n\\[^2 + b^2 = c^2\\]Read https://bookdown.org/yihui/bookdown/markdown-extensions--bookdown.html.","code":""},{"path":"bookdown-original.html","id":"callout-blocks","chapter":"C Bookdown","heading":"C.6.3 Callout blocks","text":"bs4_book theme also includes special callout blocks, like .rmdnote.can use markdown inside block.user define appearance blocks LaTeX output.may also use: .rmdcaution, .rmdimportant, .rmdtip, .rmdwarning block name.R Markdown Cookbook provides help use custom blocks design callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html","code":"\nhead(beaver1, n = 5)\n#>   day time  temp activ\n#> 1 346  840 36.33     0\n#> 2 346  850 36.34     0\n#> 3 346  900 36.35     0\n#> 4 346  910 36.42     0\n#> 5 346  920 36.55     0"},{"path":"bookdown-original.html","id":"sharing-your-book","chapter":"C Bookdown","heading":"C.7 Sharing your book","text":"","code":""},{"path":"bookdown-original.html","id":"publishing","chapter":"C Bookdown","heading":"C.7.1 Publishing","text":"HTML books can published online, see: https://bookdown.org/yihui/bookdown/publishing.html","code":""},{"path":"bookdown-original.html","id":"pages","chapter":"C Bookdown","heading":"C.7.2 404 pages","text":"default, users directed 404 page try access webpage found. ’d like customize 404 page instead using default, may add either _404.Rmd _404.md file project root use code /Markdown syntax.","code":""},{"path":"bookdown-original.html","id":"metadata-for-sharing","chapter":"C Bookdown","heading":"C.7.3 Metadata for sharing","text":"Bookdown HTML books provide HTML metadata social sharing platforms like Twitter, Facebook, LinkedIn, using information provide index.Rmd YAML. setup, set url book path cover-image file. book’s title description also used.bs4_book provides enhanced metadata social sharing, chapter shared unique description, auto-generated based content.Specify book’s source repository GitHub repo _output.yml file, allows users view chapter’s source file suggest edit. Read features output format :https://pkgs.rstudio.com/bookdown/reference/bs4_book.htmlOr use:","code":"\n?bookdown::bs4_book"},{"path":"bookdown-original.html","id":"references","chapter":"C Bookdown","heading":"References","text":"","code":""},{"path":"todo-list.html","id":"todo-list","chapter":"D To Do リスト","heading":"D To Do リスト","text":"この文書についてはじめに1.1 データサイエンスとは\n1.1.1 なぜ、データサイエンスが最近注目されているのか\n1.1.2 なぜ、一人ひとりが、データサイエンスを、学ぶ必要があるのでしょうか\n1.1.3 AI の活用\n1.1.1 なぜ、データサイエンスが最近注目されているのか1.1.2 なぜ、一人ひとりが、データサイエンスを、学ぶ必要があるのでしょうか1.1.3 AI の活用1.2 「データサイエンスを始めましょう」の特徴\n1.2.1 学習者として想定しているのは\n1.2.2 オープン・パブリックデータの活用\n1.2.3 世界のデータをみること\n1.2.4 目標としていること\n1.2.1 学習者として想定しているのは1.2.2 オープン・パブリックデータの活用1.2.3 世界のデータをみること1.2.4 目標としていること1.3 学習方法について1.4 参考学ぶ内容　2.1 データサイエンス入門2.2 第一部　パブリックデータ2.3 第二部　基本2.4 第三部　国際機関などのデータの活用2.5 第四部　探索的データ分析 Exploratory Data Analysis2.6 第五部　分析例2.7 付録はじめてのデータサイエンス3.1 データサイエンスの実際3.2 R のパッケージを活用\n3.2.1 準備 Setup\n3.2.2 データ取得 Import data\n3.2.3 データ構造の確認\n3.2.4 必要に応じて整形 Transform data\n3.2.5 視覚化 data visualization\n3.2.6 データの理解 Understand data\n3.2.7 さまざまな視覚化\n3.2.1 準備 Setup3.2.2 データ取得 Import data3.2.3 データ構造の確認3.2.4 必要に応じて整形 Transform data3.2.5 視覚化 data visualization3.2.6 データの理解 Understand data3.2.7 さまざまな視覚化3.3 練習3.4 プロジェクト3.5 まとめ世界開発指標4.1 世界銀行（World Bank）\n4.1.1 世界銀行オープンデータ\n4.1.2 データカタログ\n4.1.3 世界開発指標（WDI）\n4.1.4 オープンデータの定義（Open Data Defined）\n4.1.1 世界銀行オープンデータ4.1.2 データカタログ4.1.3 世界開発指標（WDI）4.1.4 オープンデータの定義（Open Data Defined）4.2 世界開発指標（WDI）\n4.2.1 世界のさまざまな課題\n4.2.2 ダッシュボード・データの取得・データコード\n4.2.1 世界のさまざまな課題4.2.2 ダッシュボード・データの取得・データコード4.3 世界銀行以外の国際機関のパブリックデータ4.4 持続的開発目標（SDGs） データ4.5 課題PART PUBLIC DATAPublic Data5.1 オープンデータ\n5.1.1 Open Government Data Toolkit: Open Data Defined\n5.1.1 Open Government Data Toolkit: Open Data Defined5.2 日本から世界を見る5.3 世界銀行（World Bank）\n5.3.1 世界開発指数（World Development Indicator (WDI)）\n5.3.2 World Bank: WDI - World Development Indicaters\n5.3.3 世界開発指標（World Development Indicator）\n5.3.4 例\n5.3.1 世界開発指数（World Development Indicator (WDI)）5.3.2 World Bank: WDI - World Development Indicaters5.3.3 世界開発指標（World Development Indicator）5.3.4 例5.4 世界のさまざまな課題から見る5.5 OECD5.6 UN Data5.7 World Data5.8 EurostatPART II BASICSR Studio で R6.1 はじめに6.2 R と R Studio6.3 R と R Studio のインストール\n6.3.1 R のインストール\n6.3.2 R Studio の インストール\n6.3.3 動作確認\n6.3.4 トラブル・シューティング（１）\n6.3.1 R のインストール6.3.2 R Studio の インストール6.3.3 動作確認6.3.4 トラブル・シューティング（１）6.4 クラウド - Posit Cloud\n6.4.1 クラウドサービス　Start Posit Cloud\n6.4.2 PositCloud Shared Project\n6.4.3 Posit Primers Cheat Sheet\n6.4.1 クラウドサービス　Start Posit Cloud6.4.2 PositCloud Shared Project6.4.3 Posit Primers Cheat Sheet6.5 R のその他の利用方法6.5.1 Google colab で R6.5.2 CoCalc で R と RMarkdownR Markdown7.1 Reproducible Literate Programming\n7.1.1 目的、問いなど\n7.1.2 データについて\n7.1.3 コードについて\n7.1.4 グラフについて\n7.1.5 まとめ：R Markdown の目的\n7.1.1 目的、問いなど7.1.2 データについて7.1.3 コードについて7.1.4 グラフについて7.1.5 まとめ：R Markdown の目的7.2 準備：パッケージのインストール7.3 R Notebook7.4 日本語のテンプレート7.5 R Markdown いくつかの Output7.6 YouTube Video - rmarkdown\n-7.6.1 RMarkdown で PDF を作成するときの注意R Basics8.1 プロジェクト - Project8.2 コンソールで実行 - Run Console\n8.2.1 最初の四つ\n8.2.2 アサインメント、ヘルプ\n8.2.3 おすすめ\n8.2.4 練習\n8.2.1 最初の四つ8.2.2 アサインメント、ヘルプ8.2.3 おすすめ8.2.4 練習8.3 RStudio について\n8.3.1 四つの窓枠とタブ Four Panes Tabs\n8.3.1 四つの窓枠とタブ Four Panes Tabs8.4 R Script 実行記録\n8.4.1 R Script の作成\n8.4.2 R Script による実行\n8.4.3 練習\n8.4.4 Tips\n8.4.1 R Script の作成8.4.2 R Script による実行8.4.3 練習8.4.4 Tips8.5 パッケージ - Packages\n8.5.1 パッケージのインストール\n8.5.2 備考\n8.5.1 パッケージのインストール8.5.2 備考8.6 練習問題 Posit Primers\n8.6.1 最初の演習　Basics – r4ds: Explore, \n8.6.1 最初の演習　Basics – r4ds: Explore, I8.7 参考文献 References8.8 YouTube Video - getstartedPART III INSTITUTIONAL DATAWorld Bank9.1 World Development Indicator (WDI)\n9.1.1 指標 Indicators (WDI)\n9.1.2 指標 WDI (World Development Indicators)\n9.1.3 指標 のコード、WDI code を探してみよう\n9.1.4 指標 WDIの例\n9.1.5 練習 1. - 調べてみたい WDI 指標とそのコード\n9.1.1 指標 Indicators (WDI)9.1.2 指標 WDI (World Development Indicators)9.1.3 指標 のコード、WDI code を探してみよう9.1.4 指標 WDIの例9.1.5 練習 1. - 調べてみたい WDI 指標とそのコード9.2 WDI パッケージ\n9.2.1 指標 WDI 検索\n9.2.2 指標 WDI データのダウンロード\n9.2.1 指標 WDI 検索9.2.2 指標 WDI データのダウンロード9.3 可視化 Visualization\n9.3.1 グラフ 1\n9.3.2 グラフ 2\n9.3.3 テンプレート Templates\n-9.4 課題　Assignment\n9.3.1 グラフ 19.3.2 グラフ 29.3.3 テンプレート Templates\n-9.4 課題　AssignmentPART IV EDA探索的データ解析10.1 探索的データ解析 (EDA)とは10.2 探索的データ解析 (EDA) の一例\n10.2.1 データの取得と読み込み - Data Import\n10.2.2 データ変形・整形 - Data Transformation\n10.2.3 可視化 Data Visualization\n10.2.4 データモデリング Data Modeling\n10.2.1 データの取得と読み込み - Data Import10.2.2 データ変形・整形 - Data Transformation10.2.3 可視化 Data Visualization10.2.4 データモデリング Data ModelingPART V EXAMPLESExample 1APPENDIX日本語の扱いについてA.1 日本語・中国語・韓国語\n.1.1 パッケージをロード\n.1.1 パッケージをロードA.2 Base R でタイトルに日本語A.3 列名や、データに日本語A.4 kable で表示A.5 ggplot でグラフを作成A.6 備考：.7 参考：日本語の表示について\n.7.1 データファイルの読み込み\n.7.2 図の中のテキスト\n.7.3 R Markdown の出力\n.7.4 bookdown\n.7.5 参考としたもの\n.7.1 データファイルの読み込みA.7.2 図の中のテキストA.7.3 R Markdown の出力A.7.4 bookdownA.7.5 参考としたものIT ツールB.1 Git と GitHub\nB.1.1 概要\nB.1.2 はじめかた\nB.1.3 GitHub にあるリモート・リポジトリ（Remote Repo）から始める場合\nB.1.4 自分のコンピュータのリポジトリ（Local Repo）から始める場合\nB.1.5 GitHub Pages について\nB.1.6 Bookdown パッケージによる、電子書籍の執筆\nB.1.7 大きなファイルに関すること\nB.1.8 複数のコンピュータから利用する方法\nB.1.9 複数のアカウントを一つのコンピュータから利用する方法\nB.1.10 共同作業をする場合\nB.1.11 参考にしたサイト\nB.1.1 概要B.1.2 はじめかたB.1.3 GitHub にあるリモート・リポジトリ（Remote Repo）から始める場合B.1.4 自分のコンピュータのリポジトリ（Local Repo）から始める場合B.1.5 GitHub Pages についてB.1.6 Bookdown パッケージによる、電子書籍の執筆B.1.7 大きなファイルに関することB.1.8 複数のコンピュータから利用する方法B.1.9 複数のアカウントを一つのコンピュータから利用する方法B.1.10 共同作業をする場合B.1.11 参考にしたサイトBookdownTo list","code":""}]
